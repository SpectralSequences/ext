var N=null,E="",T="t",U="u",searchIndex={};
var R=["min_degree","result","max_degree","algebraicobjectsbundle","finitemodule","string","error","config","from_vec","with_capacity","rust_ext","vector_container","FpVector2","FpVector3","FpVector5","FpVectorGeneric","vectorcontainer","dimension","fpvector","set_slice","clear_slice","iter_mut","subspace","set_to_zero","AdemAlgebra","adembasiselement","ordering","BOCKSTEIN_TABLE","MilnorAlgebra","next_degree","basis_table","basis_element_to_index_map","basis_element_from_index","milnorbasiselement","basis_element_to_index","generate_basis_generic","multiply","ademalgebra","milnoralgebra","iresult","algebraparsenode","moduleparsenode","option","hashmap","algebra","algebraany","compute_basis","basis_element_to_string","element_to_string","degree_shift","mutexguard","quasiinverse","matrix","FiniteDimensionalModule","This function will panic if you call it with input such…","from_json","generator_degree","generator_index","gen_names","freemoduletableentry","operationgeneratorpair","quasi_inverse","freemodule","extend_by_zero","get_matrix","FinitelyPresentedModule","generators","add_generators","module_gens_from_json","gen_idx_to_fp_idx","fp_idx_to_gen_idx","chain_complex","zero_module","max_computed_degree","module","differential","compute_through_bidegree","max_computed_homological_degree","homology_gen_to_cocyle","graded_dimension_string","source","target","freemodulehomomorphism","homspace","cohomology_basis","resolution","differentials","add_structline","resolutioninner","display","try_from","try_into","borrow_mut","type_id","to_string","borrow","typeid","rust_ext::once","to_owned","rust_ext::fp_vector","clone_into","rust_ext::matrix","rust_ext::block_structure","rust_ext::algebra","rust_ext::field","rust_ext::adem_algebra","rust_ext::milnor_algebra","into_iter","rust_ext::steenrod_parser","rust_ext::steenrod_evaluator","rust_ext::module","rust_ext::module_homomorphism","rust_ext::finite_dimensional_module","rust_ext::free_module","rust_ext::free_module_homomorphism","rust_ext::finitely_presented_module","rust_ext::chain_complex","rust_ext::hom_space","rust_ext::hom_pullback","rust_ext::hom_complex","rust_ext::resolution","rust_ext::resolution_homomorphism","apply_to_basis_element","max_kernel_degree","set_quasi_inverse","set_kernel","set_homology_basis","homology_basis","max_homology_degree","optionmodule","zerohomomorphism","homology_dimension","hompullback","set_cohomology_basis","max_cohomology_degree","reduce_limbs","vector_container_mut","min_index","restore_slice","limbs_mut","limb_mask","shift_assign","set_entry","add_basis_element","to_vector","shift_add","shift_right_add","shift_left_add","algebra_type","multiply_basis_elements","multiply_basis_element_by_element","multiply_element_by_basis_element","multiply_element_by_element","default_filtration_one_products","json_to_basis","json_from_basis","decompose_basis_element","relations_to_check","Returns the prime the algebra is over.","Gets the dimension of the algebra in degree `degree`.","Converts a JSON object into a basis element. The way basis…","Converts a basis element into a string for display.","act_on_basis","act_by_element","generator_list_string","limbbitindexpair","algebrabasiselt","fpvector2","fpvector3","fpvector5","fpvectorgeneric","formatter","index_mut","description","serialize","deserialize","AlgebraicObjectsBundle","ModuleFileNotFoundError","InvalidAlgebraError","OnceBiVec","TempStorage","LimbBitIndexPair","VectorContainer","FpVectorIterator","FpVectorT","QuasiInverse","GeneratorBasisEltPair","BlockStructure","AlgebraAny","AdemBasisElement","MilnorProfile","MilnorBasisElement","PPartMultiplier","ParseError","AlgebraBasisElt","AlgebraParseNode","ModuleParseNode","UnknownBasisElementError","ZeroModule","UnknownModuleTypeError","ModuleFailedRelationError","FiniteModule","OptionModule","ZeroHomomorphism","ModuleHomomorphism","FiniteDimensionalModuleT","OperationGeneratorPair","FreeModuleTableEntry","FreeModule","FreeModuleHomomorphism","FPMIndexTable","ChainComplexConcentratedInDegreeZero","ChainComplexGrading","ChainComplex","CochainComplex","HomPullback","HomComplex","ResolutionInner","Resolution","ResolutionHomomorphism","DegreeError","ext_websocket","permanent","algebra_name","class_names","page_list","AddProductDifferential","AddProductType","AddPermanentClass","AddDifferential","SetClassName","BlockRefresh","AddProduct","Resolving","QueryTableResult","Construct","ConstructJson","QueryTable","SetStructline","SetDifferential","SetPageList","RequestHistory","ReturnHistory","construct","sseqchoice","message","ext_websocket::sseq","ext_websocket::actions","act_resolution","act_sseq","resolving","constructjson","querytable","recipient","addproductdifferential","addproducttype","addpermanentclass","adddifferential","setclassname","blockrefresh","addproduct","querytableresult","setstructline","setdifferential","setpagelist","requesthistory","returnhistory","response","on_message","wsresult","ResolutionManager","SseqManager","Differential","ProductItem","ClassState","AddClass","SetClass","Recipient","SseqChoice","Complete","add_product","moduleresolution"];
searchIndex["bivec"]={"doc":E,"i":[[3,"BiVec","bivec","A BiVec is like a Vec, except we allow indices to be…",N,N],[12,"data",E,E,0,N],[12,R[0],E,E,0,N],[11,"new",E,E,0,[[["i32"]],["self"]]],[11,R[8],E,E,0,[[["vec"],["i32"]],["self"]]],[11,R[9],E,E,0,[[["i32"]],["self"]]],[11,R[0],E,E,0,[[["self"]],["i32"]]],[11,R[2],E,"This returns the largest degree in the bivector. This is…",0,[[["self"]],["i32"]]],[11,"len",E,"This returns the \"length\" of the bivector, defined to be…",0,[[["self"]],["i32"]]],[11,"push",E,E,0,[[["self"],[T]]]],[11,"last",E,E,0,[[["self"]],[[R[42]],[T]]]],[11,"iter",E,E,0,[[["self"]],["iter"]]],[11,R[21],E,E,0,[[["self"]],["itermut"]]],[11,"iter_enum",E,E,0,[[["self"]]]],[11,"extend_with",E,"Extends the bivec such that `max_degree()` is at least…",0,[[["self"],["f"],["i32"]]]],[11,R[98],E,E,0,[[["self"]],[T]]],[11,R[100],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[90],E,E,0,[[[U]],[R[1]]]],[11,R[91],E,E,0,[[],[R[1]]]],[11,R[95],E,E,0,[[["self"]],[T]]],[11,R[92],E,E,0,[[["self"]],[T]]],[11,R[93],E,E,0,[[["self"]],[R[96]]]],[11,"clone",E,E,0,[[["self"]],["bivec"]]],[11,"fmt",E,E,0,[[["self"],[R[171]]],[R[1]]]],[11,"index",E,E,0,[[["self"],["i32"]],[T]]],[11,R[172],E,E,0,[[["self"],["i32"]],[T]]],[11,R[174],E,E,0,[[["self"],["s"]],[R[1]]]],[11,R[175],E,E,0,[[["d"]],[R[1]]]]],"p":[[3,"BiVec"]]};
searchIndex["ext_websocket"]={"doc":E,"i":[[3,R[270],R[221],"ResolutionManager is a struct that manipulates an…",N,N],[12,"sender",E,E,0,N],[12,"is_unit",E,E,0,N],[12,R[85],E,E,0,N],[3,R[271],E,E,N,N],[12,"sender",E,E,1,N],[12,"sseq",E,E,1,N],[12,"unit_sseq",E,E,1,N],[3,"Server",E,"The server implements the `ws::Handler` trait. It doesn't…",N,N],[12,"server_sender",E,E,2,N],[12,"sseq_sender",E,E,2,N],[12,"res_sender",E,E,2,N],[12,"history",E,E,2,N],[5,"main",E,E,N,[[]]],[0,"sseq",E,E,N,N],[3,R[272],R[246],E,N,N],[12,R[52],E,E,3,N],[12,"source_dim",E,E,3,N],[12,"target_dim",E,E,3,N],[12,"column_to_pivots_row",E,E,3,N],[12,R[6],E,E,3,N],[3,"Product",E,"Fields * `matrices[x][y]` : This encodes the matrix of the…",N,N],[12,"name",E,E,4,N],[12,"x",E,E,4,N],[12,"y",E,E,4,N],[12,"left",E,E,4,N],[12,"user",E,E,4,N],[12,R[222],E,E,4,N],[12,R[75],E,E,4,N],[12,"matrices",E,E,4,N],[3,R[273],E,E,N,N],[12,"name",E,E,5,N],[12,"mult_x",E,E,5,N],[12,"mult_y",E,E,5,N],[12,"matrices",E,E,5,N],[3,"Sseq",E,"Here are some blanket assumptions we make about the order…",N,N],[12,"p",E,E,6,N],[12,"name",E,E,6,N],[12,"min_x",E,E,6,N],[12,"min_y",E,E,6,N],[12,"block_refresh",E,E,6,N],[12,"sender",E,E,6,N],[12,R[225],E,E,6,N],[12,"product_name_to_index",E,E,6,N],[12,"products",E,E,6,N],[12,"classes",E,E,6,N],[12,R[224],E,E,6,N],[12,R[86],E,E,6,N],[12,"permanent_classes",E,E,6,N],[12,"zeros",E,E,6,N],[12,"page_classes",E,E,6,N],[4,R[274],E,E,N,N],[13,"Error",E,E,7,N],[13,"Done",E,E,7,N],[13,"InProgress",E,E,7,N],[5,"express_basis",E,"Given a vector `elt`, a subspace `zeros` of the total…",N,[[[R[18]],[R[42],[R[22]]],[R[22]]],[["u32"],["vec",["u32"]]]]],[17,"MIN_PAGE",E,E,N,N],[17,"INFINITY",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_ClassState",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_ClassState",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_ProductItem",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_ProductItem",E,E,N,N],[11,"new",E,E,3,[[["u32"],["usize"]],["self"]]],[11,R[23],E,E,3,[[["self"]]]],[11,"add",E,E,3,[[["self"],[R[42],[R[18]]],[R[18]]]]],[11,"get_source_target_pairs",E,E,3,[[["self"]],["vec"]]],[11,"reduce_target",E,"Given a subspace of the target space, project the target…",3,[[["self"],[R[22]]]]],[11,"evaluate",E,"This evaluates the differential on `source`, adding the…",3,[[["self"],[R[18]],[R[18]]]]],[11,"prime",E,E,3,[[["self"]],["u32"]]],[11,"new",E,E,6,[[[R[244]],["u32"],["i32"],[R[42],["sender"]],["sender",[R[245]]]],["self"]]],[11,"clear",E,"This clears out all the user actions. This is intended to…",6,[[["self"]]]],[11,"refresh_all",E,E,6,[[["self"]]]],[11,"add_page",E,"Adds a page to the page list, which is the list of pages…",6,[[["self"],["i32"]]]],[11,"add_zeros",E,E,6,[[["self"],[R[18]],["i32"]]]],[11,"allocate_differential_matrix",E,"Initializes `differentials[x][y][r]`. It sets the…",6,[[["self"],["i32"]]]],[11,"allocate_zeros_subspace",E,E,6,[[["self"],["i32"]]]],[11,R[36],E,"Given a class `class` at `(x, y)` and a Product object…",6,[[["self"],[R[18]],["i32"],["product"]],[R[42]]]],[11,"leibniz",E,"Apply the Leibniz rule to obtain new differentials. The…",6,[[["self"],[R[18]],["usize"],[R[18]],["i32"],[R[42],[R[18]]]],[R[42]]]],[11,"compute_edges",E,"Computes products whose source is at (x, y).",6,[[["self"],["i32"]]]],[11,"compute_next_page_no_d",E,"Compute the classes in next page assuming there is no…",6,[[["u32"],[R[22]]]]],[11,"compute_next_page_with_d",E,"Compute the classes in next page assuming there might be a…",6,[[["self"],["i32"]]]],[11,"compute_classes",E,"Arguments * `refresh_edge` - Whether to automatically call…",6,[[["self"],["bool"],["i32"]]]],[11,"send_class_data",E,E,6,[[["self"],["i32"]]]],[11,"send",E,E,6,[[["self"],[R[245]]]]],[11,"product_defined",E,E,6,[[["self"],["product"],["i32"]],["bool"]]],[11,"class_defined",E,E,6,[[["self"],["i32"]],["bool"]]],[11,"get_page_zeros",E,E,6,[[["self"],["i32"]],[R[22]]]],[11,"get_page_classes",E,E,6,[[["self"],["i32"]]]],[11,"get_differentials_hitting",E,"Get a list of r for which there is a d_r differential…",6,[[["self"],["i32"]],[["vec",["i32"]],["i32"]]]],[11,"set_class",E,"This function should only be called when everything to the…",6,[[["self"],["usize"],["i32"]]]],[11,"set_class_name",E,E,6,[[["self"],["usize"],["i32"],[R[5]]]]],[11,"add_differential",E,"Add a differential starting at (x, y). This mutates the…",6,[[["self"],[R[18]],[R[18]],["i32"]]]],[11,"add_differential_propagate",E,"This function recursively propagates differentials. If…",6,[[["self"],["usize"],[R[18]],["i32"],[R[42]]]]],[11,"add_permanent_class",E,E,6,[[["self"],[R[18]],["i32"]]]],[11,"add_product_type",E,"Add a product to the list of products, but don't add any…",6,[[["self"],["bool"],["i32"],[R[5]]]]],[11,"add_product_differential",E,E,6,[[["self"],[R[5]]]]],[11,"repropagate_product",E,E,6,[[["self"],["usize"]]]],[11,R[280],E,E,6,[[["self"],["bool"],["vec"],["i32"],[R[5]]]]],[0,"actions",R[221],E,N,N],[3,"Message",R[247],E,N,N],[12,"recipients",E,E,8,N],[12,"sseq",E,E,8,N],[12,"action",E,E,8,N],[3,R[229],E,E,N,N],[12,"x",E,E,9,N],[12,"y",E,E,9,N],[12,"r",E,E,9,N],[12,R[80],E,E,9,N],[12,R[81],E,E,9,N],[3,R[227],E,E,N,N],[12,"x",E,E,10,N],[12,"y",E,E,10,N],[12,"class",E,E,10,N],[12,"name",E,E,10,N],[12,R[222],E,E,10,N],[3,R[228],E,E,N,N],[12,"x",E,E,11,N],[12,"y",E,E,11,N],[12,"class",E,E,11,N],[3,R[230],E,E,N,N],[12,"x",E,E,12,N],[12,"y",E,E,12,N],[12,"idx",E,E,12,N],[12,"name",E,E,12,N],[3,"Clear",E,E,N,N],[3,R[231],E,"This blocks the sseq object from recomputing classes and…",N,N],[12,"block",E,E,13,N],[3,R[275],E,E,N,N],[12,"x",E,E,14,N],[12,"y",E,E,14,N],[12,"num",E,E,14,N],[3,R[232],E,E,N,N],[12,"mult_x",E,E,15,N],[12,"mult_y",E,E,15,N],[12,"source_x",E,E,15,N],[12,"source_y",E,E,15,N],[12,"name",E,E,15,N],[12,"product",E,E,15,N],[12,"left",E,E,15,N],[3,R[226],E,E,N,N],[12,R[80],E,E,16,N],[12,R[81],E,E,16,N],[3,R[233],E,E,N,N],[12,"p",E,E,17,N],[12,R[0],E,E,17,N],[12,R[2],E,E,17,N],[12,"is_unit",E,E,17,N],[3,R[279],E,E,N,N],[3,R[234],E,E,N,N],[12,"s",E,E,18,N],[12,T,E,E,18,N],[12,R[5],E,E,18,N],[3,R[235],E,E,N,N],[12,"module_name",E,E,19,N],[12,R[223],E,E,19,N],[3,R[236],E,E,N,N],[12,"data",E,E,20,N],[12,R[223],E,E,20,N],[3,"Resolve",E,E,N,N],[12,R[2],E,E,21,N],[3,R[237],E,E,N,N],[12,"s",E,E,22,N],[12,T,E,E,22,N],[3,R[238],E,E,N,N],[12,"x",E,E,23,N],[12,"y",E,E,23,N],[12,"structlines",E,E,23,N],[3,R[239],E,E,N,N],[12,"x",E,E,24,N],[12,"y",E,E,24,N],[12,"true_differentials",E,E,24,N],[12,R[86],E,E,24,N],[3,R[276],E,E,N,N],[12,"x",E,E,25,N],[12,"y",E,E,25,N],[12,"state",E,E,25,N],[12,"permanents",E,E,25,N],[12,"classes",E,E,25,N],[12,"decompositions",E,E,25,N],[12,R[224],E,E,25,N],[3,R[240],E,E,N,N],[12,R[225],E,E,26,N],[3,R[241],E,E,N,N],[3,R[242],E,E,N,N],[12,"history",E,E,27,N],[4,R[277],E,E,N,N],[13,"Sseq",E,E,28,N],[13,"Resolver",E,E,28,N],[13,"Server",E,E,28,N],[4,R[278],E,E,N,N],[13,"Main",E,E,29,N],[13,"Unit",E,E,29,N],[4,"Action",E,"This is just a list of everything that implements…",N,N],[13,R[226],E,E,30,N],[13,R[227],E,E,30,N],[13,R[228],E,E,30,N],[13,R[229],E,E,30,N],[13,R[230],E,E,30,N],[13,"Clear",E,E,30,N],[13,R[231],E,E,30,N],[13,R[232],E,E,30,N],[13,R[275],E,E,30,N],[13,R[233],E,E,30,N],[13,R[279],E,E,30,N],[13,R[234],E,E,30,N],[13,R[235],E,E,30,N],[13,R[236],E,E,30,N],[13,"Resolve",E,E,30,N],[13,R[237],E,E,30,N],[13,R[238],E,E,30,N],[13,R[239],E,E,30,N],[13,R[276],E,E,30,N],[13,R[240],E,E,30,N],[13,R[241],E,E,30,N],[13,R[242],E,E,30,N],[17,"_IMPL_SERIALIZE_FOR_Message",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Message",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Recipient",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Recipient",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_SseqChoice",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_SseqChoice",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Action",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Action",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_AddDifferential",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_AddDifferential",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_AddProductType",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_AddProductType",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_AddPermanentClass",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_AddPermanentClass",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_SetClassName",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_SetClassName",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Clear",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Clear",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_BlockRefresh",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_BlockRefresh",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_AddClass",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_AddClass",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_AddProduct",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_AddProduct",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_AddProductDifferential",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_AddProductDifferential",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Resolving",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Resolving",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Complete",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Complete",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_QueryTableResult",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_QueryTableResult",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Construct",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Construct",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_ConstructJson",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_ConstructJson",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Resolve",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Resolve",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_QueryTable",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_QueryTable",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_SetStructline",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_SetStructline",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_SetDifferential",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_SetDifferential",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_SetClass",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_SetClass",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_SetPageList",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_SetPageList",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_RequestHistory",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_RequestHistory",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_ReturnHistory",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_ReturnHistory",E,E,N,N],[8,"ActionT",E,"The name `Action` is sort-of a misnomer. It is the content…",N,N],[11,R[249],E,E,31,[[["self"],["sseq"]]]],[11,R[248],E,E,31,[[["self"],["rc"]]]],[17,"FILE_LIST",R[221],"List of files that our webserver will serve to the user",N,N],[11,"new",E,"Constructs a ResolutionManager object and waits for…",0,[[["receiver",[R[245]]],["sender",[R[245]]],[R[245]]],[["box",[R[6]]],[R[1],["box"]]]]],[11,"construct_json",E,"Resolves a module defined by a json object. The result is…",0,[[["self"],[R[251]]],[["box",[R[6]]],[R[1],["box"]]]]],[11,R[243],E,"Resolves a module specified by `json`. The result is…",0,[[["self"],[R[243]]],[["box",[R[6]]],[R[1],["box"]]]]],[11,"process_bundle",E,E,0,[[["self"],[R[3],[R[4]]],[R[4]]]]],[11,"resolve",E,E,0,[[["self"],["resolve"],[R[244]]],[["box",[R[6]]],[R[1],["box"]]]]],[11,"query_table",E,E,0,[[["self"],[R[244]],[R[252]]],[["box",[R[6]]],[R[1],["box"]]]]],[11,"setup_callback",E,E,0,[[["self"],[R[244]],[R[281]]]]],[11,"new",E,"Constructs a SseqManager object and waits for messages…",1,[[["receiver",[R[245]]],["sender",[R[245]]],[R[245]]],[["box",[R[6]]],[R[1],["box"]]]]],[11,"get_sseq",E,E,1,[[["self"],[R[244]]],[[R[42],["sseq"]],["sseq"]]]],[11,R[250],E,E,1,[[["self"],[R[245]]],[["box",[R[6]]],[R[1],["box"]]]]],[11,"relay",E,E,1,[[["self"],[R[245]]],[["box",[R[6]]],[R[1],["box"]]]]],[11,"new",E,E,2,[[["sender"]],["self"]]],[11,"serve_files",E,E,2,[[["self"],["str"]],[[R[267]],[R[269],[R[267]]]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[90],E,E,0,[[[U]],[R[1]]]],[11,R[91],E,E,0,[[],[R[1]]]],[11,R[95],E,E,0,[[["self"]],[T]]],[11,R[92],E,E,0,[[["self"]],[T]]],[11,R[93],E,E,0,[[["self"]],[R[96]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[90],E,E,1,[[[U]],[R[1]]]],[11,R[91],E,E,1,[[],[R[1]]]],[11,R[95],E,E,1,[[["self"]],[T]]],[11,R[92],E,E,1,[[["self"]],[T]]],[11,R[93],E,E,1,[[["self"]],[R[96]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[90],E,E,2,[[[U]],[R[1]]]],[11,R[91],E,E,2,[[],[R[1]]]],[11,R[95],E,E,2,[[["self"]],[T]]],[11,R[92],E,E,2,[[["self"]],[T]]],[11,R[93],E,E,2,[[["self"]],[R[96]]]],[11,R[268],E,E,2,[[["self"],[R[245]]],[[R[6]],[R[1],[R[6]]]]]],[11,"from",R[246],E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[90],E,E,3,[[[U]],[R[1]]]],[11,R[91],E,E,3,[[],[R[1]]]],[11,R[95],E,E,3,[[["self"]],[T]]],[11,R[92],E,E,3,[[["self"]],[T]]],[11,R[93],E,E,3,[[["self"]],[R[96]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[90],E,E,4,[[[U]],[R[1]]]],[11,R[91],E,E,4,[[],[R[1]]]],[11,R[95],E,E,4,[[["self"]],[T]]],[11,R[92],E,E,4,[[["self"]],[T]]],[11,R[93],E,E,4,[[["self"]],[R[96]]]],[11,R[98],E,E,5,[[["self"]],[T]]],[11,R[100],E,E,5,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[90],E,E,5,[[[U]],[R[1]]]],[11,R[91],E,E,5,[[],[R[1]]]],[11,R[95],E,E,5,[[["self"]],[T]]],[11,R[92],E,E,5,[[["self"]],[T]]],[11,R[93],E,E,5,[[["self"]],[R[96]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[90],E,E,6,[[[U]],[R[1]]]],[11,R[91],E,E,6,[[],[R[1]]]],[11,R[95],E,E,6,[[["self"]],[T]]],[11,R[92],E,E,6,[[["self"]],[T]]],[11,R[93],E,E,6,[[["self"]],[R[96]]]],[11,R[98],E,E,7,[[["self"]],[T]]],[11,R[100],E,E,7,[[["self"],[T]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[90],E,E,7,[[[U]],[R[1]]]],[11,R[91],E,E,7,[[],[R[1]]]],[11,R[95],E,E,7,[[["self"]],[T]]],[11,R[92],E,E,7,[[["self"]],[T]]],[11,R[93],E,E,7,[[["self"]],[R[96]]]],[11,R[98],R[247],E,8,[[["self"]],[T]]],[11,R[100],E,E,8,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[90],E,E,8,[[[U]],[R[1]]]],[11,R[91],E,E,8,[[],[R[1]]]],[11,R[95],E,E,8,[[["self"]],[T]]],[11,R[92],E,E,8,[[["self"]],[T]]],[11,R[93],E,E,8,[[["self"]],[R[96]]]],[11,R[98],E,E,9,[[["self"]],[T]]],[11,R[100],E,E,9,[[["self"],[T]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[90],E,E,9,[[[U]],[R[1]]]],[11,R[91],E,E,9,[[],[R[1]]]],[11,R[95],E,E,9,[[["self"]],[T]]],[11,R[92],E,E,9,[[["self"]],[T]]],[11,R[93],E,E,9,[[["self"]],[R[96]]]],[11,R[98],E,E,10,[[["self"]],[T]]],[11,R[100],E,E,10,[[["self"],[T]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[90],E,E,10,[[[U]],[R[1]]]],[11,R[91],E,E,10,[[],[R[1]]]],[11,R[95],E,E,10,[[["self"]],[T]]],[11,R[92],E,E,10,[[["self"]],[T]]],[11,R[93],E,E,10,[[["self"]],[R[96]]]],[11,R[98],E,E,11,[[["self"]],[T]]],[11,R[100],E,E,11,[[["self"],[T]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[90],E,E,11,[[[U]],[R[1]]]],[11,R[91],E,E,11,[[],[R[1]]]],[11,R[95],E,E,11,[[["self"]],[T]]],[11,R[92],E,E,11,[[["self"]],[T]]],[11,R[93],E,E,11,[[["self"]],[R[96]]]],[11,R[98],E,E,12,[[["self"]],[T]]],[11,R[100],E,E,12,[[["self"],[T]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[90],E,E,12,[[[U]],[R[1]]]],[11,R[91],E,E,12,[[],[R[1]]]],[11,R[95],E,E,12,[[["self"]],[T]]],[11,R[92],E,E,12,[[["self"]],[T]]],[11,R[93],E,E,12,[[["self"]],[R[96]]]],[11,R[98],E,E,32,[[["self"]],[T]]],[11,R[100],E,E,32,[[["self"],[T]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[90],E,E,32,[[[U]],[R[1]]]],[11,R[91],E,E,32,[[],[R[1]]]],[11,R[95],E,E,32,[[["self"]],[T]]],[11,R[92],E,E,32,[[["self"]],[T]]],[11,R[93],E,E,32,[[["self"]],[R[96]]]],[11,R[98],E,E,13,[[["self"]],[T]]],[11,R[100],E,E,13,[[["self"],[T]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[90],E,E,13,[[[U]],[R[1]]]],[11,R[91],E,E,13,[[],[R[1]]]],[11,R[95],E,E,13,[[["self"]],[T]]],[11,R[92],E,E,13,[[["self"]],[T]]],[11,R[93],E,E,13,[[["self"]],[R[96]]]],[11,R[98],E,E,14,[[["self"]],[T]]],[11,R[100],E,E,14,[[["self"],[T]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[90],E,E,14,[[[U]],[R[1]]]],[11,R[91],E,E,14,[[],[R[1]]]],[11,R[95],E,E,14,[[["self"]],[T]]],[11,R[92],E,E,14,[[["self"]],[T]]],[11,R[93],E,E,14,[[["self"]],[R[96]]]],[11,R[98],E,E,15,[[["self"]],[T]]],[11,R[100],E,E,15,[[["self"],[T]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[90],E,E,15,[[[U]],[R[1]]]],[11,R[91],E,E,15,[[],[R[1]]]],[11,R[95],E,E,15,[[["self"]],[T]]],[11,R[92],E,E,15,[[["self"]],[T]]],[11,R[93],E,E,15,[[["self"]],[R[96]]]],[11,R[98],E,E,16,[[["self"]],[T]]],[11,R[100],E,E,16,[[["self"],[T]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[90],E,E,16,[[[U]],[R[1]]]],[11,R[91],E,E,16,[[],[R[1]]]],[11,R[95],E,E,16,[[["self"]],[T]]],[11,R[92],E,E,16,[[["self"]],[T]]],[11,R[93],E,E,16,[[["self"]],[R[96]]]],[11,R[98],E,E,17,[[["self"]],[T]]],[11,R[100],E,E,17,[[["self"],[T]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[90],E,E,17,[[[U]],[R[1]]]],[11,R[91],E,E,17,[[],[R[1]]]],[11,R[95],E,E,17,[[["self"]],[T]]],[11,R[92],E,E,17,[[["self"]],[T]]],[11,R[93],E,E,17,[[["self"]],[R[96]]]],[11,R[98],E,E,33,[[["self"]],[T]]],[11,R[100],E,E,33,[[["self"],[T]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[90],E,E,33,[[[U]],[R[1]]]],[11,R[91],E,E,33,[[],[R[1]]]],[11,R[95],E,E,33,[[["self"]],[T]]],[11,R[92],E,E,33,[[["self"]],[T]]],[11,R[93],E,E,33,[[["self"]],[R[96]]]],[11,R[98],E,E,18,[[["self"]],[T]]],[11,R[100],E,E,18,[[["self"],[T]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[90],E,E,18,[[[U]],[R[1]]]],[11,R[91],E,E,18,[[],[R[1]]]],[11,R[95],E,E,18,[[["self"]],[T]]],[11,R[92],E,E,18,[[["self"]],[T]]],[11,R[93],E,E,18,[[["self"]],[R[96]]]],[11,R[98],E,E,19,[[["self"]],[T]]],[11,R[100],E,E,19,[[["self"],[T]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[90],E,E,19,[[[U]],[R[1]]]],[11,R[91],E,E,19,[[],[R[1]]]],[11,R[95],E,E,19,[[["self"]],[T]]],[11,R[92],E,E,19,[[["self"]],[T]]],[11,R[93],E,E,19,[[["self"]],[R[96]]]],[11,R[98],E,E,20,[[["self"]],[T]]],[11,R[100],E,E,20,[[["self"],[T]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[90],E,E,20,[[[U]],[R[1]]]],[11,R[91],E,E,20,[[],[R[1]]]],[11,R[95],E,E,20,[[["self"]],[T]]],[11,R[92],E,E,20,[[["self"]],[T]]],[11,R[93],E,E,20,[[["self"]],[R[96]]]],[11,R[98],E,E,21,[[["self"]],[T]]],[11,R[100],E,E,21,[[["self"],[T]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[90],E,E,21,[[[U]],[R[1]]]],[11,R[91],E,E,21,[[],[R[1]]]],[11,R[95],E,E,21,[[["self"]],[T]]],[11,R[92],E,E,21,[[["self"]],[T]]],[11,R[93],E,E,21,[[["self"]],[R[96]]]],[11,R[98],E,E,22,[[["self"]],[T]]],[11,R[100],E,E,22,[[["self"],[T]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[90],E,E,22,[[[U]],[R[1]]]],[11,R[91],E,E,22,[[],[R[1]]]],[11,R[95],E,E,22,[[["self"]],[T]]],[11,R[92],E,E,22,[[["self"]],[T]]],[11,R[93],E,E,22,[[["self"]],[R[96]]]],[11,R[98],E,E,23,[[["self"]],[T]]],[11,R[100],E,E,23,[[["self"],[T]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[90],E,E,23,[[[U]],[R[1]]]],[11,R[91],E,E,23,[[],[R[1]]]],[11,R[95],E,E,23,[[["self"]],[T]]],[11,R[92],E,E,23,[[["self"]],[T]]],[11,R[93],E,E,23,[[["self"]],[R[96]]]],[11,R[98],E,E,24,[[["self"]],[T]]],[11,R[100],E,E,24,[[["self"],[T]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[90],E,E,24,[[[U]],[R[1]]]],[11,R[91],E,E,24,[[],[R[1]]]],[11,R[95],E,E,24,[[["self"]],[T]]],[11,R[92],E,E,24,[[["self"]],[T]]],[11,R[93],E,E,24,[[["self"]],[R[96]]]],[11,R[98],E,E,25,[[["self"]],[T]]],[11,R[100],E,E,25,[[["self"],[T]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[90],E,E,25,[[[U]],[R[1]]]],[11,R[91],E,E,25,[[],[R[1]]]],[11,R[95],E,E,25,[[["self"]],[T]]],[11,R[92],E,E,25,[[["self"]],[T]]],[11,R[93],E,E,25,[[["self"]],[R[96]]]],[11,R[98],E,E,26,[[["self"]],[T]]],[11,R[100],E,E,26,[[["self"],[T]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[90],E,E,26,[[[U]],[R[1]]]],[11,R[91],E,E,26,[[],[R[1]]]],[11,R[95],E,E,26,[[["self"]],[T]]],[11,R[92],E,E,26,[[["self"]],[T]]],[11,R[93],E,E,26,[[["self"]],[R[96]]]],[11,R[98],E,E,34,[[["self"]],[T]]],[11,R[100],E,E,34,[[["self"],[T]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[90],E,E,34,[[[U]],[R[1]]]],[11,R[91],E,E,34,[[],[R[1]]]],[11,R[95],E,E,34,[[["self"]],[T]]],[11,R[92],E,E,34,[[["self"]],[T]]],[11,R[93],E,E,34,[[["self"]],[R[96]]]],[11,R[98],E,E,27,[[["self"]],[T]]],[11,R[100],E,E,27,[[["self"],[T]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[90],E,E,27,[[[U]],[R[1]]]],[11,R[91],E,E,27,[[],[R[1]]]],[11,R[95],E,E,27,[[["self"]],[T]]],[11,R[92],E,E,27,[[["self"]],[T]]],[11,R[93],E,E,27,[[["self"]],[R[96]]]],[11,R[98],E,E,28,[[["self"]],[T]]],[11,R[100],E,E,28,[[["self"],[T]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[90],E,E,28,[[[U]],[R[1]]]],[11,R[91],E,E,28,[[],[R[1]]]],[11,R[95],E,E,28,[[["self"]],[T]]],[11,R[92],E,E,28,[[["self"]],[T]]],[11,R[93],E,E,28,[[["self"]],[R[96]]]],[11,R[98],E,E,29,[[["self"]],[T]]],[11,R[100],E,E,29,[[["self"],[T]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[90],E,E,29,[[[U]],[R[1]]]],[11,R[91],E,E,29,[[],[R[1]]]],[11,R[95],E,E,29,[[["self"]],[T]]],[11,R[92],E,E,29,[[["self"]],[T]]],[11,R[93],E,E,29,[[["self"]],[R[96]]]],[11,R[98],E,E,30,[[["self"]],[T]]],[11,R[100],E,E,30,[[["self"],[T]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[90],E,E,30,[[[U]],[R[1]]]],[11,R[91],E,E,30,[[],[R[1]]]],[11,R[95],E,E,30,[[["self"]],[T]]],[11,R[92],E,E,30,[[["self"]],[T]]],[11,R[93],E,E,30,[[["self"]],[R[96]]]],[11,R[249],E,E,30,[[["self"],["sseq"]]]],[11,R[248],E,E,30,[[["self"],["rc"]]]],[11,R[249],E,E,9,[[["self"],["sseq"]]]],[11,R[249],E,E,10,[[["self"],["sseq"]]]],[11,R[248],E,E,10,[[["self"],["rc"]]]],[11,R[249],E,E,11,[[["self"],["sseq"]]]],[11,R[249],E,E,12,[[["self"],["sseq"]]]],[11,R[249],E,E,32,[[["self"],["sseq"]]]],[11,R[249],E,E,13,[[["self"],["sseq"]]]],[11,R[249],E,E,14,[[["self"],["sseq"]]]],[11,R[249],E,E,15,[[["self"],["sseq"]]]],[11,R[249],E,E,16,[[["self"],["sseq"]]]],[11,R[248],E,E,16,[[["self"],["rc"]]]],[11,"clone",R[246],E,7,[[["self"]],["classstate"]]],[11,"clone",E,E,5,[[["self"]],["productitem"]]],[11,"clone",R[247],E,8,[[["self"]],[R[245]]]],[11,"clone",E,E,28,[[["self"]],[R[253]]]],[11,"clone",E,E,29,[[["self"]],[R[244]]]],[11,"clone",E,E,30,[[["self"]],["action"]]],[11,"clone",E,E,9,[[["self"]],[R[257]]]],[11,"clone",E,E,10,[[["self"]],[R[255]]]],[11,"clone",E,E,11,[[["self"]],[R[256]]]],[11,"clone",E,E,12,[[["self"]],[R[258]]]],[11,"clone",E,E,32,[[["self"]],["clear"]]],[11,"clone",E,E,13,[[["self"]],[R[259]]]],[11,"clone",E,E,14,[[["self"]],["addclass"]]],[11,"clone",E,E,15,[[["self"]],[R[260]]]],[11,"clone",E,E,16,[[["self"]],[R[254]]]],[11,"clone",E,E,17,[[["self"]],[R[250]]]],[11,"clone",E,E,33,[[["self"]],["complete"]]],[11,"clone",E,E,18,[[["self"]],[R[261]]]],[11,"clone",E,E,19,[[["self"]],[R[243]]]],[11,"clone",E,E,20,[[["self"]],[R[251]]]],[11,"clone",E,E,21,[[["self"]],["resolve"]]],[11,"clone",E,E,22,[[["self"]],[R[252]]]],[11,"clone",E,E,23,[[["self"]],[R[262]]]],[11,"clone",E,E,24,[[["self"]],[R[263]]]],[11,"clone",E,E,25,[[["self"]],["setclass"]]],[11,"clone",E,E,26,[[["self"]],[R[264]]]],[11,"clone",E,E,34,[[["self"]],[R[265]]]],[11,"clone",E,E,27,[[["self"]],[R[266]]]],[11,"eq",E,E,28,[[["self"],[R[253]]],["bool"]]],[11,"eq",E,E,29,[[["self"],[R[244]]],["bool"]]],[11,"from",E,E,30,[[[R[254]]],["action"]]],[11,"from",E,E,30,[[[R[255]]],["action"]]],[11,"from",E,E,30,[[[R[256]]],["action"]]],[11,"from",E,E,30,[[[R[257]]],["action"]]],[11,"from",E,E,30,[[[R[258]]],["action"]]],[11,"from",E,E,30,[[["clear"]],["action"]]],[11,"from",E,E,30,[[[R[259]]],["action"]]],[11,"from",E,E,30,[[[R[260]]],["action"]]],[11,"from",E,E,30,[[["addclass"]],["action"]]],[11,"from",E,E,30,[[[R[250]]],["action"]]],[11,"from",E,E,30,[[["complete"]],["action"]]],[11,"from",E,E,30,[[[R[261]]],["action"]]],[11,"from",E,E,30,[[[R[243]]],["action"]]],[11,"from",E,E,30,[[[R[251]]],["action"]]],[11,"from",E,E,30,[[["resolve"]],["action"]]],[11,"from",E,E,30,[[[R[252]]],["action"]]],[11,"from",E,E,30,[[[R[262]]],["action"]]],[11,"from",E,E,30,[[[R[263]]],["action"]]],[11,"from",E,E,30,[[["setclass"]],["action"]]],[11,"from",E,E,30,[[[R[264]]],["action"]]],[11,"from",E,E,30,[[[R[265]]],["action"]]],[11,"from",E,E,30,[[[R[266]]],["action"]]],[11,"fmt",R[246],E,7,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,5,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",R[247],E,8,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,28,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,29,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,30,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,9,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,10,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,11,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,12,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,32,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,13,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,14,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,15,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,16,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,17,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,33,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,18,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,19,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,20,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,21,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,22,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,23,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,24,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,25,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,26,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,34,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,27,[[["self"],[R[171]]],[R[1]]]],[11,"on_request",R[221],E,2,[[["self"],["request"]],[[R[267]],[R[269],[R[267]]]]]],[11,R[268],E,E,2,[[["self"],[R[245]]],[R[269]]]],[11,R[175],R[246],E,7,[[["__d"]],[R[1]]]],[11,R[175],E,E,5,[[["__d"]],[R[1]]]],[11,R[175],R[247],E,8,[[["__d"]],[R[1]]]],[11,R[175],E,E,28,[[["__d"]],[R[1]]]],[11,R[175],E,E,29,[[["__d"]],[R[1]]]],[11,R[175],E,E,30,[[["__d"]],[R[1]]]],[11,R[175],E,E,9,[[["__d"]],[R[1]]]],[11,R[175],E,E,10,[[["__d"]],[R[1]]]],[11,R[175],E,E,11,[[["__d"]],[R[1]]]],[11,R[175],E,E,12,[[["__d"]],[R[1]]]],[11,R[175],E,E,32,[[["__d"]],[R[1]]]],[11,R[175],E,E,13,[[["__d"]],[R[1]]]],[11,R[175],E,E,14,[[["__d"]],[R[1]]]],[11,R[175],E,E,15,[[["__d"]],[R[1]]]],[11,R[175],E,E,16,[[["__d"]],[R[1]]]],[11,R[175],E,E,17,[[["__d"]],[R[1]]]],[11,R[175],E,E,33,[[["__d"]],[R[1]]]],[11,R[175],E,E,18,[[["__d"]],[R[1]]]],[11,R[175],E,E,19,[[["__d"]],[R[1]]]],[11,R[175],E,E,20,[[["__d"]],[R[1]]]],[11,R[175],E,E,21,[[["__d"]],[R[1]]]],[11,R[175],E,E,22,[[["__d"]],[R[1]]]],[11,R[175],E,E,23,[[["__d"]],[R[1]]]],[11,R[175],E,E,24,[[["__d"]],[R[1]]]],[11,R[175],E,E,25,[[["__d"]],[R[1]]]],[11,R[175],E,E,26,[[["__d"]],[R[1]]]],[11,R[175],E,E,34,[[["__d"]],[R[1]]]],[11,R[175],E,E,27,[[["__d"]],[R[1]]]],[11,R[174],R[246],E,7,[[["self"],["__s"]],[R[1]]]],[11,R[174],E,E,5,[[["self"],["__s"]],[R[1]]]],[11,R[174],R[247],E,8,[[["self"],["__s"]],[R[1]]]],[11,R[174],E,E,28,[[["self"],["__s"]],[R[1]]]],[11,R[174],E,E,29,[[["self"],["__s"]],[R[1]]]],[11,R[174],E,E,30,[[["self"],["__s"]],[R[1]]]],[11,R[174],E,E,9,[[["self"],["__s"]],[R[1]]]],[11,R[174],E,E,10,[[["self"],["__s"]],[R[1]]]],[11,R[174],E,E,11,[[["self"],["__s"]],[R[1]]]],[11,R[174],E,E,12,[[["self"],["__s"]],[R[1]]]],[11,R[174],E,E,32,[[["self"],["__s"]],[R[1]]]],[11,R[174],E,E,13,[[["self"],["__s"]],[R[1]]]],[11,R[174],E,E,14,[[["self"],["__s"]],[R[1]]]],[11,R[174],E,E,15,[[["self"],["__s"]],[R[1]]]],[11,R[174],E,E,16,[[["self"],["__s"]],[R[1]]]],[11,R[174],E,E,17,[[["self"],["__s"]],[R[1]]]],[11,R[174],E,E,33,[[["self"],["__s"]],[R[1]]]],[11,R[174],E,E,18,[[["self"],["__s"]],[R[1]]]],[11,R[174],E,E,19,[[["self"],["__s"]],[R[1]]]],[11,R[174],E,E,20,[[["self"],["__s"]],[R[1]]]],[11,R[174],E,E,21,[[["self"],["__s"]],[R[1]]]],[11,R[174],E,E,22,[[["self"],["__s"]],[R[1]]]],[11,R[174],E,E,23,[[["self"],["__s"]],[R[1]]]],[11,R[174],E,E,24,[[["self"],["__s"]],[R[1]]]],[11,R[174],E,E,25,[[["self"],["__s"]],[R[1]]]],[11,R[174],E,E,26,[[["self"],["__s"]],[R[1]]]],[11,R[174],E,E,34,[[["self"],["__s"]],[R[1]]]],[11,R[174],E,E,27,[[["self"],["__s"]],[R[1]]]]],"p":[[3,R[270]],[3,R[271]],[3,"Server"],[3,R[272]],[3,"Product"],[3,R[273]],[3,"Sseq"],[4,R[274]],[3,"Message"],[3,R[229]],[3,R[227]],[3,R[228]],[3,R[230]],[3,R[231]],[3,R[275]],[3,R[232]],[3,R[226]],[3,R[233]],[3,R[234]],[3,R[235]],[3,R[236]],[3,"Resolve"],[3,R[237]],[3,R[238]],[3,R[239]],[3,R[276]],[3,R[240]],[3,R[242]],[4,R[277]],[4,R[278]],[4,"Action"],[8,"ActionT"],[3,"Clear"],[3,R[279]],[3,R[241]]]};
searchIndex["rust_ext"]={"doc":E,"i":[[3,"Config",R[10],E,N,N],[12,"module_paths",E,E,0,N],[12,"module_file_name",E,E,0,N],[12,R[223],E,E,0,N],[12,R[2],E,E,0,N],[3,R[176],E,E,N,N],[12,R[44],E,E,1,N],[12,R[74],E,E,1,N],[12,R[71],E,E,1,N],[12,R[85],E,E,1,N],[3,R[177],E,E,N,N],[12,"name",E,E,2,N],[3,R[178],E,E,N,N],[12,"name",E,E,3,N],[5,R[243],E,E,N,[[[R[7]]],[[R[3],[R[4]]],["box",[R[6]]],[R[1],[R[3],"box"]]]]],[5,"construct_from_json",E,E,N,[[[R[5]],["value"]],[[R[3],[R[4]]],["box",[R[6]]],[R[1],[R[3],"box"]]]]],[5,"construct_algebra_from_json",E,E,N,[[[R[5]],["value"]],[["rc",[R[45]]],["box",[R[6]]],[R[1],["rc","box"]]]]],[5,"run_define_module",E,E,N,[[],[[R[5]],["box",[R[6]]],[R[1],[R[5],"box"]]]]],[5,"run_resolve",E,E,N,[[[R[7]]],[[R[5]],["box",[R[6]]],[R[1],[R[5],"box"]]]]],[5,"run_test",E,E,N,[[]]],[5,"load_module_from_file",E,E,N,[[[R[7]]],[[R[5]],["box",[R[6]]],[R[1],[R[5],"box"]]]]],[0,"once",E,E,N,N],[3,"OnceVec",R[97],E,N,N],[12,"data",E,E,4,N],[3,R[179],E,E,N,N],[12,"data",E,E,5,N],[3,R[180],E,E,N,N],[12,"data",E,E,6,N],[11,R[8],E,E,4,[[["vec"]],["self"]]],[11,"new",E,E,4,[[],["self"]]],[11,R[9],E,E,4,[[["usize"]],["self"]]],[11,"get_vec_mut",E,E,4,[[["self"]],["vec"]]],[11,"get_vec",E,E,4,[[["self"]],["vec"]]],[11,"reserve",E,E,4,[[["self"],["usize"]]]],[11,"reserve_exact",E,E,4,[[["self"],["usize"]]]],[11,"len",E,E,4,[[["self"]],["usize"]]],[11,"get",E,E,4,[[["self"],["usize"]],[T]]],[11,"push",E,E,4,[[["self"],[T]]]],[11,"iter",E,E,4,[[["self"]],["iter"]]],[11,"from_bivec",E,E,5,[[["bivec"]],["self"]]],[11,"new",E,E,5,[[["i32"]],["self"]]],[11,R[9],E,E,5,[[["i32"]],["self"]]],[11,R[0],E,E,5,[[["self"]],["i32"]]],[11,R[2],E,E,5,[[["self"]],["i32"]]],[11,"get_bivec_mut",E,E,5,[[["self"]],["bivec"]]],[11,"get_bivec",E,E,5,[[["self"]],["bivec"]]],[11,"len",E,E,5,[[["self"]],["i32"]]],[11,"push",E,E,5,[[["self"],[T]]]],[11,"iter",E,E,5,[[["self"]],["iter"]]],[11,"new",E,E,6,[[[T]],["self"]]],[11,"take",E,E,6,[[["self"]],[T]]],[0,"combinatorics",R[10],E,N,N],[5,"is_valid_prime","rust_ext::combinatorics",E,N,[[["u32"]],["bool"]]],[5,"inverse",E,E,N,[[["u32"]],["u32"]]],[5,"minus_one_to_the_n",E,E,N,[[["u32"]],["u32"]]],[5,"direct_binomial",E,E,N,[[["u32"]],["u32"]]],[5,"integer_power",E,"Computes b^e.",N,[[["u32"]],["u32"]]],[5,"power_mod",E,"Compute b^e mod p. We use this for computing modulo…",N,[[["u32"]],["u32"]]],[5,"logp",E,E,N,[[["u32"]],["u32"]]],[5,"basep_expansion",E,"Expand n base p and write the result into buffer result.…",N,[[["u32"]]]],[5,"multinomial2",E,E,N,[[],["u32"]]],[5,"binomial2",E,E,N,[[["i32"]],["u32"]]],[5,"multinomial_odd",E,E,N,[[["u32"]],["u32"]]],[5,"binomial_odd",E,E,N,[[["u32"],["i32"]],["u32"]]],[5,"multinomial",E,E,N,[[["u32"]],["u32"]]],[5,"binomial",E,E,N,[[["u32"],["i32"]],["u32"]]],[5,"adem_relation_coefficient",E,E,N,[[["u32"]],["u32"]]],[5,"inadmissible_pairs",E,E,N,[[["i32"],["u32"],["bool"]],["vec"]]],[5,"tau_degrees",E,E,N,[[["u32"]]]],[5,"xi_degrees",E,E,N,[[["u32"]]]],[7,"INVERSE_TABLE",E,E,N,N],[7,"XI_DEGREES",E,E,N,N],[7,"TAU_DEGREES",E,E,N,N],[7,"BINOMIAL_TABLE",E,E,N,N],[17,"MAX_PRIME_INDEX",E,E,N,N],[17,"MAX_PRIME",E,E,N,N],[17,"NOT_A_PRIME",E,E,N,N],[17,"MAX_EXPONENT",E,E,N,N],[17,"MAX_XI_TAU",E,E,N,N],[17,"PRIME_TO_INDEX_MAP",E,E,N,N],[0,"fp_vector",R[10],"An `FpVector` is a vector with entries in Fp. We use this…",N,N],[3,R[181],R[99],E,N,N],[12,"limb",E,E,7,N],[12,"bit_index",E,E,7,N],[3,R[182],E,E,N,N],[12,R[17],E,E,8,N],[12,"slice_start",E,E,8,N],[12,"slice_end",E,E,8,N],[12,"limbs",E,E,8,N],[3,R[12],E,E,N,N],[12,R[11],E,E,9,N],[3,R[13],E,E,N,N],[12,R[11],E,E,10,N],[3,R[14],E,E,N,N],[12,R[11],E,E,11,N],[3,R[15],E,E,N,N],[12,"p",E,E,12,N],[12,R[11],E,E,12,N],[3,R[183],E,E,N,N],[12,"vect",E,E,13,N],[12,"dim",E,E,13,N],[12,"index",E,E,13,N],[4,"FpVector",E,E,N,N],[13,R[12],E,E,14,N],[13,R[13],E,E,14,N],[13,R[14],E,E,14,N],[13,R[15],E,E,14,N],[5,"bit_length",E,E,N,[[["u32"]],["usize"]]],[5,"bitmask",E,E,N,[[["u32"]],["u64"]]],[5,"entries_per_64_bits",E,E,N,[[["u32"]],["usize"]]],[5,"initialize_limb_bit_index_table",E,E,N,[[["u32"]]]],[5,"limb_bit_index_pair",E,E,N,[[["u32"],["usize"]],[R[165]]]],[7,"BIT_LENGHTS",E,E,N,N],[7,"BITMASKS",E,E,N,N],[7,"ENTRIES_PER_64_BITS",E,E,N,N],[7,"LIMB_BIT_INDEX_TABLE",E,"This table tells us which limb and which bitfield of that…",N,N],[7,"LIMB_BIT_INDEX_ONCE_TABLE",E,E,N,N],[17,"MAX_DIMENSION",E,E,N,N],[8,R[184],E,E,N,N],[10,R[135],E,E,15,[[["self"],["usize"]]]],[10,R[11],E,E,15,[[["self"]],[R[16]]]],[10,R[136],E,E,15,[[["self"]],[R[16]]]],[10,"prime",E,E,15,[[["self"]],["u32"]]],[11,R[17],E,E,15,[[["self"]],["usize"]]],[11,"offset",E,E,15,[[["self"]],["usize"]]],[11,R[137],E,E,15,[[["self"]],["usize"]]],[11,"slice",E,E,15,[[["self"]]]],[11,R[19],E,E,15,[[["self"],["usize"]]]],[11,R[138],E,E,15,[[["self"]]]],[11,R[20],E,E,15,[[["self"]]]],[11,"min_limb",E,E,15,[[["self"]],["usize"]]],[11,"max_limb",E,E,15,[[["self"]],["usize"]]],[11,"limbs",E,E,15,[[["self"]],["vec"]]],[11,R[139],E,E,15,[[["self"]],["vec"]]],[11,R[140],E,E,15,[[["self"],["usize"]],["u64"]]],[11,R[23],E,E,15,[[["self"]]]],[11,R[141],E,E,15,[[["self"],[R[18]]]]],[11,"assign",E,E,15,[[["self"],[R[18]]]]],[11,"is_zero",E,E,15,[[["self"]],["bool"]]],[11,"entry",E,E,15,[[["self"],["usize"]],["u32"]]],[11,R[142],E,E,15,[[["self"],["u32"],["usize"]]]],[11,R[143],E,E,15,[[["self"],["u32"],["usize"]]]],[11,"unpack",E,"Unpacks an FpVector onto an array slice. note that the…",15,[[["self"]]]],[11,R[144],E,E,15,[[["self"]],[["u32"],["vec",["u32"]]]]],[11,"pack",E,E,15,[[["self"]]]],[11,"add",E,"Adds `c` * `other` to `self`. `other` must have the same…",15,[[["self"],[R[18]],["u32"]]]],[11,R[145],E,E,15,[[["self"],[R[18]],["u32"]]]],[11,R[146],E,E,15,[[["self"],[R[18]],["u32"]]]],[11,R[147],E,E,15,[[["self"],[R[18]],["u32"]]]],[11,"scale",E,E,15,[[["self"],["u32"]]]],[11,"new",E,E,14,[[["u32"],["usize"]],[R[18]]]],[11,R[8],E,E,14,[[["u32"]],[R[18]]]],[11,"add_limb",E,E,14,[[["u32"],["u64"]],["u64"]]],[11,"number_of_limbs",E,E,14,[[["u32"],["usize"]],["usize"]]],[11,"padded_dimension",E,E,14,[[["u32"],["usize"]],["usize"]]],[11,"scratch_vector",E,E,14,[[["u32"],["usize"]],["self"]]],[11,"set_scratch_vector_size",E,E,14,[[["usize"]],["self"]]],[11,"iter",E,E,14,[[["self"]],["fpvectoriterator"]]],[11,"pack_limb",E,E,14,[[["u32"],["usize"],["vec"]],["usize"]]],[11,"unpack_limb",E,E,14,[[["u32"],["usize"],["vec"]],["usize"]]],[0,R[52],R[10],E,N,N],[3,"Matrix",R[101],"A matrix! In particular, a matrix with values in F_p. The…",N,N],[12,"p",E,E,16,N],[12,"rows",E,E,16,N],[12,"columns",E,E,16,N],[12,"slice_row_start",E,E,16,N],[12,"slice_row_end",E,E,16,N],[12,"slice_col_start",E,E,16,N],[12,"slice_col_end",E,E,16,N],[12,"vectors",E,E,16,N],[3,"Subspace",E,"A subspace of a vector space. # Fields * `matrix` - A…",N,N],[12,R[52],E,E,17,N],[12,"column_to_pivot_row",E,E,17,N],[3,R[185],E,"Given a matrix M, a quasi-inverse Q is a map from the…",N,N],[12,"image",E,E,18,N],[12,"preimage",E,E,18,N],[11,"new",E,"Produces a new matrix over F_p with the specified number…",16,[[["u32"],["usize"]],[R[52]]]],[11,"from_rows",E,"Produces a matrix from a list of rows. If `vectors.len()…",16,[[["u32"],["vec",[R[18]]],[R[18]]],["self"]]],[11,R[8],E,"Produces a Matrix from an `&[Vec<u32>]` object # Example…",16,[[["u32"]],[R[52]]]],[11,"to_vec",E,E,16,[[["self"]],[["vec",["vec"]],["vec",["u32"]]]]],[11,"augmented_from_vec",E,"Produces a padded augmented matrix from an `&[Vec<u32>]`…",16,[[["u32"]]]],[11,"set_identity",E,E,16,[[["self"],["usize"]]]],[11,"prime",E,E,16,[[["self"]],["u32"]]],[11,"rows",E,"Gets the number of rows in the matrix.",16,[[["self"]],["usize"]]],[11,"columns",E,"Gets the number of columns in the matrix.",16,[[["self"]],["usize"]]],[11,R[19],E,"Sets the slice on the matrix. Restricts to the submatrix…",16,[[["self"],["usize"]]]],[11,R[20],E,"Un-slice the matrix.",16,[[["self"]]]],[11,"set_row",E,E,16,[[["self"],[R[18]],["usize"]]]],[11,"iter",E,E,16,[[["self"]],[["iter",[R[18]]],[R[18]]]]],[11,R[21],E,E,16,[[["self"]],[[R[18]],["itermut",[R[18]]]]]],[11,"swap_rows",E,E,16,[[["self"],["usize"]]]],[11,"row_op",E,E,16,[[["self"],["u32"],["usize"]]]],[11,"row_reduce",E,"Perform row reduction to reduce it to reduced row echelon…",16,[[["self"],["vec"]]]],[11,"row_reduce_offset",E,E,16,[[["self"],["vec"],["usize"]]]],[11,"new",E,E,17,[[["u32"],["usize"]],["self"]]],[11,"quotient",E,E,17,[[[R[22]],["usize"],[R[42],[R[22]]]],[["vec",["usize"]],["usize"]]]],[11,"entire_space",E,E,17,[[["u32"],["usize"]],["self"]]],[11,"add_vector",E,"This adds a vector to the subspace. This function assumes…",17,[[["self"],[R[18]]]]],[11,"reduce",E,"Projects a vector to a complement of the subspace. The…",17,[[["self"],[R[18]]]]],[11,"shift_reduce",E,"A version of `reduce` that doesn't require the vectors to…",17,[[["self"],[R[18]]]]],[11,"contains",E,E,17,[[["self"],[R[18]]],["bool"]]],[11,R[17],E,E,17,[[["self"]],["usize"]]],[11,"basis",E,"Returns a basis of the subspace.",17,[[["self"]]]],[11,R[23],E,"Sets the subspace to be the zero subspace.",17,[[["self"]]]],[11,"prime",E,E,18,[[["self"]],["u32"]]],[11,"apply",E,"Apply the quasi-inverse to an input vector and add a…",18,[[["self"],["u32"],[R[18]],[R[18]]]]],[11,R[23],E,E,16,[[["self"]]]],[11,"find_first_row_in_block",E,E,16,[[["self"],["vec"],["usize"]],["usize"]]],[11,"compute_kernel",E,"Computes the kernel from an augmented matrix in rref. To…",16,[[["self"],["vec"],["usize"]],[R[22]]]],[11,"compute_quasi_inverse",E,"Computes the quasi-inverse of a matrix given a rref of…",16,[[["self"],["usize"],["vec"]],[R[51]]]],[11,"compute_quasi_inverses",E,"This function computes quasi-inverses for matrices A, B…",16,[[["self"],["usize"],["vec"]]]],[11,"get_image",E,E,16,[[["self"],["vec"],["usize"]],[R[22]]]],[11,"extend_to_surjection",E,"Given a matrix M in rref, add rows to make the matrix…",16,[[["self"],["vec"],["usize"]],[["vec",["usize"]],["usize"]]]],[11,"extend_image_to_desired_image",E,"Given a matrix in rref, say [A|B|C], where B lies between…",16,[[["self"],["usize"],[R[22]],["vec"]],[["vec",["usize"]],["usize"]]]],[11,"extend_image",E,"Extends the image of a matrix to either the whole…",16,[[["self"],[R[42]],["usize"],["vec"]],[["vec",["usize"]],["usize"]]]],[11,"apply",E,"Applies a matrix to a vector.",16,[[["self"],["u32"],[R[18]],[R[18]]]]],[0,"block_structure",R[10],E,N,N],[3,R[186],R[102],E,N,N],[12,R[56],E,E,19,N],[12,R[57],E,E,19,N],[12,"basis_index",E,E,19,N],[3,R[187],E,E,N,N],[12,"total_dimension",E,E,20,N],[12,"basis_element_to_block_idx",E,E,20,N],[12,"block_starts",E,E,20,N],[11,"new",E,E,20,[[["bivec"]],["self"]]],[11,"generator_to_block",E,E,20,[[["self"],["usize"],["i32"]]]],[11,"generator_basis_elt_to_index",E,E,20,[[["self"],["usize"],["i32"]],["usize"]]],[11,"index_to_generator_basis_elt",E,E,20,[[["self"],["usize"]],["generatorbasiseltpair"]]],[11,"add_block",E,E,20,[[["self"],["u32"],["usize"],["i32"],[R[18]],[R[18]]]]],[0,R[44],R[10],E,N,N],[4,R[188],R[103],E,N,N],[13,R[24],E,E,21,N],[13,R[28],E,E,21,N],[13,"Field",E,E,21,N],[8,"Algebra",E,"A graded algebra over F_p, finite dimensional in each…",N,N],[10,R[148],E,"The \"type\" of the algebra, which is \"adem\" or \"milnor\".…",22,[[["self"]],["str"]]],[10,"prime",E,R[158],22,[[["self"]],["u32"]]],[10,"name",E,E,22,[[["self"]],["str"]]],[10,R[46],E,"Computes the list of basis elements up to and including…",22,[[["self"],["i32"]]]],[10,R[17],E,R[159],22,[[["self"],["i32"]],["usize"]]],[10,R[149],E,"Computes the product `r * s` of the two basis elements,…",22,[[["self"],["u32"],["usize"],["i32"],[R[18]]]]],[11,R[150],E,E,22,[[["self"],["u32"],["usize"],["i32"],[R[18]],[R[18]]]]],[11,R[151],E,E,22,[[["self"],["u32"],["usize"],["i32"],[R[18]],[R[18]]]]],[11,R[152],E,E,22,[[["self"],["u32"],["i32"],[R[18]],[R[18]]]]],[10,R[153],E,"A filtration one element in Ext(k, k) is the same as an…",22,[[["self"]],["vec"]]],[10,R[154],E,R[160],22,[[["self"],["value"]]]],[10,R[155],E,E,22,[[["self"],["usize"],["i32"]],["value"]]],[10,R[47],E,R[161],22,[[["self"],["usize"],["i32"]],[R[5]]]],[11,R[48],E,"Converts an element into a string for display.",22,[[["self"],[R[18]],["i32"]],[R[5]]]],[10,R[66],E,"Given a degree `degree`, the function returns a list of…",22,[[["self"],["i32"]],[["vec",["usize"]],["usize"]]]],[10,R[156],E,"Given a non-generator basis element of the algebra,…",22,[[["self"],["usize"],["i32"]],["vec"]]],[10,R[157],E,"Get any relations that the algebra wants checked to ensure…",22,[[["self"],["i32"]],[["vec",["vec"]],["vec"]]]],[0,"field",R[10],E,N,N],[3,"Field",R[104],E,N,N],[12,"prime",E,E,23,N],[11,"new",E,E,23,[[["u32"]],["self"]]],[0,"adem_algebra",R[10],E,N,N],[3,R[27],R[105],E,N,N],[12,"__private_field",E,E,24,N],[3,R[189],E,"The format of the AdemBasisElement is as follows. To…",N,N],[12,"degree",E,E,25,N],[12,"excess",E,E,25,N],[12,"bocksteins",E,E,25,N],[12,"ps",E,E,25,N],[3,R[24],E,E,N,N],[12,"p",E,E,26,N],[12,"name",E,E,26,N],[12,"generic",E,E,26,N],[12,"unstable",E,E,26,N],[12,R[29],E,E,26,N],[12,"even_basis_table",E,E,26,N],[12,R[30],E,E,26,N],[12,R[31],E,E,26,N],[12,"multiplication_table",E,E,26,N],[12,"excess_table",E,E,26,N],[12,"sort_order",E,E,26,N],[5,"adem_basis_element_excess_sort_order",E,E,N,[[[R[25]]],[R[26]]]],[5,"adem_basis_element_length_sort_order",E,E,N,[[[R[25]]],[R[26]]]],[5,"shift_vec",E,E,N,[[["isize"],["vec"]],["vec"]]],[7,R[27],E,E,N,N],[11,"new",E,E,26,[[["u32"],["bool"]],["self"]]],[11,"generate_basis_even",E,E,26,[[["self"],["i32"]]]],[11,"generate_basis_even_degreen",E,E,26,[[["self"],["i32"]]]],[11,"generate_basis2",E,E,26,[[["self"],["i32"]]]],[11,R[35],E,E,26,[[["self"],["i32"]]]],[11,"generate_basis_generic_degreen",E,E,26,[[["self"],["i32"]]]],[11,"generate_basis_element_to_index_map",E,E,26,[[["self"],["i32"]]]],[11,R[32],E,E,26,[[["self"],["usize"],["i32"]],[R[25]]]],[11,R[34],E,E,26,[[["self"],[R[25]]],["usize"]]],[11,"tail_of_basis_element_to_index",E,E,26,[[["self"],["u32"],[R[25]]]]],[11,"generate_multiplication_table_2",E,E,26,[[["self"],["i32"]]]],[11,"generate_multiplication_table_2_step",E,E,26,[[["self"],["usize"],["i32"],["vec"]],[R[18]]]],[11,"generate_multiplication_table_generic",E,E,26,[[["self"],["i32"]]]],[11,"generate_multiplication_table_generic_step",E,"This function expresses $Sq^x$ (current) in terms of the…",26,[[["self"],["usize"],["i32"],["vec"]],[R[18]]]],[11,R[36],E,E,26,[[["self"],["u32"],["usize"],["i32"],[R[18]]]]],[11,"make_mono_admissible",E,E,26,[[["self"],["u32"],["i32"],[R[18]],[R[25]]]]],[11,"make_mono_admissible_2",E,"Reduce a Steenrod monomial at the prime 2. # Arguments: *…",26,[[["self"],["i32"],[R[18]],[R[25]],["bool"]]]],[11,"make_mono_admissible_generic",E,E,26,[[["self"],["u32"],["i32"],[R[18]],[R[25]],["bool"]]]],[11,"decompose_basis_element_2",E,E,26,[[["self"],["usize"],["i32"]],["vec"]]],[11,"decompose_basis_element_generic",E,E,26,[[["self"],["usize"],["i32"]],["vec"]]],[11,"beps_pn",E,E,26,[[["self"],["u32"]]]],[0,"milnor_algebra",R[10],E,N,N],[3,R[190],R[106],E,N,N],[12,"truncated",E,E,27,N],[12,"q_part",E,E,27,N],[12,"p_part",E,E,27,N],[3,"QPart",E,E,N,N],[12,"degree",E,E,28,N],[12,"q_part",E,E,28,N],[3,R[191],E,E,N,N],[12,"q_part",E,E,29,N],[12,"p_part",E,E,29,N],[12,"degree",E,E,29,N],[3,R[28],E,E,N,N],[12,"profile",E,E,30,N],[12,"name",E,E,30,N],[12,R[29],E,E,30,N],[12,"p",E,E,30,N],[12,"generic",E,E,30,N],[12,"ppart_table",E,E,30,N],[12,"qpart_table",E,E,30,N],[12,R[30],E,E,30,N],[12,R[31],E,E,30,N],[3,R[192],E,E,N,N],[12,"p",E,E,31,N],[12,"M",E,E,31,N],[12,"r",E,E,31,N],[12,"s",E,E,31,N],[12,"rows",E,E,31,N],[12,"cols",E,E,31,N],[12,"diag_num",E,E,31,N],[12,"cont",E,E,31,N],[5,"from_p",E,E,N,[[["u32"],["vec",["u32"]],["i32"]],[R[33]]]],[6,"PPart",E,E,N,N],[17,"ZERO_QPART",E,E,N,N],[11,"new",E,E,30,[[["u32"]],["self"]]],[11,R[32],E,E,30,[[["self"],["usize"],["i32"]],[R[33]]]],[11,R[34],E,E,30,[[["self"],[R[33]]],["usize"]]],[11,"compute_ppart",E,E,30,[[["self"],["i32"]]]],[11,"compute_qpart",E,E,30,[[["self"],["i32"]]]],[11,R[35],E,E,30,[[["self"],["i32"]]]],[11,"generate_basis_2",E,E,30,[[["self"],["i32"]]]],[11,"beps_pn",E,E,30,[[["self"],["u32"]]]],[11,"multiply_qpart",E,E,30,[[["self"],[R[33]],["u32"]],["vec"]]],[11,R[36],E,E,30,[[["self"],["u32"],[R[18]],[R[33]]]]],[11,"new",E,E,31,[[["u32"],["vec"]],["ppartmultiplier"]]],[11,"update",E,E,31,[[["self"]],["bool"]]],[11,"decompose_basis_element_qpart",E,E,30,[[["self"],["usize"],["i32"]],["vec"]]],[11,"decompose_basis_element_ppart",E,E,30,[[["self"],["usize"],["i32"]],["vec"]]],[0,"change_of_basis",R[10],E,N,N],[5,"adem_to_milnor_on_basis","rust_ext::change_of_basis",E,N,[[["u32"],["usize"],["i32"],[R[37]],[R[38]],[R[18]]]]],[5,"adem_to_milnor",E,E,N,[[["u32"],["i32"],[R[37]],[R[38]],[R[18]],[R[18]]]]],[5,"milnor_to_adem_on_basis",E,E,N,[[["u32"],["usize"],["i32"],[R[37]],[R[38]],[R[18]]]]],[5,"milnor_to_adem_on_basis_2",E,E,N,[[["u32"],["usize"],["i32"],[R[37]],[R[38]],[R[18]]]]],[5,"milnor_to_adem_on_basis_generic",E,E,N,[[["u32"],["usize"],["i32"],[R[37]],[R[38]],[R[18]]]]],[5,"milnor_to_adem",E,E,N,[[["u32"],["i32"],[R[37]],[R[38]],[R[18]],[R[18]]]]],[5,"adem_q",E,E,N,[[["u32"],[R[37]],[R[38]],[R[18]]]]],[5,"adem_plist",E,E,N,[[["u32"],["i32"],[R[37]],[R[38]],[R[18]],["vec",["u32"]]]]],[0,"steenrod_parser",R[10],E,N,N],[3,R[193],R[108],E,N,N],[12,"info",E,E,32,N],[4,R[194],E,E,N,N],[13,"PList",E,E,33,N],[13,"P",E,E,33,N],[13,"Q",E,E,33,N],[4,R[195],E,E,N,N],[13,"Product",E,E,34,N],[13,"Sum",E,E,34,N],[13,"BasisElt",E,E,34,N],[13,"Scalar",E,E,34,N],[4,R[196],E,E,N,N],[13,"Act",E,E,35,N],[13,"Sum",E,E,35,N],[13,"ModuleBasisElt",E,E,35,N],[5,"digits",E,E,N,[[["str"]],[[R[39],["str","u32"]],["u32"],["str"]]]],[5,"integer_list",E,E,N,[[["str"]],[[R[39],["str","vec"]],["str"],["vec",["u32"]]]]],[5,"sequence",E,E,N,[[["str"]],[[R[39],["str","vec"]],["str"],["vec",["u32"]]]]],[5,"algebra_generator",E,E,N,[[["str"]],[[R[40]],["str"],[R[39],["str",R[40]]]]]],[5,"scalar",E,E,N,[[["str"]],[[R[40]],["str"],[R[39],["str",R[40]]]]]],[5,"algebra_parens",E,E,N,[[["str"]],[[R[40]],["str"],[R[39],["str",R[40]]]]]],[5,"algebra_factor",E,E,N,[[["str"]],[[R[40]],["str"],[R[39],["str",R[40]]]]]],[5,"algebra_term",E,E,N,[[["str"]],[[R[40]],["str"],[R[39],["str",R[40]]]]]],[5,"algebra_expr",E,E,N,[[["str"]],[[R[40]],["str"],[R[39],["str",R[40]]]]]],[5,"module_generator",E,E,N,[[["str"]],[[R[39],["str",R[41]]],["str"],[R[41]]]]],[5,"module_parens",E,E,N,[[["str"]],[[R[39],["str",R[41]]],["str"],[R[41]]]]],[5,"module_factor",E,E,N,[[["str"]],[[R[39],["str",R[41]]],["str"],[R[41]]]]],[5,"module_term",E,E,N,[[["str"]],[[R[39],["str",R[41]]],["str"],[R[41]]]]],[5,"module_expr",E,E,N,[[["str"]],[[R[39],["str",R[41]]],["str"],[R[41]]]]],[5,"parse_algebra",E,E,N,[[["str"]],[[R[1],[R[40],"box"]],[R[40]],["box",[R[6]]]]]],[5,"parse_module",E,E,N,[[["str"]],[[R[41]],["box",[R[6]]],[R[1],[R[41],"box"]]]]],[0,"steenrod_evaluator",R[10],E,N,N],[3,R[220],R[109],E,N,N],[3,R[197],E,E,N,N],[12,"name",E,E,36,N],[5,"evaluate_algebra",E,E,N,[[[R[37]],[R[38]],["str"]],[["box",[R[6]]],[R[1],["box"]]]]],[5,"evaluate_algebra_tree",E,E,N,[[[R[37]],[R[38]],[R[40]]],[["box",[R[6]]],[R[1],["box"]]]]],[5,"evaluate_algebra_tree_helper",E,E,N,[[[R[42],["i32"]],["i32"],[R[37]],[R[38]],[R[40]]],[["box",[R[6]]],[R[1],["box"]]]]],[5,"evaluate_basis_element",E,E,N,[[[R[166]],[R[42],["i32"]],["i32"],[R[37]],[R[38]]],[["box",[R[6]]],[R[1],["box"]]]]],[5,"evaluate_module",E,E,N,[[["str"],[R[37]],[R[38]],["m"],[R[43]]],[["box",[R[6]]],[R[1],["box"]]]]],[5,"evaluate_module_tree",E,E,N,[[[R[41]],[R[37]],[R[38]],["m"],[R[43]]],[["box",[R[6]]],[R[1],["box"]]]]],[5,"evaluate_module_tree_helper",E,E,N,[[[R[41]],[R[42],["i32"]],["i32"],[R[37]],[R[38]],["m"],[R[43]]],[["box",[R[6]]],[R[1],["box"]]]]],[5,"evaluate_module_basis_element",E,E,N,[[[R[5]],[R[42],["i32"]],["i32"],[R[37]],[R[38]],["m"],[R[43]]],[["box",[R[6]]],[R[1],["box"]]]]],[0,R[74],R[10],E,N,N],[3,R[198],R[110],E,N,N],[12,R[44],E,E,37,N],[12,"name",E,E,37,N],[3,R[199],E,E,N,N],[12,"module_type",E,E,38,N],[3,R[200],E,E,N,N],[12,"relation",E,E,39,N],[12,"value",E,E,39,N],[4,R[201],E,E,N,N],[13,R[53],E,E,40,N],[13,R[65],E,E,40,N],[4,R[202],E,E,N,N],[13,"Some",E,E,41,N],[13,"Zero",E,E,41,N],[8,"Module",E,E,N,N],[10,R[44],E,E,42,[[["self"]],[[R[45]],["rc",[R[45]]]]]],[10,"name",E,E,42,[[["self"]],["str"]]],[10,R[0],E,E,42,[[["self"]],["i32"]]],[11,R[46],E,E,42,[[["self"],["i32"]]]],[10,R[17],E,E,42,[[["self"],["i32"]],["usize"]]],[10,R[162],E,E,42,[[["self"],["u32"],["usize"],["i32"],[R[18]]]]],[10,R[47],E,E,42,[[["self"],["usize"],["i32"]],[R[5]]]],[11,"is_unit",E,E,42,[[["self"]],["bool"]]],[11,"prime",E,E,42,[[["self"]],["u32"]]],[11,"act",E,E,42,[[["self"],["u32"],["usize"],["i32"],[R[18]],[R[18]]]]],[11,R[163],E,E,42,[[["self"],["u32"],["i32"],[R[18]],[R[18]]]]],[11,R[164],E,E,42,[[["self"],["i32"]],[R[5]]]],[11,R[48],E,E,42,[[["self"],[R[18]],["i32"]],[R[5]]]],[11,"new",E,E,37,[[[R[45]],["rc",[R[45]]]],["self"]]],[11,R[55],E,E,40,[[[R[45]],["value"],["rc",[R[45]]]],[["box",[R[6]]],[R[1],["box"]]]]],[0,"module_homomorphism",R[10],E,N,N],[3,R[203],R[111],E,N,N],[12,R[80],E,E,43,N],[12,R[81],E,E,43,N],[12,R[2],E,E,43,N],[12,R[49],E,E,43,N],[8,R[204],E,E,N,N],[10,R[80],E,E,44,[[["self"]],["rc"]]],[10,R[81],E,E,44,[[["self"]],["rc"]]],[10,R[49],E,E,44,[[["self"]],["i32"]]],[11,R[0],E,E,44,[[["self"]],["i32"]]],[10,R[122],E,E,44,[[["self"],["u32"],["usize"],["i32"],[R[18]]]]],[11,"apply",E,E,44,[[["self"],["u32"],["i32"],[R[18]],[R[18]]]]],[11,"prime",E,E,44,[[["self"]],["u32"]]],[10,"lock",E,E,44,[[["self"]],[[R[50],["i32"]],["i32"]]]],[10,R[123],E,E,44,[[["self"]],["i32"]]],[10,R[125],E,E,44,[[["self"],["i32"],[R[50]],[R[22]]]]],[10,"kernel",E,E,44,[[["self"],["i32"]],[[R[22]],[R[42],[R[22]]]]]],[10,R[124],E,E,44,[[["self"],["i32"],[R[50]],[R[51]]]]],[10,R[61],E,E,44,[[["self"],["i32"]],[[R[42],[R[51]]],[R[51]]]]],[11,"image",E,E,44,[[["self"],["i32"]],[[R[22]],[R[42],[R[22]]]]]],[11,"compute_kernels_and_quasi_inverses_through_degree",E,E,44,[[["self"],[R[50]],["i32"]]]],[11,"compute_kernel_and_quasi_inverse",E,E,44,[[["self"],[R[50]],["i32"]]]],[11,R[64],E,E,44,[[["self"],[R[52]],["usize"],["i32"]]]],[11,"new",E,E,43,[[["rc"],["rc"],["i32"]],["self"]]],[0,"finite_dimensional_module",R[10],E,N,N],[3,R[53],R[112],E,N,N],[12,R[44],E,E,45,N],[12,"name",E,E,45,N],[12,"graded_dimension",E,E,45,N],[12,R[58],E,E,45,N],[12,"actions",E,E,45,N],[6,"OptionFDModule",E,E,N,N],[8,R[205],E,E,N,N],[10,R[2],E,E,46,[[["self"]],["i32"]]],[11,"new",E,E,45,[[["bivec",["usize"]],["usize"],["rc",[R[45]]],[R[45]],[R[5]]],["self"]]],[11,"set_basis_element_name",E,E,45,[[["self"],["usize"],["i32"],[R[5]]]]],[11,R[68],E,E,45,[[["value"]]]],[11,"allocate_actions",E,E,45,[[["bivec"],["rc"]],[["bivec",["bivec"]],["bivec",["vec"]]]]],[11,"set_action_vector",E,E,45,[[["self"],["usize"],["i32"],[R[18]]]]],[11,"set_action",E,E,45,[[["self"],["u32"],["usize"],["i32"],["vec",["u32"]]]]],[11,"action",E,R[54],45,[[["self"],["usize"],["i32"]],[R[18]]]],[11,"action_mut",E,R[54],45,[[["self"],["usize"],["i32"]],[R[18]]]],[11,R[55],E,E,45,[[[R[45]],["value"],["rc",[R[45]]]],["self"]]],[11,"check_validity",E,E,45,[[["self"],["i32"]],[["box",[R[6]]],[R[1],["box"]]]]],[11,"extend_actions",E,E,45,[[["self"],["i32"]]]],[11,"actions_to_json",E,E,45,[[["self"]],["value"]]],[0,"free_module",R[10],E,N,N],[3,R[206],R[113],E,N,N],[12,"operation_degree",E,E,47,N],[12,"operation_index",E,E,47,N],[12,R[56],E,E,47,N],[12,R[57],E,E,47,N],[3,R[207],E,E,N,N],[12,"num_gens",E,E,48,N],[12,"basis_element_to_opgen",E,E,48,N],[12,"generator_to_index",E,E,48,N],[3,R[208],E,E,N,N],[12,R[44],E,E,49,N],[12,"name",E,E,49,N],[12,R[0],E,E,49,N],[12,R[2],E,E,49,N],[12,R[58],E,E,49,N],[12,"table",E,E,49,N],[11,"new",E,E,49,[[["rc",[R[45]]],[R[45]],[R[5]],["i32"]],["self"]]],[11,R[73],E,E,49,[[["self"]],["i32"]]],[11,"number_of_gens_in_degree",E,E,49,[[["self"],["i32"]],["usize"]]],[11,"construct_table",E,E,49,[[["self"],["i32"]]]],[11,"dimension_with_table",E,E,49,[[[R[59]]],["usize"]]],[11,R[67],E,E,49,[[["self"],["usize"],["i32"],[R[42],["vec"]],[R[50],["i32"]],[R[59]],["vec",[R[5]]]]]],[11,"add_generators_to_table",E,E,49,[[[R[59]],["usize"],["i32"]]]],[11,"operation_generator_to_index",E,E,49,[[["self"],["usize"],["i32"]],["usize"]]],[11,"operation_generator_pair_to_idx",E,E,49,[[["self"],[R[60]]],["usize"]]],[11,"index_to_op_gen",E,E,49,[[["self"],["usize"],["i32"]],[R[60]]]],[11,"element_to_json",E,E,49,[[["self"],[R[18]],["i32"]],["value"]]],[11,"add_generators_immediate",E,E,49,[[["self"],["usize"],["i32"],[R[42],["vec"]],["vec",[R[5]]]]]],[11,R[63],E,E,49,[[["self"],["i32"]]]],[0,"free_module_homomorphism",R[10],E,N,N],[3,R[209],R[114],E,N,N],[12,R[80],E,E,50,N],[12,R[81],E,E,50,N],[12,"outputs",E,E,50,N],[12,"kernel",E,E,50,N],[12,R[61],E,E,50,N],[12,R[0],E,E,50,N],[12,R[2],E,E,50,N],[12,R[49],E,E,50,N],[11,"new",E,E,50,[[["rc",[R[62]]],[R[62]],["i32"],["rc"]],["self"]]],[11,R[49],E,E,50,[[["self"]],["i32"]]],[11,R[0],E,E,50,[[["self"]],["i32"]]],[11,"output",E,E,50,[[["self"],["usize"],["i32"]],[R[18]]]],[11,R[63],E,E,50,[[["self"],[R[50]],["i32"]]]],[11,"add_generators_from_big_vector",E,E,50,[[["self"],["i32"],[R[50]],[R[18]]]]],[11,"add_generators_from_matrix_rows",E,E,50,[[["self"],[R[52]],["usize"],["i32"],[R[50]]]]],[11,"apply_to_generator",E,E,50,[[["self"],["u32"],["usize"],["i32"],[R[18]]]]],[11,"apply_to_basis_element_with_table",E,E,50,[[["self"],["u32"],["usize"],["i32"],[R[18]],[R[59]]]]],[11,R[64],E,E,50,[[["self"],[R[52]],["usize"],["i32"]]]],[11,"get_matrix_with_table",E,"Arguments * `degree` - The internal degree of the target…",50,[[["self"],[R[52]],["usize"],["i32"],[R[59]]]]],[0,"finitely_presented_module",R[10],E,N,N],[3,R[210],R[115],E,N,N],[12,R[69],E,E,51,N],[12,R[70],E,E,51,N],[3,R[65],E,E,N,N],[12,"name",E,E,52,N],[12,R[0],E,E,52,N],[12,R[66],E,E,52,N],[12,"relations",E,E,52,N],[12,"map",E,E,52,N],[12,"index_table",E,E,52,N],[11,"new",E,E,52,[[["rc",[R[45]]],[R[45]],[R[5]],["i32"]],["self"]]],[11,R[67],E,E,52,[[["self"],["vec",[R[5]]],["i32"],[R[5]]]]],[11,"add_relations",E,E,52,[[["self"],[R[52]],["i32"]]]],[11,R[68],E,E,52,[[["value"]]]],[11,R[55],E,E,52,[[[R[45]],["value"],["rc",[R[45]]]],["self"]]],[11,"relations_to_json",E,E,52,[[["self"]],["value"]]],[11,R[69],E,E,52,[[["self"],["usize"],["i32"]],["isize"]]],[11,R[70],E,E,52,[[["self"],["usize"],["i32"]],["usize"]]],[0,R[71],R[10],E,N,N],[3,R[211],R[116],E,N,N],[12,R[74],E,E,53,N],[12,R[72],E,E,53,N],[12,"d0",E,E,53,N],[12,"d1",E,E,53,N],[12,"other_ds",E,E,53,N],[4,R[212],E,E,N,N],[13,"Homological",E,E,54,N],[13,"Cohomological",E,E,54,N],[8,R[213],E,E,N,N],[11,"prime",E,E,55,[[["self"]],["u32"]]],[10,R[44],E,E,55,[[["self"]],[[R[45]],["rc",[R[45]]]]]],[10,R[0],E,E,55,[[["self"]],["i32"]]],[10,R[72],E,E,55,[[["self"]],["rc"]]],[10,R[74],E,E,55,[[["self"],["u32"]],["rc"]]],[10,R[75],E,E,55,[[["self"],["u32"]],["rc"]]],[10,R[76],E,E,55,[[["self"],["u32"],["i32"]]]],[10,R[126],E,E,55,[[["self"],["u32"],["vec",["usize"]],["i32"],["usize"]]]],[10,R[127],E,E,55,[[["self"],["u32"],["i32"]],["vec"]]],[10,R[128],E,E,55,[[["self"],["u32"]],["i32"]]],[10,R[77],E,E,55,[[["self"]],["u32"]]],[10,R[73],E,E,55,[[["self"]],["i32"]]],[11,"compute_homology_through_bidegree",E,E,55,[[["self"],["u32"],["i32"]]]],[11,R[131],E,E,55,[[["self"],["u32"],["i32"]],["usize"]]],[11,R[78],E,E,55,[[["self"],["u32"],["usize"],["i32"],[R[18]]]]],[11,"compute_homology",E,E,55,[[["self"],["u32"],["i32"]]]],[11,R[79],E,E,55,[[["self"]],[R[5]]]],[8,R[214],E,E,N,N],[11,"prime",E,E,56,[[["self"]],["u32"]]],[10,R[44],E,E,56,[[["self"]],[[R[45]],["rc",[R[45]]]]]],[10,R[0],E,E,56,[[["self"]],["i32"]]],[10,R[72],E,E,56,[[["self"]],["rc"]]],[10,R[74],E,E,56,[[["self"],["u32"]],["rc"]]],[10,R[75],E,E,56,[[["self"],["u32"]],["rc"]]],[10,R[76],E,E,56,[[["self"],["u32"],["i32"]]]],[10,R[77],E,E,56,[[["self"]],["u32"]]],[10,R[73],E,E,56,[[["self"]],["i32"]]],[10,R[133],E,E,56,[[["self"],["u32"],["vec",["usize"]],["i32"],["usize"]]]],[10,R[84],E,E,56,[[["self"],["u32"],["i32"]],["vec"]]],[10,R[134],E,E,56,[[["self"],["u32"]],["i32"]]],[11,"compute_cohomology_through_bidegree",E,E,56,[[["self"],["u32"],["i32"]]]],[11,"cohomology_dimension",E,E,56,[[["self"],["u32"],["i32"]],["usize"]]],[11,R[78],E,E,56,[[["self"],["u32"],["usize"],["i32"],[R[18]]]]],[11,"compute_cohomology",E,E,56,[[["self"],["u32"],["i32"]]]],[11,R[79],E,E,56,[[["self"]],[R[5]]]],[11,"new",E,E,53,[[["rc"]],["self"]]],[0,"hom_space",R[10],E,N,N],[3,"HomSpace",R[117],E,N,N],[12,R[44],E,E,57,N],[12,R[80],E,E,57,N],[12,R[81],E,E,57,N],[12,"block_structures",E,E,57,N],[11,"new",E,E,57,[[["rc",[R[62]]],[R[62]],["rc"]],["self"]]],[11,R[80],E,E,57,[[["self"]],[["rc",[R[62]]],[R[62]]]]],[11,R[81],E,E,57,[[["self"]],["rc"]]],[11,"element_to_homomorphism",E,E,57,[[["self"],[R[18]],["i32"]],[R[82]]]],[11,"evaluate_basis_map_on_element",E,E,57,[[["self"],["u32"],["usize"],["i32"],[R[18]],[R[18]]]]],[0,"hom_pullback",R[10],E,N,N],[3,R[215],R[118],E,N,N],[12,R[80],E,E,58,N],[12,R[81],E,E,58,N],[12,"map",E,E,58,N],[12,"kernel",E,E,58,N],[12,R[61],E,E,58,N],[12,R[73],E,E,58,N],[11,"new",E,E,58,[[["rc",[R[83]]],[R[82],[R[62]]],[R[83]],["rc",[R[82]]]],["self"]]],[0,"hom_complex",R[10],E,N,N],[3,R[216],R[119],E,N,N],[12,R[0],E,E,59,N],[12,R[80],E,E,59,N],[12,R[81],E,E,59,N],[12,R[72],E,E,59,N],[12,"modules",E,E,59,N],[12,R[86],E,E,59,N],[12,R[84],E,E,59,N],[11,"new",E,E,59,[[["rc"],["rc"]],["self"]]],[0,R[85],R[10],E,N,N],[3,R[217],R[120],"ResolutionInner contains the data of the actual…",N,N],[12,"complex",E,E,60,N],[12,"modules",E,E,60,N],[12,R[72],E,E,60,N],[12,"chain_maps",E,E,60,N],[12,R[86],E,E,60,N],[12,"phantom",E,E,60,N],[12,"kernels",E,E,60,N],[3,"Cocycle",E,E,N,N],[12,"s",E,E,61,N],[12,T,E,E,61,N],[12,"class",E,E,61,N],[12,"name",E,E,61,N],[3,"SelfMap",E,E,N,N],[12,"s",E,E,62,N],[12,T,E,E,62,N],[12,"name",E,E,62,N],[12,"map_data",E,E,62,N],[12,"map",E,E,62,N],[3,R[218],E,"Fields * `kernels` - For each internal degree, store the…",N,N],[12,"inner",E,E,63,N],[12,"next_s",E,E,63,N],[12,"next_t",E,E,63,N],[12,"add_class",E,E,63,N],[12,R[87],E,E,63,N],[12,"filtration_one_products",E,E,63,N],[12,"unit_resolution",E,E,63,N],[12,"unit_resolution_owner",E,E,63,N],[12,"product_names",E,E,63,N],[12,"product_list",E,E,63,N],[12,"chain_maps_to_unit_resolution",E,E,63,N],[12,"max_product_homological_degree",E,E,63,N],[12,"self_maps",E,E,63,N],[5,"ptr_eq",E,"Hack to compare two pointers of different types (in this…",N,[[["rc"],["rc"]],["bool"]]],[6,"ModuleResolution",E,E,N,N],[11,"new",E,E,60,[[["rc"]],["self"]]],[11,"extend_through_degree",E,"This function prepares the ResolutionInner object to…",60,[[["self"],["u32"],["i32"]]]],[11,"step_resolution",E,"Call our resolution $X$, and the chain complex to resolve…",60,[[["self"],["u32"],["i32"]]]],[11,"cocycle_string",E,E,60,[[["self"],["u32"],["usize"],["i32"]],[R[5]]]],[11,"complex",E,E,60,[[["self"]],["rc"]]],[11,R[44],E,E,60,[[["self"]],[[R[45]],["rc",[R[45]]]]]],[11,R[74],E,E,60,[[["self"],["u32"]],[["rc",[R[62]]],[R[62]]]]],[11,R[72],E,E,60,[[["self"]],[["rc",[R[62]]],[R[62]]]]],[11,"number_of_gens_in_bidegree",E,E,60,[[["self"],["u32"],["i32"]],["usize"]]],[11,"chain_map",E,E,60,[[["self"],["u32"]],[R[82]]]],[11,R[75],E,E,60,[[["self"],["u32"]],[[R[82],[R[62]]],["rc",[R[82]]]]]],[11,R[0],E,E,60,[[["self"]],["i32"]]],[11,"prime",E,E,60,[[["self"]],["u32"]]],[11,"new",E,E,63,[[["box",["fn"]],[R[42],["box"]],["rc"],[R[42],["box"]],["box",["fn"]]],["self"]]],[11,"resolve_through_bidegree",E,E,63,[[["self"],["u32"],["i32"]]]],[11,"resolve_through_degree",E,E,63,[[["self"],["i32"]]]],[11,"step",E,E,63,[[["self"],["u32"],["i32"]]]],[11,"compute_filtration_one_products",E,E,63,[[["self"],["u32"],["i32"]]]],[11,R[87],E,E,63,[[["self"],["u32"],["vec",["vec"]],["i32"],["vec",["u32"]],["str"],["bool"]]]],[11,R[280],E,"The return value is whether the product was actually…",63,[[["self"],["u32"],["i32"],["vec",["u32"]],["str"]],["bool"]]],[11,"catch_up_products",E,"This function computes the products between the element…",63,[[["self"]]]],[11,"construct_unit_resolution",E,E,63,[[["self"]]]],[11,"set_unit_resolution",E,E,63,[[["self"],["weak",["refcell"]],["refcell",[R[281]]]]]],[11,"compute_products",E,"Compute products whose result lie in degrees up to (s, t)",63,[[["self"],["u32"],["i32"]]]],[11,"compute_product_step",E,"Target = result of the product Source = multiplicand",63,[[["self"],["u32"],["i32"],["cocycle"]]]],[11,"extend_maps_to_unit",E,"This ensures the chain_maps_to_unit_resolution are defined…",63,[[["self"],["u32"],["i32"]]]],[11,"add_self_map",E,"The return value is whether the self map was actually…",63,[[["self"],["u32"],[R[52]],["i32"],["str"]],["bool"]]],[11,"compute_self_maps",E,"We compute the products by self maps where the result has…",63,[[["self"],["u32"],["i32"]]]],[0,"resolution_homomorphism",R[10],E,N,N],[3,R[219],R[121],E,N,N],[12,"name",E,E,64,N],[12,R[80],E,E,64,N],[12,R[81],E,E,64,N],[12,"maps",E,E,64,N],[12,"homological_degree_shift",E,E,64,N],[12,"internal_degree_shift",E,E,64,N],[6,"ResolutionHomomorphismToUnit",E,E,N,N],[11,"new",E,E,64,[[["weak",[R[88]]],["u32"],[R[88]],[R[5]],[R[88]],["i32"],["weak",[R[88]]]],["self"]]],[11,"get_map_ensure_length",E,E,64,[[["self"],["u32"]],[R[82]]]],[11,"get_map",E,E,64,[[["self"],["u32"]],[R[82]]]],[11,"extend",E,"Extend the resolution homomorphism such that it is defined…",64,[[["self"],["u32"],["i32"]]]],[11,"extend_step",E,E,64,[[["self"],["u32"],[R[52]],["i32"],[R[42],[R[52]]]]]],[11,"extend_step_helper",E,E,64,[[["self"],["u32"],[R[52]],["i32"],[R[42],[R[52]]]],[R[52]]]],[0,"cli_module_loaders",R[10],E,N,N],[5,"query","rust_ext::cli_module_loaders",E,N,[[["str"],["f"]],[R[89]]]],[5,"query_with_default",E,E,N,[[[R[89]],["str"],["f"]],[R[89]]]],[5,"query_with_default_no_default_indicated",E,E,N,[[[R[89]],["str"],["f"]],[R[89]]]],[5,"query_yes_no",E,E,N,[[["str"]],["bool"]]],[5,"get_gens",E,E,N,[[["i32"]],[[R[1],["bivec","box"]],["bivec",["vec"]],["box",[R[6]]]]]],[5,"gens_to_json",E,E,N,[[["bivec"]],["value"]]],[5,"get_expression_to_vector",E,E,N,[[[R[18]],["str"],["f"]]]],[5,"interactive_module_define",E,E,N,[[],[[R[5]],["box",[R[6]]],[R[1],[R[5],"box"]]]]],[5,"interactive_module_define_fdmodule",E,E,N,[[["u32"],["value"],["bool"]],[["box",[R[6]]],["value"],[R[1],["value","box"]]]]],[5,"get_relation",E,E,N,[[[R[37]],[R[38]],[R[62]],[R[43]]],[[R[5]],[R[1],[R[5]]]]]],[5,"interactive_module_define_fpmodule",E,E,N,[[["u32"],["value"],["bool"]],[["box",[R[6]]],["value"],[R[1],["value","box"]]]]],[11,"from",R[10],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[90],E,E,0,[[[U]],[R[1]]]],[11,R[91],E,E,0,[[],[R[1]]]],[11,R[95],E,E,0,[[["self"]],[T]]],[11,R[92],E,E,0,[[["self"]],[T]]],[11,R[93],E,E,0,[[["self"]],[R[96]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[90],E,E,1,[[[U]],[R[1]]]],[11,R[91],E,E,1,[[],[R[1]]]],[11,R[95],E,E,1,[[["self"]],[T]]],[11,R[92],E,E,1,[[["self"]],[T]]],[11,R[93],E,E,1,[[["self"]],[R[96]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[94],E,E,2,[[["self"]],[R[5]]]],[11,R[90],E,E,2,[[[U]],[R[1]]]],[11,R[91],E,E,2,[[],[R[1]]]],[11,R[95],E,E,2,[[["self"]],[T]]],[11,R[92],E,E,2,[[["self"]],[T]]],[11,R[93],E,E,2,[[["self"]],[R[96]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[94],E,E,3,[[["self"]],[R[5]]]],[11,R[90],E,E,3,[[[U]],[R[1]]]],[11,R[91],E,E,3,[[],[R[1]]]],[11,R[95],E,E,3,[[["self"]],[T]]],[11,R[92],E,E,3,[[["self"]],[T]]],[11,R[93],E,E,3,[[["self"]],[R[96]]]],[11,"from",R[97],E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[90],E,E,4,[[[U]],[R[1]]]],[11,R[91],E,E,4,[[],[R[1]]]],[11,R[95],E,E,4,[[["self"]],[T]]],[11,R[92],E,E,4,[[["self"]],[T]]],[11,R[93],E,E,4,[[["self"]],[R[96]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[90],E,E,5,[[[U]],[R[1]]]],[11,R[91],E,E,5,[[],[R[1]]]],[11,R[95],E,E,5,[[["self"]],[T]]],[11,R[92],E,E,5,[[["self"]],[T]]],[11,R[93],E,E,5,[[["self"]],[R[96]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[90],E,E,6,[[[U]],[R[1]]]],[11,R[91],E,E,6,[[],[R[1]]]],[11,R[95],E,E,6,[[["self"]],[T]]],[11,R[92],E,E,6,[[["self"]],[T]]],[11,R[93],E,E,6,[[["self"]],[R[96]]]],[11,R[98],R[99],E,7,[[["self"]],[T]]],[11,R[100],E,E,7,[[["self"],[T]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[90],E,E,7,[[[U]],[R[1]]]],[11,R[91],E,E,7,[[],[R[1]]]],[11,R[95],E,E,7,[[["self"]],[T]]],[11,R[92],E,E,7,[[["self"]],[T]]],[11,R[93],E,E,7,[[["self"]],[R[96]]]],[11,R[98],E,E,8,[[["self"]],[T]]],[11,R[100],E,E,8,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[90],E,E,8,[[[U]],[R[1]]]],[11,R[91],E,E,8,[[],[R[1]]]],[11,R[95],E,E,8,[[["self"]],[T]]],[11,R[92],E,E,8,[[["self"]],[T]]],[11,R[93],E,E,8,[[["self"]],[R[96]]]],[11,R[98],E,E,9,[[["self"]],[T]]],[11,R[100],E,E,9,[[["self"],[T]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[90],E,E,9,[[[U]],[R[1]]]],[11,R[91],E,E,9,[[],[R[1]]]],[11,R[95],E,E,9,[[["self"]],[T]]],[11,R[92],E,E,9,[[["self"]],[T]]],[11,R[93],E,E,9,[[["self"]],[R[96]]]],[11,R[98],E,E,10,[[["self"]],[T]]],[11,R[100],E,E,10,[[["self"],[T]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[90],E,E,10,[[[U]],[R[1]]]],[11,R[91],E,E,10,[[],[R[1]]]],[11,R[95],E,E,10,[[["self"]],[T]]],[11,R[92],E,E,10,[[["self"]],[T]]],[11,R[93],E,E,10,[[["self"]],[R[96]]]],[11,R[98],E,E,11,[[["self"]],[T]]],[11,R[100],E,E,11,[[["self"],[T]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[90],E,E,11,[[[U]],[R[1]]]],[11,R[91],E,E,11,[[],[R[1]]]],[11,R[95],E,E,11,[[["self"]],[T]]],[11,R[92],E,E,11,[[["self"]],[T]]],[11,R[93],E,E,11,[[["self"]],[R[96]]]],[11,R[98],E,E,12,[[["self"]],[T]]],[11,R[100],E,E,12,[[["self"],[T]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[90],E,E,12,[[[U]],[R[1]]]],[11,R[91],E,E,12,[[],[R[1]]]],[11,R[95],E,E,12,[[["self"]],[T]]],[11,R[92],E,E,12,[[["self"]],[T]]],[11,R[93],E,E,12,[[["self"]],[R[96]]]],[11,R[107],E,E,13,[[],["i"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[90],E,E,13,[[[U]],[R[1]]]],[11,R[91],E,E,13,[[],[R[1]]]],[11,R[95],E,E,13,[[["self"]],[T]]],[11,R[92],E,E,13,[[["self"]],[T]]],[11,R[93],E,E,13,[[["self"]],[R[96]]]],[11,R[98],E,E,14,[[["self"]],[T]]],[11,R[100],E,E,14,[[["self"],[T]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[94],E,E,14,[[["self"]],[R[5]]]],[11,R[90],E,E,14,[[[U]],[R[1]]]],[11,R[91],E,E,14,[[],[R[1]]]],[11,R[95],E,E,14,[[["self"]],[T]]],[11,R[92],E,E,14,[[["self"]],[T]]],[11,R[93],E,E,14,[[["self"]],[R[96]]]],[11,R[98],R[101],E,16,[[["self"]],[T]]],[11,R[100],E,E,16,[[["self"],[T]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[94],E,E,16,[[["self"]],[R[5]]]],[11,R[90],E,E,16,[[[U]],[R[1]]]],[11,R[91],E,E,16,[[],[R[1]]]],[11,R[95],E,E,16,[[["self"]],[T]]],[11,R[92],E,E,16,[[["self"]],[T]]],[11,R[93],E,E,16,[[["self"]],[R[96]]]],[11,R[98],E,E,17,[[["self"]],[T]]],[11,R[100],E,E,17,[[["self"],[T]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[90],E,E,17,[[[U]],[R[1]]]],[11,R[91],E,E,17,[[],[R[1]]]],[11,R[95],E,E,17,[[["self"]],[T]]],[11,R[92],E,E,17,[[["self"]],[T]]],[11,R[93],E,E,17,[[["self"]],[R[96]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[90],E,E,18,[[[U]],[R[1]]]],[11,R[91],E,E,18,[[],[R[1]]]],[11,R[95],E,E,18,[[["self"]],[T]]],[11,R[92],E,E,18,[[["self"]],[T]]],[11,R[93],E,E,18,[[["self"]],[R[96]]]],[11,"from",R[102],E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[90],E,E,19,[[[U]],[R[1]]]],[11,R[91],E,E,19,[[],[R[1]]]],[11,R[95],E,E,19,[[["self"]],[T]]],[11,R[92],E,E,19,[[["self"]],[T]]],[11,R[93],E,E,19,[[["self"]],[R[96]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[90],E,E,20,[[[U]],[R[1]]]],[11,R[91],E,E,20,[[],[R[1]]]],[11,R[95],E,E,20,[[["self"]],[T]]],[11,R[92],E,E,20,[[["self"]],[T]]],[11,R[93],E,E,20,[[["self"]],[R[96]]]],[11,"from",R[103],E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[90],E,E,21,[[[U]],[R[1]]]],[11,R[91],E,E,21,[[],[R[1]]]],[11,R[95],E,E,21,[[["self"]],[T]]],[11,R[92],E,E,21,[[["self"]],[T]]],[11,R[93],E,E,21,[[["self"]],[R[96]]]],[11,"from",R[104],E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[90],E,E,23,[[[U]],[R[1]]]],[11,R[91],E,E,23,[[],[R[1]]]],[11,R[95],E,E,23,[[["self"]],[T]]],[11,R[92],E,E,23,[[["self"]],[T]]],[11,R[93],E,E,23,[[["self"]],[R[96]]]],[11,"from",R[105],E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[90],E,E,24,[[[U]],[R[1]]]],[11,R[91],E,E,24,[[],[R[1]]]],[11,R[95],E,E,24,[[["self"]],[T]]],[11,R[92],E,E,24,[[["self"]],[T]]],[11,R[93],E,E,24,[[["self"]],[R[96]]]],[11,R[98],E,E,25,[[["self"]],[T]]],[11,R[100],E,E,25,[[["self"],[T]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[94],E,E,25,[[["self"]],[R[5]]]],[11,R[90],E,E,25,[[[U]],[R[1]]]],[11,R[91],E,E,25,[[],[R[1]]]],[11,R[95],E,E,25,[[["self"]],[T]]],[11,R[92],E,E,25,[[["self"]],[T]]],[11,R[93],E,E,25,[[["self"]],[R[96]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[90],E,E,26,[[[U]],[R[1]]]],[11,R[91],E,E,26,[[],[R[1]]]],[11,R[95],E,E,26,[[["self"]],[T]]],[11,R[92],E,E,26,[[["self"]],[T]]],[11,R[93],E,E,26,[[["self"]],[R[96]]]],[11,"from",R[106],E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[90],E,E,27,[[[U]],[R[1]]]],[11,R[91],E,E,27,[[],[R[1]]]],[11,R[95],E,E,27,[[["self"]],[T]]],[11,R[92],E,E,27,[[["self"]],[T]]],[11,R[93],E,E,27,[[["self"]],[R[96]]]],[11,R[98],E,E,28,[[["self"]],[T]]],[11,R[100],E,E,28,[[["self"],[T]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[90],E,E,28,[[[U]],[R[1]]]],[11,R[91],E,E,28,[[],[R[1]]]],[11,R[95],E,E,28,[[["self"]],[T]]],[11,R[92],E,E,28,[[["self"]],[T]]],[11,R[93],E,E,28,[[["self"]],[R[96]]]],[11,R[98],E,E,29,[[["self"]],[T]]],[11,R[100],E,E,29,[[["self"],[T]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[94],E,E,29,[[["self"]],[R[5]]]],[11,R[90],E,E,29,[[[U]],[R[1]]]],[11,R[91],E,E,29,[[],[R[1]]]],[11,R[95],E,E,29,[[["self"]],[T]]],[11,R[92],E,E,29,[[["self"]],[T]]],[11,R[93],E,E,29,[[["self"]],[R[96]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[90],E,E,30,[[[U]],[R[1]]]],[11,R[91],E,E,30,[[],[R[1]]]],[11,R[95],E,E,30,[[["self"]],[T]]],[11,R[92],E,E,30,[[["self"]],[T]]],[11,R[93],E,E,30,[[["self"]],[R[96]]]],[11,R[107],E,E,31,[[],["i"]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[90],E,E,31,[[[U]],[R[1]]]],[11,R[91],E,E,31,[[],[R[1]]]],[11,R[95],E,E,31,[[["self"]],[T]]],[11,R[92],E,E,31,[[["self"]],[T]]],[11,R[93],E,E,31,[[["self"]],[R[96]]]],[11,"from",R[108],E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[94],E,E,32,[[["self"]],[R[5]]]],[11,R[90],E,E,32,[[[U]],[R[1]]]],[11,R[91],E,E,32,[[],[R[1]]]],[11,R[95],E,E,32,[[["self"]],[T]]],[11,R[92],E,E,32,[[["self"]],[T]]],[11,R[93],E,E,32,[[["self"]],[R[96]]]],[11,R[98],E,E,33,[[["self"]],[T]]],[11,R[100],E,E,33,[[["self"],[T]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[90],E,E,33,[[[U]],[R[1]]]],[11,R[91],E,E,33,[[],[R[1]]]],[11,R[95],E,E,33,[[["self"]],[T]]],[11,R[92],E,E,33,[[["self"]],[T]]],[11,R[93],E,E,33,[[["self"]],[R[96]]]],[11,R[98],E,E,34,[[["self"]],[T]]],[11,R[100],E,E,34,[[["self"],[T]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[90],E,E,34,[[[U]],[R[1]]]],[11,R[91],E,E,34,[[],[R[1]]]],[11,R[95],E,E,34,[[["self"]],[T]]],[11,R[92],E,E,34,[[["self"]],[T]]],[11,R[93],E,E,34,[[["self"]],[R[96]]]],[11,R[98],E,E,35,[[["self"]],[T]]],[11,R[100],E,E,35,[[["self"],[T]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[90],E,E,35,[[[U]],[R[1]]]],[11,R[91],E,E,35,[[],[R[1]]]],[11,R[95],E,E,35,[[["self"]],[T]]],[11,R[92],E,E,35,[[["self"]],[T]]],[11,R[93],E,E,35,[[["self"]],[R[96]]]],[11,"from",R[109],E,65,[[[T]],[T]]],[11,"into",E,E,65,[[],[U]]],[11,R[94],E,E,65,[[["self"]],[R[5]]]],[11,R[90],E,E,65,[[[U]],[R[1]]]],[11,R[91],E,E,65,[[],[R[1]]]],[11,R[95],E,E,65,[[["self"]],[T]]],[11,R[92],E,E,65,[[["self"]],[T]]],[11,R[93],E,E,65,[[["self"]],[R[96]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[94],E,E,36,[[["self"]],[R[5]]]],[11,R[90],E,E,36,[[[U]],[R[1]]]],[11,R[91],E,E,36,[[],[R[1]]]],[11,R[95],E,E,36,[[["self"]],[T]]],[11,R[92],E,E,36,[[["self"]],[T]]],[11,R[93],E,E,36,[[["self"]],[R[96]]]],[11,"from",R[110],E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[90],E,E,37,[[[U]],[R[1]]]],[11,R[91],E,E,37,[[],[R[1]]]],[11,R[95],E,E,37,[[["self"]],[T]]],[11,R[92],E,E,37,[[["self"]],[T]]],[11,R[93],E,E,37,[[["self"]],[R[96]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[94],E,E,38,[[["self"]],[R[5]]]],[11,R[90],E,E,38,[[[U]],[R[1]]]],[11,R[91],E,E,38,[[],[R[1]]]],[11,R[95],E,E,38,[[["self"]],[T]]],[11,R[92],E,E,38,[[["self"]],[T]]],[11,R[93],E,E,38,[[["self"]],[R[96]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[94],E,E,39,[[["self"]],[R[5]]]],[11,R[90],E,E,39,[[[U]],[R[1]]]],[11,R[91],E,E,39,[[],[R[1]]]],[11,R[95],E,E,39,[[["self"]],[T]]],[11,R[92],E,E,39,[[["self"]],[T]]],[11,R[93],E,E,39,[[["self"]],[R[96]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[90],E,E,40,[[[U]],[R[1]]]],[11,R[91],E,E,40,[[],[R[1]]]],[11,R[95],E,E,40,[[["self"]],[T]]],[11,R[92],E,E,40,[[["self"]],[T]]],[11,R[93],E,E,40,[[["self"]],[R[96]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[90],E,E,41,[[[U]],[R[1]]]],[11,R[91],E,E,41,[[],[R[1]]]],[11,R[95],E,E,41,[[["self"]],[T]]],[11,R[92],E,E,41,[[["self"]],[T]]],[11,R[93],E,E,41,[[["self"]],[R[96]]]],[11,"from",R[111],E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[90],E,E,43,[[[U]],[R[1]]]],[11,R[91],E,E,43,[[],[R[1]]]],[11,R[95],E,E,43,[[["self"]],[T]]],[11,R[92],E,E,43,[[["self"]],[T]]],[11,R[93],E,E,43,[[["self"]],[R[96]]]],[11,"from",R[112],E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[90],E,E,45,[[[U]],[R[1]]]],[11,R[91],E,E,45,[[],[R[1]]]],[11,R[95],E,E,45,[[["self"]],[T]]],[11,R[92],E,E,45,[[["self"]],[T]]],[11,R[93],E,E,45,[[["self"]],[R[96]]]],[11,"from",R[113],E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[90],E,E,47,[[[U]],[R[1]]]],[11,R[91],E,E,47,[[],[R[1]]]],[11,R[95],E,E,47,[[["self"]],[T]]],[11,R[92],E,E,47,[[["self"]],[T]]],[11,R[93],E,E,47,[[["self"]],[R[96]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[90],E,E,48,[[[U]],[R[1]]]],[11,R[91],E,E,48,[[],[R[1]]]],[11,R[95],E,E,48,[[["self"]],[T]]],[11,R[92],E,E,48,[[["self"]],[T]]],[11,R[93],E,E,48,[[["self"]],[R[96]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[90],E,E,49,[[[U]],[R[1]]]],[11,R[91],E,E,49,[[],[R[1]]]],[11,R[95],E,E,49,[[["self"]],[T]]],[11,R[92],E,E,49,[[["self"]],[T]]],[11,R[93],E,E,49,[[["self"]],[R[96]]]],[11,"from",R[114],E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[90],E,E,50,[[[U]],[R[1]]]],[11,R[91],E,E,50,[[],[R[1]]]],[11,R[95],E,E,50,[[["self"]],[T]]],[11,R[92],E,E,50,[[["self"]],[T]]],[11,R[93],E,E,50,[[["self"]],[R[96]]]],[11,"from",R[115],E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[90],E,E,51,[[[U]],[R[1]]]],[11,R[91],E,E,51,[[],[R[1]]]],[11,R[95],E,E,51,[[["self"]],[T]]],[11,R[92],E,E,51,[[["self"]],[T]]],[11,R[93],E,E,51,[[["self"]],[R[96]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[90],E,E,52,[[[U]],[R[1]]]],[11,R[91],E,E,52,[[],[R[1]]]],[11,R[95],E,E,52,[[["self"]],[T]]],[11,R[92],E,E,52,[[["self"]],[T]]],[11,R[93],E,E,52,[[["self"]],[R[96]]]],[11,"from",R[116],E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[90],E,E,53,[[[U]],[R[1]]]],[11,R[91],E,E,53,[[],[R[1]]]],[11,R[95],E,E,53,[[["self"]],[T]]],[11,R[92],E,E,53,[[["self"]],[T]]],[11,R[93],E,E,53,[[["self"]],[R[96]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[90],E,E,54,[[[U]],[R[1]]]],[11,R[91],E,E,54,[[],[R[1]]]],[11,R[95],E,E,54,[[["self"]],[T]]],[11,R[92],E,E,54,[[["self"]],[T]]],[11,R[93],E,E,54,[[["self"]],[R[96]]]],[11,"from",R[117],E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[90],E,E,57,[[[U]],[R[1]]]],[11,R[91],E,E,57,[[],[R[1]]]],[11,R[95],E,E,57,[[["self"]],[T]]],[11,R[92],E,E,57,[[["self"]],[T]]],[11,R[93],E,E,57,[[["self"]],[R[96]]]],[11,"from",R[118],E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[90],E,E,58,[[[U]],[R[1]]]],[11,R[91],E,E,58,[[],[R[1]]]],[11,R[95],E,E,58,[[["self"]],[T]]],[11,R[92],E,E,58,[[["self"]],[T]]],[11,R[93],E,E,58,[[["self"]],[R[96]]]],[11,"from",R[119],E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[90],E,E,59,[[[U]],[R[1]]]],[11,R[91],E,E,59,[[],[R[1]]]],[11,R[95],E,E,59,[[["self"]],[T]]],[11,R[92],E,E,59,[[["self"]],[T]]],[11,R[93],E,E,59,[[["self"]],[R[96]]]],[11,"from",R[120],E,60,[[[T]],[T]]],[11,"into",E,E,60,[[],[U]]],[11,R[90],E,E,60,[[[U]],[R[1]]]],[11,R[91],E,E,60,[[],[R[1]]]],[11,R[95],E,E,60,[[["self"]],[T]]],[11,R[92],E,E,60,[[["self"]],[T]]],[11,R[93],E,E,60,[[["self"]],[R[96]]]],[11,R[98],E,E,61,[[["self"]],[T]]],[11,R[100],E,E,61,[[["self"],[T]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,"into",E,E,61,[[],[U]]],[11,R[90],E,E,61,[[[U]],[R[1]]]],[11,R[91],E,E,61,[[],[R[1]]]],[11,R[95],E,E,61,[[["self"]],[T]]],[11,R[92],E,E,61,[[["self"]],[T]]],[11,R[93],E,E,61,[[["self"]],[R[96]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,"into",E,E,62,[[],[U]]],[11,R[90],E,E,62,[[[U]],[R[1]]]],[11,R[91],E,E,62,[[],[R[1]]]],[11,R[95],E,E,62,[[["self"]],[T]]],[11,R[92],E,E,62,[[["self"]],[T]]],[11,R[93],E,E,62,[[["self"]],[R[96]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,"into",E,E,63,[[],[U]]],[11,R[90],E,E,63,[[[U]],[R[1]]]],[11,R[91],E,E,63,[[],[R[1]]]],[11,R[95],E,E,63,[[["self"]],[T]]],[11,R[92],E,E,63,[[["self"]],[T]]],[11,R[93],E,E,63,[[["self"]],[R[96]]]],[11,"from",R[121],E,64,[[[T]],[T]]],[11,"into",E,E,64,[[],[U]]],[11,R[90],E,E,64,[[[U]],[R[1]]]],[11,R[91],E,E,64,[[],[R[1]]]],[11,R[95],E,E,64,[[["self"]],[T]]],[11,R[92],E,E,64,[[["self"]],[T]]],[11,R[93],E,E,64,[[["self"]],[R[96]]]],[11,R[80],R[111],E,43,[[["self"]],["rc"]]],[11,R[81],E,E,43,[[["self"]],["rc"]]],[11,R[49],E,E,43,[[["self"]],["i32"]]],[11,R[122],E,E,43,[[["self"],["u32"],["usize"],["i32"],[R[18]]]]],[11,"lock",E,E,43,[[["self"]],[[R[50],["i32"]],["i32"]]]],[11,R[123],E,E,43,[[["self"]],["i32"]]],[11,R[124],E,E,43,[[["self"],["i32"],[R[50]],[R[51]]]]],[11,R[61],E,E,43,[[["self"],["i32"]],[[R[42],[R[51]]],[R[51]]]]],[11,R[125],E,E,43,[[["self"],["i32"],[R[50]],[R[22]]]]],[11,"kernel",E,E,43,[[["self"],["i32"]],[[R[22]],[R[42],[R[22]]]]]],[11,R[80],R[114],E,50,[[["self"]],[["rc",[R[62]]],[R[62]]]]],[11,R[81],E,E,50,[[["self"]],["rc"]]],[11,R[49],E,E,50,[[["self"]],["i32"]]],[11,R[123],E,E,50,[[["self"]],["i32"]]],[11,R[122],E,E,50,[[["self"],["u32"],["usize"],["i32"],[R[18]]]]],[11,"lock",E,E,50,[[["self"]],[[R[50],["i32"]],["i32"]]]],[11,R[124],E,E,50,[[["self"],["i32"],[R[50]],[R[51]]]]],[11,R[61],E,E,50,[[["self"],["i32"]],[[R[42],[R[51]]],[R[51]]]]],[11,R[125],E,E,50,[[["self"],["i32"],[R[50]],[R[22]]]]],[11,"kernel",E,E,50,[[["self"],["i32"]],[[R[22]],[R[42],[R[22]]]]]],[11,R[80],R[118],E,58,[[["self"]],[["rc",[R[83]]],[R[83]]]]],[11,R[81],E,E,58,[[["self"]],[["rc",[R[83]]],[R[83]]]]],[11,R[49],E,E,58,[[["self"]],["i32"]]],[11,R[0],E,E,58,[[["self"]],["i32"]]],[11,R[122],E,E,58,[[["self"],["u32"],["usize"],["i32"],[R[18]]]]],[11,"lock",E,E,58,[[["self"]],[[R[50],["i32"]],["i32"]]]],[11,R[123],E,E,58,[[["self"]],["i32"]]],[11,R[124],E,E,58,[[["self"],["i32"],[R[50]],[R[51]]]]],[11,R[61],E,E,58,[[["self"],["i32"]],[[R[42],[R[51]]],[R[51]]]]],[11,R[125],E,E,58,[[["self"],["i32"],[R[50]],[R[22]]]]],[11,"kernel",E,E,58,[[["self"],["i32"]],[[R[22]],[R[42],[R[22]]]]]],[11,R[2],R[112],E,45,[[["self"]],["i32"]]],[11,R[44],R[116],E,53,[[["self"]],[[R[45]],["rc",[R[45]]]]]],[11,R[126],E,E,53,[[["self"],["u32"],["vec",["usize"]],["i32"],["usize"]]]],[11,R[127],E,E,53,[[["self"],["u32"],["i32"]],["vec"]]],[11,R[128],E,E,53,[[["self"],["u32"]],["i32"]]],[11,R[73],E,E,53,[[["self"]],["i32"]]],[11,R[77],E,E,53,[[["self"]],["u32"]]],[11,R[72],E,E,53,[[["self"]],[["rc",[R[129]]],[R[129]]]]],[11,R[74],E,E,53,[[["self"],["u32"]],[["rc",[R[129]]],[R[129]]]]],[11,R[0],E,E,53,[[["self"]],["i32"]]],[11,R[75],E,E,53,[[["self"],["u32"]],[["rc",[R[130]]],[R[130],[R[129],R[129]]]]]],[11,R[76],E,E,53,[[["self"],["u32"],["i32"]]]],[11,R[44],R[120],E,63,[[["self"]],[[R[45]],["rc",[R[45]]]]]],[11,R[73],E,E,63,[[["self"]],["i32"]]],[11,R[77],E,E,63,[[["self"]],["u32"]]],[11,R[72],E,E,63,[[["self"]],[["rc",[R[62]]],[R[62]]]]],[11,R[74],E,E,63,[[["self"],["u32"]],[["rc",[R[62]]],[R[62]]]]],[11,R[0],E,E,63,[[["self"]],["i32"]]],[11,R[126],E,E,63,[[["self"],["u32"],["vec",["usize"]],["i32"],["usize"]]]],[11,R[127],E,E,63,[[["self"],["u32"],["i32"]],["vec"]]],[11,R[131],E,E,63,[[["self"],["u32"],["i32"]],["usize"]]],[11,R[128],E,E,63,[[["self"],["u32"]],["i32"]]],[11,R[75],E,E,63,[[["self"],["u32"]],[[R[82],[R[62]]],["rc",[R[82]]]]]],[11,R[76],E,E,63,[[["self"],["u32"],["i32"]]]],[11,R[44],R[119],E,59,[[["self"]],[[R[45]],["rc",[R[45]]]]]],[11,R[0],E,E,59,[[["self"]],["i32"]]],[11,R[72],E,E,59,[[["self"]],[[R[83]],["rc",[R[83]]]]]],[11,R[74],E,E,59,[[["self"],["u32"]],[[R[83]],["rc",[R[83]]]]]],[11,R[75],E,E,59,[[["self"],["u32"]],[["rc",[R[132]]],[R[132]]]]],[11,R[133],E,E,59,[[["self"],["u32"],["vec",["usize"]],["i32"],["usize"]]]],[11,R[84],E,E,59,[[["self"],["u32"],["i32"]],["vec"]]],[11,R[134],E,E,59,[[["self"],["u32"]],["i32"]]],[11,R[73],E,E,59,[[["self"]],["i32"]]],[11,R[77],E,E,59,[[["self"]],["u32"]]],[11,R[76],E,E,59,[[["self"],["u32"],["i32"]]]],[11,R[135],R[99],E,14,[[["self"],["usize"]]]],[11,R[11],E,E,14,[[["self"]],[R[16]]]],[11,R[136],E,E,14,[[["self"]],[R[16]]]],[11,"prime",E,E,14,[[["self"]],["u32"]]],[11,R[17],E,E,14,[[["self"]],["usize"]]],[11,"offset",E,E,14,[[["self"]],["usize"]]],[11,R[137],E,E,14,[[["self"]],["usize"]]],[11,"slice",E,E,14,[[["self"]]]],[11,R[19],E,E,14,[[["self"],["usize"]]]],[11,R[138],E,E,14,[[["self"]]]],[11,R[20],E,E,14,[[["self"]]]],[11,"min_limb",E,E,14,[[["self"]],["usize"]]],[11,"max_limb",E,E,14,[[["self"]],["usize"]]],[11,"limbs",E,E,14,[[["self"]],["vec"]]],[11,R[139],E,E,14,[[["self"]],["vec"]]],[11,R[140],E,E,14,[[["self"],["usize"]],["u64"]]],[11,R[23],E,E,14,[[["self"]]]],[11,R[141],E,E,14,[[["self"],[R[18]]]]],[11,"assign",E,E,14,[[["self"],[R[18]]]]],[11,"is_zero",E,E,14,[[["self"]],["bool"]]],[11,"entry",E,E,14,[[["self"],["usize"]],["u32"]]],[11,R[142],E,E,14,[[["self"],["u32"],["usize"]]]],[11,R[143],E,E,14,[[["self"],["u32"],["usize"]]]],[11,"unpack",E,E,14,[[["self"]]]],[11,R[144],E,E,14,[[["self"]],[["u32"],["vec",["u32"]]]]],[11,"pack",E,E,14,[[["self"]]]],[11,"add",E,E,14,[[["self"],[R[18]],["u32"]]]],[11,R[145],E,E,14,[[["self"],[R[18]],["u32"]]]],[11,R[146],E,E,14,[[["self"],[R[18]],["u32"]]]],[11,R[147],E,E,14,[[["self"],[R[18]],["u32"]]]],[11,"scale",E,E,14,[[["self"],["u32"]]]],[11,R[135],E,E,9,[[["self"],["usize"]]]],[11,"prime",E,E,9,[[["self"]],["u32"]]],[11,R[11],E,E,9,[[["self"]],[R[16]]]],[11,R[136],E,E,9,[[["self"]],[R[16]]]],[11,R[135],E,E,10,[[["self"],["usize"]]]],[11,"prime",E,E,10,[[["self"]],["u32"]]],[11,R[11],E,E,10,[[["self"]],[R[16]]]],[11,R[136],E,E,10,[[["self"]],[R[16]]]],[11,R[135],E,E,11,[[["self"],["usize"]]]],[11,"prime",E,E,11,[[["self"]],["u32"]]],[11,R[11],E,E,11,[[["self"]],[R[16]]]],[11,R[136],E,E,11,[[["self"]],[R[16]]]],[11,R[135],E,E,12,[[["self"],["usize"]]]],[11,"prime",E,E,12,[[["self"]],["u32"]]],[11,R[11],E,E,12,[[["self"]],[R[16]]]],[11,R[136],E,E,12,[[["self"]],[R[16]]]],[11,R[148],R[103],E,21,[[["self"]],["str"]]],[11,"prime",E,E,21,[[["self"]],["u32"]]],[11,"name",E,E,21,[[["self"]],["str"]]],[11,R[46],E,E,21,[[["self"],["i32"]]]],[11,R[17],E,E,21,[[["self"],["i32"]],["usize"]]],[11,R[149],E,E,21,[[["self"],["u32"],["usize"],["i32"],[R[18]]]]],[11,R[150],E,E,21,[[["self"],["u32"],["usize"],["i32"],[R[18]],[R[18]]]]],[11,R[151],E,E,21,[[["self"],["u32"],["usize"],["i32"],[R[18]],[R[18]]]]],[11,R[152],E,E,21,[[["self"],["u32"],["i32"],[R[18]],[R[18]]]]],[11,R[153],E,E,21,[[["self"]],["vec"]]],[11,R[154],E,E,21,[[["self"],["value"]]]],[11,R[155],E,E,21,[[["self"],["usize"],["i32"]],["value"]]],[11,R[47],E,E,21,[[["self"],["usize"],["i32"]],[R[5]]]],[11,R[48],E,E,21,[[["self"],[R[18]],["i32"]],[R[5]]]],[11,R[66],E,E,21,[[["self"],["i32"]],[["vec",["usize"]],["usize"]]]],[11,R[156],E,E,21,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[157],E,E,21,[[["self"],["i32"]],[["vec",["vec"]],["vec"]]]],[11,R[148],R[104],E,23,[[["self"]],["str"]]],[11,"prime",E,R[158],23,[[["self"]],["u32"]]],[11,"name",E,E,23,[[["self"]],["str"]]],[11,R[46],E,E,23,[[["self"],["i32"]]]],[11,R[17],E,R[159],23,[[["self"],["i32"]],["usize"]]],[11,R[149],E,E,23,[[["self"],["u32"],["usize"],["i32"],[R[18]]]]],[11,R[153],E,E,23,[[["self"]],["vec"]]],[11,R[154],E,R[160],23,[[["self"],["value"]]]],[11,R[155],E,E,23,[[["self"],["usize"],["i32"]],["value"]]],[11,R[47],E,R[161],23,[[["self"],["usize"],["i32"]],[R[5]]]],[11,R[48],E,E,23,[[["self"],[R[18]],["i32"]],[R[5]]]],[11,R[66],E,E,23,[[["self"],["i32"]],[["vec",["usize"]],["usize"]]]],[11,R[156],E,E,23,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[157],E,E,23,[[["self"],["i32"]],[["vec",["vec"]],["vec"]]]],[11,R[148],R[105],E,26,[[["self"]],["str"]]],[11,"prime",E,E,26,[[["self"]],["u32"]]],[11,"name",E,E,26,[[["self"]],["str"]]],[11,R[153],E,E,26,[[["self"]],["vec"]]],[11,R[46],E,E,26,[[["self"],["i32"]]]],[11,R[17],E,E,26,[[["self"],["i32"]],["usize"]]],[11,R[149],E,E,26,[[["self"],["u32"],["usize"],["i32"],[R[18]]]]],[11,R[154],E,E,26,[[["self"],["value"]]]],[11,R[155],E,E,26,[[["self"],["usize"],["i32"]],["value"]]],[11,R[47],E,E,26,[[["self"],["usize"],["i32"]],[R[5]]]],[11,R[66],E,E,26,[[["self"],["i32"]],[["vec",["usize"]],["usize"]]]],[11,R[156],E,E,26,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[157],E,"We return Adem relations $b^2 = 0$, $P^i P^j = \\cdots$ for…",26,[[["self"],["i32"]],[["vec",["vec"]],["vec"]]]],[11,R[148],R[106],E,30,[[["self"]],["str"]]],[11,"prime",E,E,30,[[["self"]],["u32"]]],[11,"name",E,E,30,[[["self"]],["str"]]],[11,R[153],E,E,30,[[["self"]],["vec"]]],[11,R[46],E,E,30,[[["self"],["i32"]]]],[11,R[17],E,E,30,[[["self"],["i32"]],["usize"]]],[11,R[149],E,E,30,[[["self"],["u32"],["usize"],["i32"],[R[18]]]]],[11,R[154],E,E,30,[[["self"],["value"]]]],[11,R[155],E,E,30,[[["self"],["usize"],["i32"]],["value"]]],[11,R[47],E,E,30,[[["self"],["usize"],["i32"]],[R[5]]]],[11,R[66],E,"We pick our generators to be Q_0 and all the P(...). This…",30,[[["self"],["i32"]],[["vec",["usize"]],["usize"]]]],[11,R[156],E,E,30,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[157],E,E,30,[[["self"],["i32"]],[["vec",["vec"]],["vec"]]]],[11,R[44],R[110],E,37,[[["self"]],[[R[45]],["rc",[R[45]]]]]],[11,"name",E,E,37,[[["self"]],["str"]]],[11,R[17],E,E,37,[[["self"],["i32"]],["usize"]]],[11,R[0],E,E,37,[[["self"]],["i32"]]],[11,R[162],E,E,37,[[["self"],["u32"],["usize"],["i32"],[R[18]]]]],[11,R[47],E,E,37,[[["self"],["usize"],["i32"]],[R[5]]]],[11,R[44],E,E,40,[[["self"]],[[R[45]],["rc",[R[45]]]]]],[11,"name",E,E,40,[[["self"]],["str"]]],[11,R[0],E,E,40,[[["self"]],["i32"]]],[11,R[46],E,E,40,[[["self"],["i32"]]]],[11,R[17],E,E,40,[[["self"],["i32"]],["usize"]]],[11,R[162],E,E,40,[[["self"],["u32"],["usize"],["i32"],[R[18]]]]],[11,R[47],E,E,40,[[["self"],["usize"],["i32"]],[R[5]]]],[11,"is_unit",E,E,40,[[["self"]],["bool"]]],[11,"prime",E,E,40,[[["self"]],["u32"]]],[11,"act",E,E,40,[[["self"],["u32"],["usize"],["i32"],[R[18]],[R[18]]]]],[11,R[163],E,E,40,[[["self"],["u32"],["i32"],[R[18]],[R[18]]]]],[11,R[164],E,E,40,[[["self"],["i32"]],[R[5]]]],[11,R[48],E,E,40,[[["self"],[R[18]],["i32"]],[R[5]]]],[11,R[44],E,E,41,[[["self"]],[[R[45]],["rc",[R[45]]]]]],[11,"name",E,E,41,[[["self"]],["str"]]],[11,R[0],E,E,41,[[["self"]],["i32"]]],[11,R[46],E,E,41,[[["self"],["i32"]]]],[11,R[17],E,E,41,[[["self"],["i32"]],["usize"]]],[11,R[162],E,E,41,[[["self"],["u32"],["usize"],["i32"],[R[18]]]]],[11,R[47],E,E,41,[[["self"],["usize"],["i32"]],[R[5]]]],[11,"name",R[112],E,45,[[["self"]],["str"]]],[11,R[44],E,E,45,[[["self"]],[[R[45]],["rc",[R[45]]]]]],[11,R[0],E,E,45,[[["self"]],["i32"]]],[11,R[46],E,E,45,[[["self"],["i32"]]]],[11,R[17],E,E,45,[[["self"],["i32"]],["usize"]]],[11,R[47],E,E,45,[[["self"],["usize"],["i32"]],[R[5]]]],[11,"is_unit",E,E,45,[[["self"]],["bool"]]],[11,R[162],E,E,45,[[["self"],["u32"],["usize"],["i32"],[R[18]]]]],[11,"name",R[113],E,49,[[["self"]],["str"]]],[11,R[44],E,E,49,[[["self"]],[[R[45]],["rc",[R[45]]]]]],[11,R[0],E,E,49,[[["self"]],["i32"]]],[11,R[17],E,E,49,[[["self"],["i32"]],["usize"]]],[11,R[47],E,E,49,[[["self"],["usize"],["i32"]],[R[5]]]],[11,R[162],E,E,49,[[["self"],["u32"],["usize"],["i32"],[R[18]]]]],[11,R[44],R[115],E,52,[[["self"]],[[R[45]],["rc",[R[45]]]]]],[11,R[0],E,E,52,[[["self"]],["i32"]]],[11,"name",E,E,52,[[["self"]],["str"]]],[11,R[46],E,E,52,[[["self"],["i32"]]]],[11,R[17],E,E,52,[[["self"],["i32"]],["usize"]]],[11,R[162],E,E,52,[[["self"],["u32"],["usize"],["i32"],[R[18]]]]],[11,R[47],E,E,52,[[["self"],["usize"],["i32"]],[R[5]]]],[11,R[44],R[117],E,57,[[["self"]],[[R[45]],["rc",[R[45]]]]]],[11,"name",E,E,57,[[["self"]],["str"]]],[11,R[0],E,E,57,[[["self"]],["i32"]]],[11,R[46],E,E,57,[[["self"],["i32"]]]],[11,R[17],E,E,57,[[["self"],["i32"]],["usize"]]],[11,R[162],E,E,57,[[["self"],["u32"],["usize"],["i32"],[R[18]]]]],[11,R[47],E,E,57,[[["self"],["usize"],["i32"]],[R[5]]]],[11,"default",R[106],E,28,[[],["qpart"]]],[11,"assert_receiver_is_total_eq",R[101],E,16,[[["self"]]]],[11,"clone",R[99],E,7,[[["self"]],[R[165]]]],[11,"clone",E,E,14,[[["self"]],[R[18]]]],[11,"clone",E,E,8,[[["self"]],[R[16]]]],[11,"clone",E,E,9,[[["self"]],[R[167]]]],[11,"clone",E,E,10,[[["self"]],[R[168]]]],[11,"clone",E,E,11,[[["self"]],[R[169]]]],[11,"clone",E,E,12,[[["self"]],[R[170]]]],[11,"clone",R[101],E,16,[[["self"]],[R[52]]]],[11,"clone",E,E,17,[[["self"]],[R[22]]]],[11,"clone",R[105],E,25,[[["self"]],[R[25]]]],[11,"clone",R[106],E,28,[[["self"]],["qpart"]]],[11,"clone",E,E,29,[[["self"]],[R[33]]]],[11,"clone",R[108],E,33,[[["self"]],[R[166]]]],[11,"clone",E,E,34,[[["self"]],[R[40]]]],[11,"clone",E,E,35,[[["self"]],[R[41]]]],[11,"clone",R[120],E,61,[[["self"]],["cocycle"]]],[11,"eq",R[99],E,14,[[["self"]],["bool"]]],[11,"eq",R[101],E,16,[[["self"],[R[52]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[52]]],["bool"]]],[11,"eq",R[105],E,25,[[["self"]],["bool"]]],[11,"eq",R[106],E,29,[[["self"]],["bool"]]],[11,"from",R[99],E,14,[[[R[167]]],[R[18]]]],[11,"from",E,E,14,[[[R[168]]],[R[18]]]],[11,"from",E,E,14,[[[R[169]]],[R[18]]]],[11,"from",E,E,14,[[[R[170]]],[R[18]]]],[11,"from",R[103],E,21,[[[R[37]]],[R[45]]]],[11,"from",E,E,21,[[[R[38]]],[R[45]]]],[11,"from",E,E,21,[[["field"]],[R[45]]]],[11,"from",R[110],E,40,[[["finitedimensionalmodule"]],[R[4]]]],[11,"from",E,E,40,[[["finitelypresentedmodule"]],[R[4]]]],[11,"next",R[99],E,13,[[["self"]],[R[42]]]],[11,"next",R[106],E,31,[[["self"]],[R[42]]]],[11,"deref",R[101],E,16,[[["self"]]]],[11,"deref",R[105],E,24,[[["self"]],["vec"]]],[11,"deref_mut",R[101],E,16,[[["self"]]]],[11,"hash",R[105],E,25,[[["self"],["h"]]]],[11,"hash",R[106],E,29,[[["self"],["h"]]]],[11,"fmt",R[99],E,14,[[["self"],[R[171]]],[[R[1],[R[6]]],[R[6]]]]],[11,"fmt",R[101],E,16,[[["self"],[R[171]]],[[R[1],[R[6]]],[R[6]]]]],[11,"fmt",R[105],E,25,[[["self"],[R[171]]],[[R[6]],[R[1],[R[6]]]]]],[11,"fmt",R[106],E,29,[[["self"],[R[171]]],[[R[6]],[R[1],[R[6]]]]]],[11,"fmt",R[108],E,32,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",R[109],E,65,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,36,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",R[110],E,38,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,39,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",R[10],E,2,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,3,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",R[97],E,4,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,5,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",R[99],E,14,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,8,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,9,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,10,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,11,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,12,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",R[101],E,16,[[["self"],[R[171]]],[[R[1],[R[6]]],[R[6]]]]],[11,"fmt",E,E,17,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,18,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",R[102],E,19,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,20,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",R[105],E,25,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",R[106],E,29,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",R[108],E,33,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,34,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,35,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,32,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",R[109],E,65,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,36,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",R[110],E,38,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,39,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",R[113],E,47,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",R[10],E,2,[[["self"],[R[171]]],[R[1]]]],[11,"fmt",E,E,3,[[["self"],[R[171]]],[R[1]]]],[11,"index",R[97],E,4,[[["self"],["usize"]],[T]]],[11,"index",E,E,4,[[["self"],["u32"]],[T]]],[11,"index",E,E,5,[[["self"],["i32"]],[T]]],[11,"index",R[101],E,16,[[["self"],["usize"]]]],[11,R[172],E,E,16,[[["self"],["usize"]]]],[11,R[173],R[108],E,32,[[["self"]],["str"]]],[11,R[173],R[109],E,65,[[["self"]],["str"]]],[11,R[173],E,E,36,[[["self"]],["str"]]],[11,R[173],R[110],E,38,[[["self"]],["str"]]],[11,R[173],E,E,39,[[["self"]],["str"]]],[11,R[173],R[10],E,2,[[["self"]],["str"]]],[11,R[173],E,E,3,[[["self"]],["str"]]],[11,"initialize",R[105],E,24,[[["self"]]]],[11,R[174],R[99],E,14,[[["self"],["s"]],[R[1]]]],[11,R[175],E,E,14,[[["d"]],[R[1]]]]],"p":[[3,"Config"],[3,R[176]],[3,R[177]],[3,R[178]],[3,"OnceVec"],[3,R[179]],[3,R[180]],[3,R[181]],[3,R[182]],[3,R[12]],[3,R[13]],[3,R[14]],[3,R[15]],[3,R[183]],[4,"FpVector"],[8,R[184]],[3,"Matrix"],[3,"Subspace"],[3,R[185]],[3,R[186]],[3,R[187]],[4,R[188]],[8,"Algebra"],[3,"Field"],[3,R[27]],[3,R[189]],[3,R[24]],[3,R[190]],[3,"QPart"],[3,R[191]],[3,R[28]],[3,R[192]],[3,R[193]],[4,R[194]],[4,R[195]],[4,R[196]],[3,R[197]],[3,R[198]],[3,R[199]],[3,R[200]],[4,R[201]],[4,R[202]],[8,"Module"],[3,R[203]],[8,R[204]],[3,R[53]],[8,R[205]],[3,R[206]],[3,R[207]],[3,R[208]],[3,R[209]],[3,R[210]],[3,R[65]],[3,R[211]],[4,R[212]],[8,R[213]],[8,R[214]],[3,"HomSpace"],[3,R[215]],[3,R[216]],[3,R[217]],[3,"Cocycle"],[3,"SelfMap"],[3,R[218]],[3,R[219]],[3,R[220]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);