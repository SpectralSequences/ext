var N=null,E="",T="t",U="u",searchIndex={};
var R=["result","try_from","try_into","borrow","borrow_mut","type_id","typeid","TokenBucket","display","min_degree","from_vec","with_capacity","deref_mut","formatter","index_mut","OnceBiVec","max_degree","algebraicobjectsbundle","string","rust_ext","vector_container","dimension","FpVector2","FpVector3","FpVector5","FpVectorGeneric","bit_length","vectorcontainer","fpvector","fpvectoriterator","set_slice","clear_slice","into_slice","iter_mut","subspace","set_to_zero","AdemAlgebra","adembasiselement","ordering","BOCKSTEIN_TABLE","rust_ext::algebra","truncated","MilnorAlgebra","next_degree","basis_table","basis_element_to_index_map","basis_element_from_index","milnorbasiselement","basis_element_to_index","generate_basis_generic","multiply","algebraany","ademalgebra","milnoralgebra","iresult","algebraparsenode","moduleparsenode","adem_algebra","milnor_algebra","option","hashmap","compute_basis","algebra","generators","gen_names","dimensions","FDModule","FPModule","graded_dimension","rust_ext::module","This function will panic if you call it with input such…","from_json","relations","index_table","matrix","module_gens_from_json","gen_idx_to_fp_idx","fp_idx_to_gen_idx","TruncatedModule","A module M where we quotient out everything above degree…","truncation","QuotientModule","Given a module `module`, this is the quotient of `module`…","module","subspaces","basis_list","generator_degree","generator_index","FreeModuleTableEntry","num_gens","basis_element_to_opgen","generator_to_index","FreeModule","add_generators","freemoduletableentry","operationgeneratorpair","HomModule","block_structures","freemodule","TensorModule","SumModule","seek_module_num","quasi_inverse","degree_shift","FreeModuleHomomorphism","rust_ext::module::homomorphism","extend_by_zero","mutexguard","quasiinverse","BoundedModuleHomomorphism","quasi_inverses","boundedmodule","boundedmodulehomomorphism","HomPullback","Given a map `map`: A -> B and `source` = Hom(B, X),…","freemodulehomomorphism","hommodule","TruncatedHomomorphism","TruncatedHomomorphismSource","truncatedmodule","truncated_degree","QuotientHomomorphism","QuotientHomomorphismSource","quotientmodule","FPModuleHomomorphism","underlying_map","FiniteModuleHomomorphism","FPModuleT","get_matrix","total_dimension","basis_element_to_string","element_to_string","fdmodule","chain_complex","zero_module","differentials","modules","chain_maps","HomComplex","cohomology_basis","rust_ext::chain_complex","FiniteChainComplex","FiniteAugmentedChainComplex","target_cc","TensorChainComplex","right_cc","calculate_quasi_inverse","rust_ext::chain_complex::tensor_product_chain_complex","Homomorphism","differential","compute_through_bidegree","homology_gen_to_cocyle","resolution","add_structline","max_computed_degree","resolutioninner","finitemodulehomomorphism","finitemodule","finiteaugmentedchaincomplex","rust_ext::fp_vector","clone_into","to_owned","to_string","rust_ext::matrix","rust_ext::block_structure","rust_ext::algebra::adem_algebra","rust_ext::algebra::milnor_algebra","into_iter","rust_ext::algebra::field","rust_ext::steenrod_parser","rust_ext::steenrod_evaluator","rust_ext::module::finitely_presented_module","rust_ext::module::free_module","rust_ext::module::homomorphism::finite_module_homomorphism","rust_ext::resolution","rust_ext::resolution_homomorphism","decompose","coproduct","apply_to_basis_element","compute_kernels_and_quasi_inverses_through_degree","apply_quasi_inverse","zero_homomorphism","set_homology_basis","homology_basis","max_homology_degree","homology_dimension","hompullback","set_cohomology_basis","max_cohomology_degree","chain_map","reduce_limbs","vector_container_mut","min_index","restore_slice","limbs_mut","limb_mask","shift_assign","is_zero_pure","set_entry","add_basis_element","to_vector","add_tensor","shift_add","shift_right_add","shift_left_add","algebra_type","default_filtration_one_products","multiply_basis_elements","json_to_basis","json_from_basis","decompose_basis_element","relations_to_check","Returns the prime the algebra is over.","Gets the dimension of the algebra in degree `degree`.","Converts a JSON object into a basis element. The way basis…","Converts a basis element into a string for display.","multiply_basis_element_by_element","multiply_element_by_basis_element","multiply_element_by_element","act_on_basis","borrow_output","act_on_basis_borrow","act_by_element","generator_list_string","assert_receiver_is_total_eq","limbbitindexpair","algebrabasiselt","fpvector2","fpvector3","fpvector5","fpvectorgeneric","fpmodule","description","serialize","deserialize","AlgebraicObjectsBundle","ModuleFileNotFoundError","LimbBitIndexPair","VectorContainer","FpVectorIterator","FpVectorMask","FpVectorT","QuasiInverse","GeneratorBasisEltPair","BlockStructure","MilnorProfileOption","AlgebraSpec","InvalidAlgebraError","AlgebraAny","AdemBasisElement","MilnorProfile","MilnorBasisElement","PPartMultiplier","Bialgebra","ParseError","AlgebraBasisElt","AlgebraParseNode","ModuleParseNode","SteenrodCalculator","UnknownBasisElementError","UnknownModuleTypeError","ModuleFailedRelationError","FiniteModule","FPMIndexTable","OperationGeneratorPair","ModuleHomomorphism","ZeroHomomorphism","BoundedModule","ZeroModule","ChainMap","ChainComplexGrading","TensorChainMap","ChainComplex","CochainComplex","AugmentedChainComplex","BoundedChainComplex","ResolutionInner","Resolution","ResolutionHomomorphism","DegreeError","sseqchoice","ext_websocket","permanent","algebra_name","class_names","page_list","AddProductDifferential","AddProductType","AddPermanentClass","AddDifferential","SetClassName","BlockRefresh","AddProduct","Resolving","Construct","ConstructJson","SetStructline","SetDifferential","SetPageList","QueryTable","QueryTableResult","QueryCocycleString","QueryCocycleStringResult","message","construct","process_message","ext_websocket::sseq","ext_websocket::actions","ext_websocket::managers","act_resolution","act_sseq","resolving","constructjson","recipient","addproductdifferential","addproducttype","addpermanentclass","adddifferential","setclassname","blockrefresh","addproduct","setstructline","setdifferential","setpagelist","querytable","querytableresult","querycocyclestring","querycocyclestringresult","Differential","ProductItem","ClassState","AddClass","SetClass","Recipient","SseqChoice","ResolutionManager","SseqManager","Complete","matrices","add_product"];
searchIndex["bivec"]={"doc":E,"i":[[3,"BiVec","bivec","A BiVec is like a Vec, except we allow indices to be…",N,N],[12,"data",E,E,0,N],[12,R[9],E,E,0,N],[11,"new",E,E,0,[[["i32"]],["self"]]],[11,R[10],E,E,0,[[["vec"],["i32"]],["self"]]],[11,R[11],E,E,0,[[["i32"]],["self"]]],[11,R[9],E,E,0,[[["self"]],["i32"]]],[11,R[16],E,"This returns the largest degree in the bivector. This is…",0,[[["self"]],["i32"]]],[11,"len",E,"This returns the \"length\" of the bivector, defined to be…",0,[[["self"]],["i32"]]],[11,"push",E,E,0,[[["self"],[T]]]],[11,"get",E,E,0,[[["self"],["i32"]],[[R[59]],[T]]]],[11,"last",E,E,0,[[["self"]],[[R[59]],[T]]]],[11,"iter",E,E,0,[[["self"]],["iter"]]],[11,R[33],E,E,0,[[["self"]],["itermut"]]],[11,"iter_enum",E,E,0,[[["self"]]]],[11,"extend_with",E,"Extends the bivec such that `max_degree()` is at least…",0,[[["self"],["f"],["i32"]]]],[11,R[161],E,E,0,[[["self"]],[T]]],[11,R[160],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[1],E,E,0,[[[U]],[R[0]]]],[11,R[2],E,E,0,[[],[R[0]]]],[11,R[3],E,E,0,[[["self"]],[T]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[R[6]]]],[11,R[224],E,E,0,[[["self"]]]],[11,"clone",E,E,0,[[["self"]],["bivec"]]],[11,"eq",E,E,0,[[["self"],["bivec"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["bivec"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[0]]]],[11,"index",E,E,0,[[["self"],["i32"]],[T]]],[11,R[14],E,E,0,[[["self"],["i32"]],[T]]],[11,R[233],E,E,0,[[["self"],["s"]],[R[0]]]],[11,R[234],E,E,0,[[["d"]],[R[0]]]]],"p":[[3,"BiVec"]]};
searchIndex["compressor"]={"doc":E,"i":[[5,"ms_to_string","compressor",E,N,[[["i64"]],[R[18]]]],[5,"main",E,E,N,[[]]],[17,"NUM_THREAD",E,E,N,N]],"p":[]};
searchIndex["ext_websocket"]={"doc":E,"i":[[0,"sseq",R[281],E,N,N],[3,R[328],R[306],E,N,N],[12,R[74],E,E,0,N],[12,"source_dim",E,E,0,N],[12,"target_dim",E,E,0,N],[12,"column_to_pivots_row",E,E,0,N],[12,"error",E,E,0,N],[3,"Product",E,"Fields * `matrices[x][y]` : This encodes the matrix of the…",N,N],[12,"name",E,E,1,N],[12,"x",E,E,1,N],[12,"y",E,E,1,N],[12,"left",E,E,1,N],[12,"user",E,E,1,N],[12,R[282],E,E,1,N],[12,R[149],E,E,1,N],[12,R[338],E,E,1,N],[3,R[329],E,E,N,N],[12,"name",E,E,2,N],[12,"mult_x",E,E,2,N],[12,"mult_y",E,E,2,N],[12,R[338],E,E,2,N],[3,"Sseq",E,"Here are some blanket assumptions we make about the order…",N,N],[12,"p",E,E,3,N],[12,"name",E,E,3,N],[12,"min_x",E,E,3,N],[12,"min_y",E,E,3,N],[12,"block_refresh",E,E,3,N],[12,"sender",E,E,3,N],[12,R[285],E,E,3,N],[12,"product_name_to_index",E,E,3,N],[12,"products",E,E,3,N],[12,"classes",E,E,3,N],[12,R[284],E,E,3,N],[12,R[135],E,E,3,N],[12,"permanent_classes",E,E,3,N],[12,"zeros",E,E,3,N],[12,"page_classes",E,E,3,N],[4,R[330],E,E,N,N],[13,"Error",E,E,4,N],[13,"Done",E,E,4,N],[13,"InProgress",E,E,4,N],[5,"express_basis",E,"Given a vector `elt`, a subspace `zeros` of the total…",N,[[[R[28]],[R[59],[R[34]]],[R[34]]],[["u32"],["vec",["u32"]]]]],[17,"MIN_PAGE",E,E,N,N],[17,"INFINITY",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_ClassState",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_ClassState",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_ProductItem",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_ProductItem",E,E,N,N],[11,"new",E,E,0,[[["u32"],["usize"]],["self"]]],[11,R[35],E,E,0,[[["self"]]]],[11,"add",E,E,0,[[["self"],[R[28]],[R[59],[R[28]]]]]],[11,"get_source_target_pairs",E,E,0,[[["self"]],["vec"]]],[11,"reduce_target",E,"Given a subspace of the target space, project the target…",0,[[["self"],[R[34]]]]],[11,"evaluate",E,"This evaluates the differential on `source`, adding the…",0,[[["self"],[R[28]],[R[28]]]]],[11,"prime",E,E,0,[[["self"]],["u32"]]],[11,"new",E,E,3,[[["u32"],["i32"],[R[59],["sender"]],[R[280]],["sender"]],["self"]]],[11,"clear",E,"This clears out all the user actions. This is intended to…",3,[[["self"]]]],[11,"refresh_all",E,E,3,[[["self"]]]],[11,"add_page",E,"Adds a page to the page list, which is the list of pages…",3,[[["self"],["i32"]]]],[11,"allocate_differential_matrix",E,"Initializes `differentials[x][y][r]`. It sets the…",3,[[["self"],["i32"]]]],[11,"allocate_zeros_subspace",E,E,3,[[["self"],["i32"],["bivec"]]]],[11,R[50],E,"Given a class `class` at `(x, y)` and a Product object…",3,[[["self"],[R[28]],["i32"],["product"]],[R[59]]]],[11,"leibniz",E,"Apply the Leibniz rule to obtain new differentials. The…",3,[[["self"],[R[28]],["usize"],["i32"],[R[59],[R[28]]],[R[28]]],[R[59]]]],[11,"compute_edges_inner",E,E,3,[[["u32"],["rwlock",["bivec"]],["i32"],["rwlock",["vec"]],["arc",["rwlock"]],["arc",["rwlock"]],["rwlock",["bivec"]],["arc",["rwlock"]],[R[280]],["sender"]]]],[11,"compute_edges",E,"Computes products whose source is at (x, y).",3,[[["self"],["i32"]]]],[11,"compute_next_page_no_d",E,"Compute the classes in next page assuming there is no…",3,[[["u32"],[R[34]]]]],[11,"compute_next_page_with_d",E,"Compute the classes in next page assuming there might be a…",3,[[["self"],["i32"]]]],[11,"compute_classes",E,"Arguments * `refresh_edge` - Whether to automatically call…",3,[[["self"],["bool"],["i32"]]]],[11,"send_class_data",E,E,3,[[["self"],["i32"]]]],[11,"send",E,E,3,[[["self"],[R[303]]]]],[11,"product_defined",E,E,3,[[["self"],["product"],["i32"]],["bool"]]],[11,"class_defined",E,E,3,[[["self"],["i32"]],["bool"]]],[11,"get_page",E,E,3,[[["bivec"],["i32"]],[T]]],[11,"get_differentials_hitting",E,"Get a list of r for which there is a d_r differential…",3,[[["self"],["i32"]],[["vec",["i32"]],["i32"]]]],[11,"set_class",E,"This function should only be called when everything to the…",3,[[["self"],["usize"],["i32"]]]],[11,"set_class_name",E,E,3,[[["self"],["usize"],["i32"],[R[18]]]]],[11,"add_differential",E,"Add a differential starting at (x, y). This mutates the…",3,[[["self"],[R[28]],["i32"],[R[28]]]]],[11,"add_differential_propagate",E,"This function recursively propagates differentials. If…",3,[[["self"],[R[28]],["usize"],["i32"],[R[59]]]]],[11,"add_permanent_class",E,E,3,[[["self"],[R[28]],["i32"]]]],[11,"add_product_type",E,"Add a product to the list of products, but don't add any…",3,[[["self"],["bool"],["i32"],[R[18]]]]],[11,"add_product_differential",E,E,3,[[["self"],[R[18]]]]],[11,"repropagate_product",E,E,3,[[["self"],["usize"]]]],[11,R[339],E,E,3,[[["self"],["bool"],["vec"],["i32"],[R[18]]]]],[0,"actions",R[281],E,N,N],[3,"Message",R[307],E,N,N],[12,"recipients",E,E,5,N],[12,"sseq",E,E,5,N],[12,"action",E,E,5,N],[3,R[289],E,E,N,N],[12,"x",E,E,6,N],[12,"y",E,E,6,N],[12,"r",E,E,6,N],[12,"source",E,E,6,N],[12,"target",E,E,6,N],[3,R[287],E,E,N,N],[12,"x",E,E,7,N],[12,"y",E,E,7,N],[12,"class",E,E,7,N],[12,"name",E,E,7,N],[12,R[282],E,E,7,N],[3,R[288],E,E,N,N],[12,"x",E,E,8,N],[12,"y",E,E,8,N],[12,"class",E,E,8,N],[3,R[290],E,E,N,N],[12,"x",E,E,9,N],[12,"y",E,E,9,N],[12,"idx",E,E,9,N],[12,"name",E,E,9,N],[3,"Clear",E,E,N,N],[3,R[291],E,"This blocks the sseq object from recomputing classes and…",N,N],[12,"block",E,E,10,N],[3,R[331],E,E,N,N],[12,"x",E,E,11,N],[12,"y",E,E,11,N],[12,"num",E,E,11,N],[3,R[292],E,E,N,N],[12,"mult_x",E,E,12,N],[12,"mult_y",E,E,12,N],[12,"source_x",E,E,12,N],[12,"source_y",E,E,12,N],[12,"name",E,E,12,N],[12,"product",E,E,12,N],[12,"left",E,E,12,N],[3,R[286],E,E,N,N],[12,"source",E,E,13,N],[12,"target",E,E,13,N],[3,R[293],E,E,N,N],[12,"p",E,E,14,N],[12,R[9],E,E,14,N],[12,R[16],E,E,14,N],[12,"is_unit",E,E,14,N],[3,R[337],E,E,N,N],[3,R[294],E,E,N,N],[12,"module_name",E,E,15,N],[12,R[283],E,E,15,N],[3,R[295],E,E,N,N],[12,"data",E,E,16,N],[12,R[283],E,E,16,N],[3,"Resolve",E,E,N,N],[12,R[16],E,E,17,N],[3,R[296],E,E,N,N],[12,"x",E,E,18,N],[12,"y",E,E,18,N],[12,"structlines",E,E,18,N],[3,R[297],E,E,N,N],[12,"x",E,E,19,N],[12,"y",E,E,19,N],[12,"true_differentials",E,E,19,N],[12,R[135],E,E,19,N],[3,R[332],E,E,N,N],[12,"x",E,E,20,N],[12,"y",E,E,20,N],[12,"state",E,E,20,N],[12,"permanents",E,E,20,N],[12,"classes",E,E,20,N],[12,"decompositions",E,E,20,N],[12,R[284],E,E,20,N],[3,R[298],E,E,N,N],[12,R[285],E,E,21,N],[3,R[299],E,E,N,N],[12,"s",E,E,22,N],[12,T,E,E,22,N],[3,R[300],E,E,N,N],[12,"s",E,E,23,N],[12,T,E,E,23,N],[12,R[18],E,E,23,N],[3,R[301],E,E,N,N],[12,"s",E,E,24,N],[12,T,E,E,24,N],[12,"idx",E,E,24,N],[3,R[302],E,E,N,N],[12,"s",E,E,25,N],[12,T,E,E,25,N],[12,"idx",E,E,25,N],[12,R[18],E,E,25,N],[4,R[333],E,E,N,N],[13,"Sseq",E,E,26,N],[13,"Resolver",E,E,26,N],[4,R[334],E,E,N,N],[13,"Main",E,E,27,N],[13,"Unit",E,E,27,N],[4,"Action",E,"This is just a list of everything that implements…",N,N],[13,R[286],E,E,28,N],[13,R[287],E,E,28,N],[13,R[288],E,E,28,N],[13,R[289],E,E,28,N],[13,R[290],E,E,28,N],[13,"Clear",E,E,28,N],[13,R[291],E,E,28,N],[13,R[292],E,E,28,N],[13,R[331],E,E,28,N],[13,R[293],E,E,28,N],[13,R[337],E,E,28,N],[13,R[294],E,E,28,N],[13,R[295],E,E,28,N],[13,"Resolve",E,E,28,N],[13,R[296],E,E,28,N],[13,R[297],E,E,28,N],[13,R[332],E,E,28,N],[13,R[298],E,E,28,N],[13,R[299],E,E,28,N],[13,R[300],E,E,28,N],[13,R[301],E,E,28,N],[13,R[302],E,E,28,N],[17,"_IMPL_SERIALIZE_FOR_Message",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Message",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Recipient",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Recipient",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_SseqChoice",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_SseqChoice",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Action",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Action",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_AddDifferential",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_AddDifferential",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_AddProductType",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_AddProductType",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_AddPermanentClass",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_AddPermanentClass",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_SetClassName",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_SetClassName",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Clear",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Clear",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_BlockRefresh",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_BlockRefresh",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_AddClass",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_AddClass",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_AddProduct",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_AddProduct",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_AddProductDifferential",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_AddProductDifferential",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Resolving",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Resolving",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Complete",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Complete",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Construct",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Construct",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_ConstructJson",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_ConstructJson",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Resolve",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Resolve",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_SetStructline",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_SetStructline",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_SetDifferential",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_SetDifferential",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_SetClass",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_SetClass",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_SetPageList",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_SetPageList",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_QueryTable",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_QueryTable",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_QueryTableResult",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_QueryTableResult",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_QueryCocycleString",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_QueryCocycleString",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_QueryCocycleStringResult",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_QueryCocycleStringResult",E,E,N,N],[8,"ActionT",E,"The name `Action` is sort-of a misnomer. It is the content…",N,N],[11,R[310],E,E,29,[[["self"],["sseq"]],[[R[59],[R[303]]],[R[303]]]]],[11,R[309],E,E,29,[[["self"],["arc"]],[[R[59],[R[303]]],[R[303]]]]],[11,R[162],E,E,29,[[["self"]],[R[18]]]],[0,"managers",R[281],E,N,N],[3,R[335],R[308],"ResolutionManager is a struct that manipulates an…",N,N],[12,"sender",E,E,30,N],[12,"is_unit",E,E,30,N],[12,R[152],E,E,30,N],[3,R[336],E,"This is more-or-less the same as the ResolutionManager,…",N,N],[12,"sender",E,E,31,N],[12,"sseq",E,E,31,N],[12,"unit_sseq",E,E,31,N],[11,"new",E,"Constructs a ResolutionManager object.",30,[[["sender"]],["self"]]],[11,R[305],E,"Reads a message and performs the actions as instructed.",30,[[["self"],[R[303]]],[["box",["error"]],[R[0],["box"]]]]],[11,"construct_json",E,"Resolves a module defined by a json object. The result is…",30,[[["self"],[R[312]]],[["box",["error"]],[R[0],["box"]]]]],[11,R[304],E,"Resolves a module specified by `json`. The result is…",30,[[["self"],[R[304]]],[["box",["error"]],[R[0],["box"]]]]],[11,"process_bundle",E,E,30,[[["self"],[R[17]]]]],[11,"resolve",E,E,30,[[["self"],["resolve"],[R[280]]],[["box",["error"]],[R[0],["box"]]]]],[11,"setup_callback",E,E,30,[[["self"],[R[152]],[R[280]]]]],[11,"new",E,"Constructs a SseqManager object.",31,[[["sender"]],["self"]]],[11,"is_user",E,"Return Whether this was a user action. If it is a user…",31,[[["action"]],["bool"]]],[11,R[305],E,E,31,[[["self"],[R[303]]],[["box",["error"]],[R[0],["bool","box"]],["bool"]]]],[11,"get_sseq",E,E,31,[[["self"],[R[280]]],[["sseq"],[R[59],["sseq"]]]]],[11,R[311],E,E,31,[[["self"],[R[303]]],[["box",["error"]],[R[0],["box"]]]]],[11,"relay",E,E,31,[[["self"],[R[303]]],[["box",["error"]],[R[0],["box"]]]]],[6,"Sender",R[281],E,N,N],[11,"from",R[306],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[1],E,E,0,[[[U]],[R[0]]]],[11,R[2],E,E,0,[[],[R[0]]]],[11,R[3],E,E,0,[[["self"]],[T]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[R[6]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[1],E,E,1,[[[U]],[R[0]]]],[11,R[2],E,E,1,[[],[R[0]]]],[11,R[3],E,E,1,[[["self"]],[T]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[R[6]]]],[11,R[161],E,E,2,[[["self"]],[T]]],[11,R[160],E,E,2,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[1],E,E,2,[[[U]],[R[0]]]],[11,R[2],E,E,2,[[],[R[0]]]],[11,R[3],E,E,2,[[["self"]],[T]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[R[6]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[1],E,E,3,[[[U]],[R[0]]]],[11,R[2],E,E,3,[[],[R[0]]]],[11,R[3],E,E,3,[[["self"]],[T]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[R[6]]]],[11,R[161],E,E,4,[[["self"]],[T]]],[11,R[160],E,E,4,[[["self"],[T]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[1],E,E,4,[[[U]],[R[0]]]],[11,R[2],E,E,4,[[],[R[0]]]],[11,R[3],E,E,4,[[["self"]],[T]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[R[6]]]],[11,R[161],R[307],E,5,[[["self"]],[T]]],[11,R[160],E,E,5,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[162],E,E,5,[[["self"]],[R[18]]]],[11,R[1],E,E,5,[[[U]],[R[0]]]],[11,R[2],E,E,5,[[],[R[0]]]],[11,R[3],E,E,5,[[["self"]],[T]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[R[6]]]],[11,R[161],E,E,6,[[["self"]],[T]]],[11,R[160],E,E,6,[[["self"],[T]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[1],E,E,6,[[[U]],[R[0]]]],[11,R[2],E,E,6,[[],[R[0]]]],[11,R[3],E,E,6,[[["self"]],[T]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[R[6]]]],[11,R[161],E,E,7,[[["self"]],[T]]],[11,R[160],E,E,7,[[["self"],[T]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[1],E,E,7,[[[U]],[R[0]]]],[11,R[2],E,E,7,[[],[R[0]]]],[11,R[3],E,E,7,[[["self"]],[T]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[R[6]]]],[11,R[161],E,E,8,[[["self"]],[T]]],[11,R[160],E,E,8,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[1],E,E,8,[[[U]],[R[0]]]],[11,R[2],E,E,8,[[],[R[0]]]],[11,R[3],E,E,8,[[["self"]],[T]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"]],[R[6]]]],[11,R[161],E,E,9,[[["self"]],[T]]],[11,R[160],E,E,9,[[["self"],[T]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[1],E,E,9,[[[U]],[R[0]]]],[11,R[2],E,E,9,[[],[R[0]]]],[11,R[3],E,E,9,[[["self"]],[T]]],[11,R[4],E,E,9,[[["self"]],[T]]],[11,R[5],E,E,9,[[["self"]],[R[6]]]],[11,R[161],E,E,32,[[["self"]],[T]]],[11,R[160],E,E,32,[[["self"],[T]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[1],E,E,32,[[[U]],[R[0]]]],[11,R[2],E,E,32,[[],[R[0]]]],[11,R[3],E,E,32,[[["self"]],[T]]],[11,R[4],E,E,32,[[["self"]],[T]]],[11,R[5],E,E,32,[[["self"]],[R[6]]]],[11,R[161],E,E,10,[[["self"]],[T]]],[11,R[160],E,E,10,[[["self"],[T]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[1],E,E,10,[[[U]],[R[0]]]],[11,R[2],E,E,10,[[],[R[0]]]],[11,R[3],E,E,10,[[["self"]],[T]]],[11,R[4],E,E,10,[[["self"]],[T]]],[11,R[5],E,E,10,[[["self"]],[R[6]]]],[11,R[161],E,E,11,[[["self"]],[T]]],[11,R[160],E,E,11,[[["self"],[T]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[1],E,E,11,[[[U]],[R[0]]]],[11,R[2],E,E,11,[[],[R[0]]]],[11,R[3],E,E,11,[[["self"]],[T]]],[11,R[4],E,E,11,[[["self"]],[T]]],[11,R[5],E,E,11,[[["self"]],[R[6]]]],[11,R[161],E,E,12,[[["self"]],[T]]],[11,R[160],E,E,12,[[["self"],[T]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[1],E,E,12,[[[U]],[R[0]]]],[11,R[2],E,E,12,[[],[R[0]]]],[11,R[3],E,E,12,[[["self"]],[T]]],[11,R[4],E,E,12,[[["self"]],[T]]],[11,R[5],E,E,12,[[["self"]],[R[6]]]],[11,R[161],E,E,13,[[["self"]],[T]]],[11,R[160],E,E,13,[[["self"],[T]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[1],E,E,13,[[[U]],[R[0]]]],[11,R[2],E,E,13,[[],[R[0]]]],[11,R[3],E,E,13,[[["self"]],[T]]],[11,R[4],E,E,13,[[["self"]],[T]]],[11,R[5],E,E,13,[[["self"]],[R[6]]]],[11,R[161],E,E,14,[[["self"]],[T]]],[11,R[160],E,E,14,[[["self"],[T]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[1],E,E,14,[[[U]],[R[0]]]],[11,R[2],E,E,14,[[],[R[0]]]],[11,R[3],E,E,14,[[["self"]],[T]]],[11,R[4],E,E,14,[[["self"]],[T]]],[11,R[5],E,E,14,[[["self"]],[R[6]]]],[11,R[161],E,E,33,[[["self"]],[T]]],[11,R[160],E,E,33,[[["self"],[T]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[1],E,E,33,[[[U]],[R[0]]]],[11,R[2],E,E,33,[[],[R[0]]]],[11,R[3],E,E,33,[[["self"]],[T]]],[11,R[4],E,E,33,[[["self"]],[T]]],[11,R[5],E,E,33,[[["self"]],[R[6]]]],[11,R[161],E,E,15,[[["self"]],[T]]],[11,R[160],E,E,15,[[["self"],[T]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[1],E,E,15,[[[U]],[R[0]]]],[11,R[2],E,E,15,[[],[R[0]]]],[11,R[3],E,E,15,[[["self"]],[T]]],[11,R[4],E,E,15,[[["self"]],[T]]],[11,R[5],E,E,15,[[["self"]],[R[6]]]],[11,R[161],E,E,16,[[["self"]],[T]]],[11,R[160],E,E,16,[[["self"],[T]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[1],E,E,16,[[[U]],[R[0]]]],[11,R[2],E,E,16,[[],[R[0]]]],[11,R[3],E,E,16,[[["self"]],[T]]],[11,R[4],E,E,16,[[["self"]],[T]]],[11,R[5],E,E,16,[[["self"]],[R[6]]]],[11,R[161],E,E,17,[[["self"]],[T]]],[11,R[160],E,E,17,[[["self"],[T]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[1],E,E,17,[[[U]],[R[0]]]],[11,R[2],E,E,17,[[],[R[0]]]],[11,R[3],E,E,17,[[["self"]],[T]]],[11,R[4],E,E,17,[[["self"]],[T]]],[11,R[5],E,E,17,[[["self"]],[R[6]]]],[11,R[161],E,E,18,[[["self"]],[T]]],[11,R[160],E,E,18,[[["self"],[T]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[1],E,E,18,[[[U]],[R[0]]]],[11,R[2],E,E,18,[[],[R[0]]]],[11,R[3],E,E,18,[[["self"]],[T]]],[11,R[4],E,E,18,[[["self"]],[T]]],[11,R[5],E,E,18,[[["self"]],[R[6]]]],[11,R[161],E,E,19,[[["self"]],[T]]],[11,R[160],E,E,19,[[["self"],[T]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[1],E,E,19,[[[U]],[R[0]]]],[11,R[2],E,E,19,[[],[R[0]]]],[11,R[3],E,E,19,[[["self"]],[T]]],[11,R[4],E,E,19,[[["self"]],[T]]],[11,R[5],E,E,19,[[["self"]],[R[6]]]],[11,R[161],E,E,20,[[["self"]],[T]]],[11,R[160],E,E,20,[[["self"],[T]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[1],E,E,20,[[[U]],[R[0]]]],[11,R[2],E,E,20,[[],[R[0]]]],[11,R[3],E,E,20,[[["self"]],[T]]],[11,R[4],E,E,20,[[["self"]],[T]]],[11,R[5],E,E,20,[[["self"]],[R[6]]]],[11,R[161],E,E,21,[[["self"]],[T]]],[11,R[160],E,E,21,[[["self"],[T]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[1],E,E,21,[[[U]],[R[0]]]],[11,R[2],E,E,21,[[],[R[0]]]],[11,R[3],E,E,21,[[["self"]],[T]]],[11,R[4],E,E,21,[[["self"]],[T]]],[11,R[5],E,E,21,[[["self"]],[R[6]]]],[11,R[161],E,E,22,[[["self"]],[T]]],[11,R[160],E,E,22,[[["self"],[T]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[1],E,E,22,[[[U]],[R[0]]]],[11,R[2],E,E,22,[[],[R[0]]]],[11,R[3],E,E,22,[[["self"]],[T]]],[11,R[4],E,E,22,[[["self"]],[T]]],[11,R[5],E,E,22,[[["self"]],[R[6]]]],[11,R[161],E,E,23,[[["self"]],[T]]],[11,R[160],E,E,23,[[["self"],[T]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[1],E,E,23,[[[U]],[R[0]]]],[11,R[2],E,E,23,[[],[R[0]]]],[11,R[3],E,E,23,[[["self"]],[T]]],[11,R[4],E,E,23,[[["self"]],[T]]],[11,R[5],E,E,23,[[["self"]],[R[6]]]],[11,R[161],E,E,24,[[["self"]],[T]]],[11,R[160],E,E,24,[[["self"],[T]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[1],E,E,24,[[[U]],[R[0]]]],[11,R[2],E,E,24,[[],[R[0]]]],[11,R[3],E,E,24,[[["self"]],[T]]],[11,R[4],E,E,24,[[["self"]],[T]]],[11,R[5],E,E,24,[[["self"]],[R[6]]]],[11,R[161],E,E,25,[[["self"]],[T]]],[11,R[160],E,E,25,[[["self"],[T]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[1],E,E,25,[[[U]],[R[0]]]],[11,R[2],E,E,25,[[],[R[0]]]],[11,R[3],E,E,25,[[["self"]],[T]]],[11,R[4],E,E,25,[[["self"]],[T]]],[11,R[5],E,E,25,[[["self"]],[R[6]]]],[11,R[161],E,E,26,[[["self"]],[T]]],[11,R[160],E,E,26,[[["self"],[T]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[1],E,E,26,[[[U]],[R[0]]]],[11,R[2],E,E,26,[[],[R[0]]]],[11,R[3],E,E,26,[[["self"]],[T]]],[11,R[4],E,E,26,[[["self"]],[T]]],[11,R[5],E,E,26,[[["self"]],[R[6]]]],[11,R[161],E,E,27,[[["self"]],[T]]],[11,R[160],E,E,27,[[["self"],[T]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[1],E,E,27,[[[U]],[R[0]]]],[11,R[2],E,E,27,[[],[R[0]]]],[11,R[3],E,E,27,[[["self"]],[T]]],[11,R[4],E,E,27,[[["self"]],[T]]],[11,R[5],E,E,27,[[["self"]],[R[6]]]],[11,R[161],E,E,28,[[["self"]],[T]]],[11,R[160],E,E,28,[[["self"],[T]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[1],E,E,28,[[[U]],[R[0]]]],[11,R[2],E,E,28,[[],[R[0]]]],[11,R[3],E,E,28,[[["self"]],[T]]],[11,R[4],E,E,28,[[["self"]],[T]]],[11,R[5],E,E,28,[[["self"]],[R[6]]]],[11,"from",R[308],E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[1],E,E,30,[[[U]],[R[0]]]],[11,R[2],E,E,30,[[],[R[0]]]],[11,R[3],E,E,30,[[["self"]],[T]]],[11,R[4],E,E,30,[[["self"]],[T]]],[11,R[5],E,E,30,[[["self"]],[R[6]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[1],E,E,31,[[[U]],[R[0]]]],[11,R[2],E,E,31,[[],[R[0]]]],[11,R[3],E,E,31,[[["self"]],[T]]],[11,R[4],E,E,31,[[["self"]],[T]]],[11,R[5],E,E,31,[[["self"]],[R[6]]]],[11,R[310],R[307],E,28,[[["self"],["sseq"]],[[R[59],[R[303]]],[R[303]]]]],[11,R[309],E,E,28,[[["self"],["arc"]],[[R[59],[R[303]]],[R[303]]]]],[11,R[162],E,E,28,[[["self"]],[R[18]]]],[11,R[310],E,E,6,[[["self"],["sseq"]],[[R[59],[R[303]]],[R[303]]]]],[11,R[310],E,E,7,[[["self"],["sseq"]],[[R[59],[R[303]]],[R[303]]]]],[11,R[309],E,E,7,[[["self"],["arc"]],[[R[59],[R[303]]],[R[303]]]]],[11,R[310],E,E,8,[[["self"],["sseq"]],[[R[59],[R[303]]],[R[303]]]]],[11,R[310],E,E,9,[[["self"],["sseq"]],[[R[59],[R[303]]],[R[303]]]]],[11,R[310],E,E,32,[[["self"],["sseq"]],[[R[59],[R[303]]],[R[303]]]]],[11,R[310],E,E,10,[[["self"],["sseq"]],[[R[59],[R[303]]],[R[303]]]]],[11,R[310],E,E,11,[[["self"],["sseq"]],[[R[59],[R[303]]],[R[303]]]]],[11,R[310],E,E,12,[[["self"],["sseq"]],[[R[59],[R[303]]],[R[303]]]]],[11,R[310],E,E,13,[[["self"],["sseq"]],[[R[59],[R[303]]],[R[303]]]]],[11,R[309],E,E,13,[[["self"],["arc"]],[[R[59],[R[303]]],[R[303]]]]],[11,R[162],E,E,13,[[["self"]],[R[18]]]],[11,R[309],E,E,22,[[["self"],["arc"]],[[R[59],[R[303]]],[R[303]]]]],[11,R[309],E,E,24,[[["self"],["arc"]],[[R[59],[R[303]]],[R[303]]]]],[11,"clone",R[306],E,4,[[["self"]],["classstate"]]],[11,"clone",E,E,2,[[["self"]],["productitem"]]],[11,"clone",R[307],E,5,[[["self"]],[R[303]]]],[11,"clone",E,E,26,[[["self"]],[R[313]]]],[11,"clone",E,E,27,[[["self"]],[R[280]]]],[11,"clone",E,E,28,[[["self"]],["action"]]],[11,"clone",E,E,6,[[["self"]],[R[317]]]],[11,"clone",E,E,7,[[["self"]],[R[315]]]],[11,"clone",E,E,8,[[["self"]],[R[316]]]],[11,"clone",E,E,9,[[["self"]],[R[318]]]],[11,"clone",E,E,32,[[["self"]],["clear"]]],[11,"clone",E,E,10,[[["self"]],[R[319]]]],[11,"clone",E,E,11,[[["self"]],["addclass"]]],[11,"clone",E,E,12,[[["self"]],[R[320]]]],[11,"clone",E,E,13,[[["self"]],[R[314]]]],[11,"clone",E,E,14,[[["self"]],[R[311]]]],[11,"clone",E,E,33,[[["self"]],["complete"]]],[11,"clone",E,E,15,[[["self"]],[R[304]]]],[11,"clone",E,E,16,[[["self"]],[R[312]]]],[11,"clone",E,E,17,[[["self"]],["resolve"]]],[11,"clone",E,E,18,[[["self"]],[R[321]]]],[11,"clone",E,E,19,[[["self"]],[R[322]]]],[11,"clone",E,E,20,[[["self"]],["setclass"]]],[11,"clone",E,E,21,[[["self"]],[R[323]]]],[11,"clone",E,E,22,[[["self"]],[R[324]]]],[11,"clone",E,E,23,[[["self"]],[R[325]]]],[11,"clone",E,E,24,[[["self"]],[R[326]]]],[11,"clone",E,E,25,[[["self"]],[R[327]]]],[11,"eq",E,E,26,[[["self"],[R[313]]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[280]]],["bool"]]],[11,"from",E,E,28,[[[R[314]]],["action"]]],[11,"from",E,E,28,[[[R[315]]],["action"]]],[11,"from",E,E,28,[[[R[316]]],["action"]]],[11,"from",E,E,28,[[[R[317]]],["action"]]],[11,"from",E,E,28,[[[R[318]]],["action"]]],[11,"from",E,E,28,[[["clear"]],["action"]]],[11,"from",E,E,28,[[[R[319]]],["action"]]],[11,"from",E,E,28,[[[R[320]]],["action"]]],[11,"from",E,E,28,[[["addclass"]],["action"]]],[11,"from",E,E,28,[[[R[311]]],["action"]]],[11,"from",E,E,28,[[["complete"]],["action"]]],[11,"from",E,E,28,[[[R[304]]],["action"]]],[11,"from",E,E,28,[[[R[312]]],["action"]]],[11,"from",E,E,28,[[["resolve"]],["action"]]],[11,"from",E,E,28,[[[R[321]]],["action"]]],[11,"from",E,E,28,[[[R[322]]],["action"]]],[11,"from",E,E,28,[[["setclass"]],["action"]]],[11,"from",E,E,28,[[[R[323]]],["action"]]],[11,"from",E,E,28,[[[R[324]]],["action"]]],[11,"from",E,E,28,[[[R[325]]],["action"]]],[11,"from",E,E,28,[[[R[326]]],["action"]]],[11,"from",E,E,28,[[[R[327]]],["action"]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",R[306],E,4,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",R[307],E,5,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,26,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,27,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,28,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,9,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,32,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,10,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,11,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,12,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,13,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,14,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,33,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,15,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,16,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,17,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,18,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,19,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,20,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,21,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,22,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,23,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,24,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,25,[[["self"],[R[13]]],[R[0]]]],[11,R[234],R[306],E,4,[[["__d"]],[R[0]]]],[11,R[234],E,E,2,[[["__d"]],[R[0]]]],[11,R[234],R[307],E,5,[[["__d"]],[R[0]]]],[11,R[234],E,E,26,[[["__d"]],[R[0]]]],[11,R[234],E,E,27,[[["__d"]],[R[0]]]],[11,R[234],E,E,28,[[["__d"]],[R[0]]]],[11,R[234],E,E,6,[[["__d"]],[R[0]]]],[11,R[234],E,E,7,[[["__d"]],[R[0]]]],[11,R[234],E,E,8,[[["__d"]],[R[0]]]],[11,R[234],E,E,9,[[["__d"]],[R[0]]]],[11,R[234],E,E,32,[[["__d"]],[R[0]]]],[11,R[234],E,E,10,[[["__d"]],[R[0]]]],[11,R[234],E,E,11,[[["__d"]],[R[0]]]],[11,R[234],E,E,12,[[["__d"]],[R[0]]]],[11,R[234],E,E,13,[[["__d"]],[R[0]]]],[11,R[234],E,E,14,[[["__d"]],[R[0]]]],[11,R[234],E,E,33,[[["__d"]],[R[0]]]],[11,R[234],E,E,15,[[["__d"]],[R[0]]]],[11,R[234],E,E,16,[[["__d"]],[R[0]]]],[11,R[234],E,E,17,[[["__d"]],[R[0]]]],[11,R[234],E,E,18,[[["__d"]],[R[0]]]],[11,R[234],E,E,19,[[["__d"]],[R[0]]]],[11,R[234],E,E,20,[[["__d"]],[R[0]]]],[11,R[234],E,E,21,[[["__d"]],[R[0]]]],[11,R[234],E,E,22,[[["__d"]],[R[0]]]],[11,R[234],E,E,23,[[["__d"]],[R[0]]]],[11,R[234],E,E,24,[[["__d"]],[R[0]]]],[11,R[234],E,E,25,[[["__d"]],[R[0]]]],[11,R[233],R[306],E,4,[[["self"],["__s"]],[R[0]]]],[11,R[233],E,E,2,[[["self"],["__s"]],[R[0]]]],[11,R[233],R[307],E,5,[[["self"],["__s"]],[R[0]]]],[11,R[233],E,E,26,[[["self"],["__s"]],[R[0]]]],[11,R[233],E,E,27,[[["self"],["__s"]],[R[0]]]],[11,R[233],E,E,28,[[["self"],["__s"]],[R[0]]]],[11,R[233],E,E,6,[[["self"],["__s"]],[R[0]]]],[11,R[233],E,E,7,[[["self"],["__s"]],[R[0]]]],[11,R[233],E,E,8,[[["self"],["__s"]],[R[0]]]],[11,R[233],E,E,9,[[["self"],["__s"]],[R[0]]]],[11,R[233],E,E,32,[[["self"],["__s"]],[R[0]]]],[11,R[233],E,E,10,[[["self"],["__s"]],[R[0]]]],[11,R[233],E,E,11,[[["self"],["__s"]],[R[0]]]],[11,R[233],E,E,12,[[["self"],["__s"]],[R[0]]]],[11,R[233],E,E,13,[[["self"],["__s"]],[R[0]]]],[11,R[233],E,E,14,[[["self"],["__s"]],[R[0]]]],[11,R[233],E,E,33,[[["self"],["__s"]],[R[0]]]],[11,R[233],E,E,15,[[["self"],["__s"]],[R[0]]]],[11,R[233],E,E,16,[[["self"],["__s"]],[R[0]]]],[11,R[233],E,E,17,[[["self"],["__s"]],[R[0]]]],[11,R[233],E,E,18,[[["self"],["__s"]],[R[0]]]],[11,R[233],E,E,19,[[["self"],["__s"]],[R[0]]]],[11,R[233],E,E,20,[[["self"],["__s"]],[R[0]]]],[11,R[233],E,E,21,[[["self"],["__s"]],[R[0]]]],[11,R[233],E,E,22,[[["self"],["__s"]],[R[0]]]],[11,R[233],E,E,23,[[["self"],["__s"]],[R[0]]]],[11,R[233],E,E,24,[[["self"],["__s"]],[R[0]]]],[11,R[233],E,E,25,[[["self"],["__s"]],[R[0]]]]],"p":[[3,R[328]],[3,"Product"],[3,R[329]],[3,"Sseq"],[4,R[330]],[3,"Message"],[3,R[289]],[3,R[287]],[3,R[288]],[3,R[290]],[3,R[291]],[3,R[331]],[3,R[292]],[3,R[286]],[3,R[293]],[3,R[294]],[3,R[295]],[3,"Resolve"],[3,R[296]],[3,R[297]],[3,R[332]],[3,R[298]],[3,R[299]],[3,R[300]],[3,R[301]],[3,R[302]],[4,R[333]],[4,R[334]],[4,"Action"],[8,"ActionT"],[3,R[335]],[3,R[336]],[3,"Clear"],[3,R[337]]]};
searchIndex["once"]={"doc":E,"i":[[3,"OnceVec","once",E,N,N],[12,"data",E,E,0,N],[3,R[15],E,E,N,N],[12,"data",E,E,1,N],[11,"to_vec",E,E,0,[[],["vec"]]],[11,R[10],E,E,0,[[["vec"]],["self"]]],[11,"new",E,E,0,[[],["self"]]],[11,R[11],E,E,0,[[["usize"]],["self"]]],[11,"get_vec_mut",E,E,0,[[["self"]],["vec"]]],[11,"reserve",E,E,0,[[["self"],["usize"]]]],[11,"reserve_exact",E,E,0,[[["self"],["usize"]]]],[11,"push",E,E,0,[[["self"],[T]]]],[11,"to_bivec",E,E,1,[[],["bivec"]]],[11,"from_bivec",E,E,1,[[["bivec"]],["self"]]],[11,"new",E,E,1,[[["i32"]],["self"]]],[11,R[11],E,E,1,[[["i32"]],["self"]]],[11,"push",E,E,1,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[1],E,E,0,[[[U]],[R[0]]]],[11,R[2],E,E,0,[[],[R[0]]]],[11,R[3],E,E,0,[[["self"]],[T]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[R[6]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[1],E,E,1,[[[U]],[R[0]]]],[11,R[2],E,E,1,[[],[R[0]]]],[11,R[3],E,E,1,[[["self"]],[T]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[R[6]]]],[11,"deref",E,E,0,[[["self"]]]],[11,"deref",E,E,1,[[["self"]]]],[11,R[12],E,E,0,[[["self"]]]],[11,R[12],E,E,1,[[["self"]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[0]]]],[11,"index",E,E,0,[[["self"],["usize"]],[T]]],[11,"index",E,E,0,[[["self"],["u32"]],[T]]],[11,"index",E,E,1,[[["self"],["i32"]],[T]]],[11,R[14],E,E,0,[[["self"],["usize"]],[T]]],[11,R[14],E,E,0,[[["self"],["u32"]],[T]]],[11,R[14],E,E,1,[[["self"],["i32"]],[T]]]],"p":[[3,"OnceVec"],[3,R[15]]]};
searchIndex["query"]={"doc":E,"i":[[5,"query","query",E,N,[[["str"],["f"]],[R[8]]]],[5,"query_with_default",E,E,N,[[[R[8]],["str"],["f"]],[R[8]]]],[5,"query_with_default_no_default_indicated",E,E,N,[[[R[8]],["str"],["f"]],[R[8]]]],[5,"query_yes_no",E,E,N,[[["str"]],["bool"]]]],"p":[]};
searchIndex["rust_ext"]={"doc":E,"i":[[3,"Config",R[19],E,N,N],[12,"module_paths",E,E,0,N],[12,"module_file_name",E,E,0,N],[12,R[283],E,E,0,N],[12,R[16],E,E,0,N],[3,R[235],E,E,N,N],[12,R[133],E,E,1,N],[12,R[152],E,E,1,N],[3,R[236],E,E,N,N],[12,"name",E,E,2,N],[5,R[304],E,E,N,[[["config"]],[["box",["error"]],[R[0],[R[17],"box"]],[R[17]]]]],[5,"construct_from_json",E,E,N,[[[R[18]],["value"]],[["box",["error"]],[R[0],[R[17],"box"]],[R[17]]]]],[5,"run_define_module",E,E,N,[[],[[R[18]],["box",["error"]],[R[0],[R[18],"box"]]]]],[5,"run_resolve",E,E,N,[[["config"]],[[R[18]],["box",["error"]],[R[0],[R[18],"box"]]]]],[5,"run_yoneda",E,E,N,[[["config"]],[[R[18]],["box",["error"]],[R[0],[R[18],"box"]]]]],[5,"run_steenrod",E,E,N,[[],[[R[18]],["box",["error"]],[R[0],[R[18],"box"]]]]],[5,"run_test",E,E,N,[[]]],[5,"load_module_from_file",E,E,N,[[["config"]],[[R[18]],["box",["error"]],[R[0],[R[18],"box"]]]]],[0,"combinatorics",E,E,N,N],[5,"is_valid_prime","rust_ext::combinatorics",E,N,[[["u32"]],["bool"]]],[5,"inverse",E,E,N,[[["u32"]],["u32"]]],[5,"minus_one_to_the_n",E,E,N,[[["u32"]],["u32"]]],[5,"direct_binomial",E,E,N,[[["u32"]],["u32"]]],[5,"integer_power",E,"Computes b^e.",N,[[["u32"]],["u32"]]],[5,"power_mod",E,"Compute b^e mod p. We use this for computing modulo…",N,[[["u32"]],["u32"]]],[5,"logp",E,E,N,[[["u32"]],["u32"]]],[5,"basep_expansion",E,"Expand n base p and write the result into buffer result.…",N,[[["u32"]]]],[5,"multinomial2",E,E,N,[[],["u32"]]],[5,"binomial2",E,E,N,[[["i32"]],["u32"]]],[5,"multinomial_odd",E,E,N,[[["u32"]],["u32"]]],[5,"binomial_odd",E,E,N,[[["u32"],["i32"]],["u32"]]],[5,"multinomial",E,E,N,[[["u32"]],["u32"]]],[5,"binomial",E,E,N,[[["u32"],["i32"]],["u32"]]],[5,"adem_relation_coefficient",E,E,N,[[["u32"]],["u32"]]],[5,"inadmissible_pairs",E,E,N,[[["i32"],["u32"],["bool"]],["vec"]]],[5,"tau_degrees",E,E,N,[[["u32"]]]],[5,"xi_degrees",E,E,N,[[["u32"]]]],[7,"INVERSE_TABLE",E,E,N,N],[7,"XI_DEGREES",E,E,N,N],[7,"TAU_DEGREES",E,E,N,N],[7,"BINOMIAL_TABLE",E,E,N,N],[17,"MAX_PRIME_INDEX",E,E,N,N],[17,"MAX_PRIME",E,E,N,N],[17,"NOT_A_PRIME",E,E,N,N],[17,"MAX_EXPONENT",E,E,N,N],[17,"MAX_XI_TAU",E,E,N,N],[17,"PRIME_TO_INDEX_MAP",E,E,N,N],[0,"fp_vector",R[19],"An `FpVector` is a vector with entries in Fp. We use this…",N,N],[3,R[237],R[159],E,N,N],[12,"limb",E,E,3,N],[12,"bit_index",E,E,3,N],[3,R[238],E,E,N,N],[12,R[21],E,E,4,N],[12,"slice_start",E,E,4,N],[12,"slice_end",E,E,4,N],[12,"limbs",E,E,4,N],[3,R[22],E,E,N,N],[12,R[20],E,E,5,N],[3,R[23],E,E,N,N],[12,R[20],E,E,6,N],[3,R[24],E,E,N,N],[12,R[20],E,E,7,N],[3,R[25],E,E,N,N],[12,"p",E,E,8,N],[12,R[20],E,E,8,N],[3,R[239],E,E,N,N],[12,"limbs",E,E,9,N],[12,R[26],E,E,9,N],[12,"bit_mask",E,E,9,N],[12,"entries_per_64_bits_m_1",E,E,9,N],[12,"limb_index",E,E,9,N],[12,"entries_left",E,E,9,N],[12,"cur_limb",E,E,9,N],[12,"counter",E,E,9,N],[3,R[240],E,"An FpVectorMask encodes a subset of the basis elements of…",N,N],[12,"p",E,E,10,N],[12,R[21],E,E,10,N],[12,"masks",E,E,10,N],[4,"FpVector",E,E,N,N],[13,R[22],E,E,11,N],[13,R[23],E,E,11,N],[13,R[24],E,E,11,N],[13,R[25],E,E,11,N],[5,R[26],E,E,N,[[["u32"]],["usize"]]],[5,"bitmask",E,E,N,[[["u32"]],["u64"]]],[5,"entries_per_64_bits",E,E,N,[[["u32"]],["usize"]]],[5,"initialize_limb_bit_index_table",E,E,N,[[["u32"]]]],[5,"limb_bit_index_pair",E,E,N,[[["u32"],["usize"]],[R[225]]]],[7,"BIT_LENGHTS",E,E,N,N],[7,"BITMASKS",E,E,N,N],[7,"ENTRIES_PER_64_BITS",E,E,N,N],[7,"LIMB_BIT_INDEX_TABLE",E,"This table tells us which limb and which bitfield of that…",N,N],[7,"LIMB_BIT_INDEX_ONCE_TABLE",E,E,N,N],[17,"MAX_DIMENSION",E,E,N,N],[8,R[241],E,E,N,N],[10,R[190],E,E,12,[[["self"],["usize"]]]],[10,R[20],E,E,12,[[["self"]],[R[27]]]],[10,R[191],E,E,12,[[["self"]],[R[27]]]],[10,"prime",E,E,12,[[["self"]],["u32"]]],[11,R[21],E,E,12,[[["self"]],["usize"]]],[11,"offset",E,E,12,[[["self"]],["usize"]]],[11,R[192],E,E,12,[[["self"]],["usize"]]],[11,"slice",E,E,12,[[["self"]]]],[11,R[30],E,E,12,[[["self"],["usize"]]]],[11,R[193],E,E,12,[[["self"]]]],[11,R[31],E,E,12,[[["self"]]]],[11,R[32],E,"Drops every element in the fp_vector that is not in the…",12,[[["self"]]]],[11,"min_limb",E,E,12,[[["self"]],["usize"]]],[11,"max_limb",E,E,12,[[["self"]],["usize"]]],[11,"limbs",E,E,12,[[["self"]],["vec"]]],[11,R[194],E,E,12,[[["self"]],["vec"]]],[11,R[195],E,E,12,[[["self"],["usize"]],["u64"]]],[11,R[35],E,E,12,[[["self"]]]],[11,R[196],E,E,12,[[["self"],[R[28]]]]],[11,"assign",E,E,12,[[["self"],[R[28]]]]],[11,R[197],E,E,12,[[["self"]],["bool"]]],[11,"is_zero",E,E,12,[[["self"]],["bool"]]],[11,"entry",E,E,12,[[["self"],["usize"]],["u32"]]],[11,R[198],E,E,12,[[["self"],["u32"],["usize"]]]],[11,R[199],E,E,12,[[["self"],["u32"],["usize"]]]],[11,"unpack",E,"Unpacks an FpVector onto an array slice. note that the…",12,[[["self"]]]],[11,R[200],E,E,12,[[["self"]],[["u32"],["vec",["u32"]]]]],[11,"pack",E,E,12,[[["self"]]]],[11,R[201],E,"`coeff` need not be reduced mod p.",12,[[["self"],["u32"],["usize"],[R[28]]]]],[11,"add",E,"Adds `c` * `other` to `self`. `other` must have the same…",12,[[["self"],["u32"],[R[28]]]]],[11,R[202],E,E,12,[[["self"],["u32"],[R[28]]]]],[11,R[203],E,E,12,[[["self"],["u32"],[R[28]]]]],[11,R[204],E,E,12,[[["self"],["u32"],[R[28]]]]],[11,"scale",E,E,12,[[["self"],["u32"]]]],[11,"new",E,E,11,[[["u32"],["usize"]],[R[28]]]],[11,R[10],E,E,11,[[["u32"]],[R[28]]]],[11,"add_limb",E,E,11,[[["u32"],["u64"]],["u64"]]],[11,"number_of_limbs",E,E,11,[[["u32"],["usize"]],["usize"]]],[11,"padded_dimension",E,E,11,[[["u32"],["usize"]],["usize"]]],[11,"scratch_vector",E,E,11,[[["u32"],["usize"]],["self"]]],[11,"set_scratch_vector_size",E,E,11,[[["usize"]],["self"]]],[11,"iter",E,E,11,[[["self"]],[R[29]]]],[11,"pack_limb",E,E,11,[[["u32"],["usize"],["vec"]],["usize"]]],[11,"unpack_limb",E,E,11,[[["u32"],["usize"],["vec"]],["usize"]]],[11,"new",E,E,9,[[[R[28]]],[R[29]]]],[11,"skip_n",E,E,9,[[["self"],["usize"]]]],[11,"new",E,E,10,[[["u32"],["usize"]],["self"]]],[11,"set_zero",E,E,10,[[["self"]]]],[11,"set_mask",E,"If `on` is true, we add the `i`th basis element to the…",10,[[["self"],["usize"],["bool"]]]],[11,"apply",E,"This projects `target` onto the subspace spanned by the…",10,[[["self"],[R[28]]]]],[0,R[74],R[19],E,N,N],[3,"Matrix",R[163],"A matrix! In particular, a matrix with values in F_p. The…",N,N],[12,"p",E,E,13,N],[12,"rows",E,E,13,N],[12,"columns",E,E,13,N],[12,"slice_row_start",E,E,13,N],[12,"slice_row_end",E,E,13,N],[12,"slice_col_start",E,E,13,N],[12,"slice_col_end",E,E,13,N],[12,"vectors",E,E,13,N],[3,"Subspace",E,"A subspace of a vector space. # Fields * `matrix` - A…",N,N],[12,R[74],E,E,14,N],[12,"column_to_pivot_row",E,E,14,N],[3,R[242],E,"Given a matrix M, a quasi-inverse Q is a map from the…",N,N],[12,"image",E,E,15,N],[12,"preimage",E,E,15,N],[11,"new",E,"Produces a new matrix over F_p with the specified number…",13,[[["u32"],["usize"]],[R[74]]]],[11,"from_rows",E,"Produces a matrix from a list of rows. If `vectors.len()…",13,[[[R[28]],["u32"],["vec",[R[28]]]],["self"]]],[11,R[10],E,"Produces a Matrix from an `&[Vec<u32>]` object # Example…",13,[[["u32"]],[R[74]]]],[11,"to_vec",E,E,13,[[["self"]],[["vec",["vec"]],["vec",["u32"]]]]],[11,"augmented_from_vec",E,"Produces a padded augmented matrix from an `&[Vec<u32>]`…",13,[[["u32"]]]],[11,"set_identity",E,E,13,[[["self"],["usize"]]]],[11,"prime",E,E,13,[[["self"]],["u32"]]],[11,"rows",E,"Gets the number of rows in the matrix.",13,[[["self"]],["usize"]]],[11,"columns",E,"Gets the number of columns in the matrix.",13,[[["self"]],["usize"]]],[11,R[30],E,"Sets the slice on the matrix. Restricts to the submatrix…",13,[[["self"],["usize"]]]],[11,R[31],E,"Un-slice the matrix.",13,[[["self"]]]],[11,R[32],E,E,13,[[["self"]]]],[11,"into_vec",E,E,13,[[],[[R[28]],["vec",[R[28]]]]]],[11,"iter",E,E,13,[[["self"]],[[R[28]],["iter",[R[28]]]]]],[11,R[33],E,E,13,[[["self"]],[["itermut",[R[28]]],[R[28]]]]],[11,"swap_rows",E,E,13,[[["self"],["usize"]]]],[11,"row_op",E,E,13,[[["self"],["u32"],["usize"]]]],[11,"row_reduce",E,"Perform row reduction to reduce it to reduced row echelon…",13,[[["self"],["vec"]]]],[11,"row_reduce_offset",E,E,13,[[["self"],["vec"],["usize"]]]],[11,"find_pivots_permutation",E,"This is very similar to row_reduce, except we only need to…",13,[[["self"],["iterator"]],[["vec",["usize"]],["usize"]]]],[11,"row_reduce_permutation",E,E,13,[[["self"],["vec"],[T]]]],[11,"new",E,E,14,[[["u32"],["usize"]],["self"]]],[11,"subquotient",E,"Given a chain of subspaces `subspace` < `space` <…",14,[[[R[59],[R[34]]],[R[34]],["usize"]],[["vec",["usize"]],["usize"]]]],[11,"entire_space",E,E,14,[[["u32"],["usize"]],["self"]]],[11,"add_vector",E,"This adds a vector to the subspace. This function assumes…",14,[[["self"],[R[28]]]]],[11,"add_vectors",E,E,14,[[["self"]]]],[11,"add_basis_elements",E,E,14,[[["self"]]]],[11,"reduce",E,"Projects a vector to a complement of the subspace. The…",14,[[["self"],[R[28]]]]],[11,"shift_reduce",E,"A version of `reduce` that doesn't require the vectors to…",14,[[["self"],[R[28]]]]],[11,"contains",E,E,14,[[["self"],[R[28]]],["bool"]]],[11,R[21],E,E,14,[[["self"]],["usize"]]],[11,"basis",E,"Returns a basis of the subspace.",14,[[["self"]]]],[11,R[35],E,"Sets the subspace to be the zero subspace.",14,[[["self"]]]],[11,"set_to_entire",E,"Sets the subspace to be the entire subspace.",14,[[["self"]]]],[11,"prime",E,E,15,[[["self"]],["u32"]]],[11,"apply",E,"Apply the quasi-inverse to an input vector and add a…",15,[[["self"],["u32"],[R[28]],[R[28]]]]],[11,R[35],E,E,13,[[["self"]]]],[11,"find_first_row_in_block",E,E,13,[[["self"],["vec"],["usize"]],["usize"]]],[11,"compute_kernel",E,"Computes the kernel from an augmented matrix in rref. To…",13,[[["self"],["vec"],["usize"]],[R[34]]]],[11,"compute_quasi_inverse",E,"Computes the quasi-inverse of a matrix given a rref of…",13,[[["self"],["usize"],["vec"]],[R[108]]]],[11,"compute_quasi_inverses",E,"This function computes quasi-inverses for matrices A, B…",13,[[["self"],["usize"],["vec"]]]],[11,"get_image",E,E,13,[[["self"],["vec"],["usize"]],[R[34]]]],[11,"extend_to_surjection",E,"Given a matrix M in rref, add rows to make the matrix…",13,[[["self"],["vec"],["usize"]],[["vec",["usize"]],["usize"]]]],[11,"extend_image_to_desired_image",E,"Given a matrix in rref, say [A|B|C], where B lies between…",13,[[["self"],[R[34]],["usize"],["vec"]],[["vec",["usize"]],["usize"]]]],[11,"extend_image",E,"Extends the image of a matrix to either the whole…",13,[[["self"],["usize"],[R[59]],["vec"]],[["vec",["usize"]],["usize"]]]],[11,"apply",E,"Applies a matrix to a vector.",13,[[["self"],["u32"],[R[28]],[R[28]]]]],[0,"block_structure",R[19],E,N,N],[3,R[243],R[164],E,N,N],[12,R[86],E,E,16,N],[12,R[87],E,E,16,N],[12,"basis_index",E,E,16,N],[3,R[244],E,E,N,N],[12,R[129],E,E,17,N],[12,"basis_element_to_block_idx",E,E,17,N],[12,"block_starts",E,E,17,N],[11,"new",E,E,17,[[["bivec"]],["self"]]],[11,"generator_to_block",E,E,17,[[["self"],["usize"],["i32"]]]],[11,"generator_basis_elt_to_index",E,E,17,[[["self"],["usize"],["i32"]],["usize"]]],[11,"index_to_generator_basis_elt",E,E,17,[[["self"],["usize"]],["generatorbasiseltpair"]]],[11,"add_block",E,E,17,[[["self"],["u32"],["usize"],["i32"],[R[28]],[R[28]]]]],[0,R[62],R[19],E,N,N],[3,R[245],R[40],E,N,N],[12,R[41],E,E,18,N],[12,"q_part",E,E,18,N],[12,"p_part",E,E,18,N],[3,R[246],E,E,N,N],[12,"p",E,E,19,N],[12,R[62],E,E,19,N],[12,"profile",E,E,19,N],[3,R[247],E,E,N,N],[12,"name",E,E,20,N],[4,R[248],E,E,N,N],[13,R[36],E,E,21,N],[13,R[42],E,E,21,N],[13,"Field",E,E,21,N],[0,R[57],E,E,N,N],[3,R[39],R[165],E,N,N],[12,"__private_field",E,E,22,N],[3,R[249],E,"The format of the AdemBasisElement is as follows. To…",N,N],[12,"degree",E,E,23,N],[12,"excess",E,E,23,N],[12,"bocksteins",E,E,23,N],[12,"ps",E,E,23,N],[3,R[36],E,E,N,N],[12,"p",E,E,24,N],[12,"name",E,E,24,N],[12,"generic",E,E,24,N],[12,"unstable",E,E,24,N],[12,R[43],E,E,24,N],[12,"even_basis_table",E,E,24,N],[12,R[44],E,E,24,N],[12,R[45],E,E,24,N],[12,"multiplication_table",E,E,24,N],[12,"sort_order",E,E,24,N],[5,"adem_basis_element_excess_sort_order",E,E,N,[[[R[37]]],[R[38]]]],[5,"adem_basis_element_length_sort_order",E,E,N,[[[R[37]]],[R[38]]]],[5,"shift_vec",E,E,N,[[["isize"],["vec"]],["vec"]]],[7,R[39],E,E,N,N],[11,"new",E,E,24,[[["u32"],["bool"]],["self"]]],[11,"generate_basis_even",E,E,24,[[["self"],["i32"]]]],[11,"generate_basis_even_degreen",E,E,24,[[["self"],["i32"]]]],[11,"generate_basis2",E,E,24,[[["self"],["i32"]]]],[11,R[49],E,E,24,[[["self"],["i32"]]]],[11,"generate_basis_generic_degreen",E,E,24,[[["self"],["i32"]]]],[11,"generate_basis_element_to_index_map",E,E,24,[[["self"],["i32"]]]],[11,R[46],E,E,24,[[["self"],["usize"],["i32"]],[R[37]]]],[11,R[48],E,E,24,[[["self"],[R[37]]],["usize"]]],[11,"tail_of_basis_element_to_index",E,E,24,[[["self"],["u32"],[R[37]]]]],[11,"generate_multiplication_table_2",E,E,24,[[["self"],["i32"]]]],[11,"generate_multiplication_table_2_step",E,E,24,[[["self"],["vec"],["i32"],["usize"]],[R[28]]]],[11,"generate_multiplication_table_generic",E,E,24,[[["self"],["i32"]]]],[11,"generate_multiplication_table_generic_step",E,"This function expresses $Sq^x$ (current) in terms of the…",24,[[["self"],["vec"],["i32"],["usize"]],[R[28]]]],[11,R[50],E,E,24,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[11,"make_mono_admissible",E,E,24,[[["self"],["u32"],["i32"],[R[28]],[R[37]]]]],[11,"make_mono_admissible_2",E,"Reduce a Steenrod monomial at the prime 2. # Arguments: *…",24,[[["self"],["i32"],[R[28]],[R[37]],["bool"]]]],[11,"make_mono_admissible_generic",E,E,24,[[["self"],["u32"],["i32"],[R[28]],[R[37]],["bool"]]]],[11,"decompose_basis_element_2",E,E,24,[[["self"],["usize"],["i32"]],["vec"]]],[11,"decompose_basis_element_generic",E,E,24,[[["self"],["usize"],["i32"]],["vec"]]],[11,"beps_pn",E,E,24,[[["self"],["u32"]]]],[0,R[58],R[40],E,N,N],[3,R[250],R[166],E,N,N],[12,R[41],E,E,25,N],[12,"q_part",E,E,25,N],[12,"p_part",E,E,25,N],[3,"QPart",E,E,N,N],[12,"degree",E,E,26,N],[12,"q_part",E,E,26,N],[3,R[251],E,E,N,N],[12,"q_part",E,E,27,N],[12,"p_part",E,E,27,N],[12,"degree",E,E,27,N],[3,R[42],E,E,N,N],[12,"profile",E,E,28,N],[12,"name",E,E,28,N],[12,R[43],E,E,28,N],[12,"p",E,E,28,N],[12,"generic",E,E,28,N],[12,"ppart_table",E,E,28,N],[12,"qpart_table",E,E,28,N],[12,R[44],E,E,28,N],[12,R[45],E,E,28,N],[3,R[252],E,E,N,N],[12,"p",E,E,29,N],[12,"M",E,E,29,N],[12,"r",E,E,29,N],[12,"rows",E,E,29,N],[12,"cols",E,E,29,N],[12,"diag_num",E,E,29,N],[12,"cont",E,E,29,N],[5,"from_p",E,E,N,[[["u32"],["vec",["u32"]],["i32"]],[R[47]]]],[6,"PPart",E,E,N,N],[17,"ZERO_QPART",E,E,N,N],[11,"new",E,E,28,[[["u32"]],["self"]]],[11,R[46],E,E,28,[[["self"],["usize"],["i32"]],[R[47]]]],[11,R[48],E,E,28,[[["self"],[R[47]]],["usize"]]],[11,"compute_ppart",E,E,28,[[["self"],["i32"]]]],[11,"compute_qpart",E,E,28,[[["self"],["i32"]]]],[11,R[49],E,E,28,[[["self"],["i32"]]]],[11,"generate_basis_2",E,E,28,[[["self"],["i32"]]]],[11,"beps_pn",E,E,28,[[["self"],["u32"]]]],[11,"multiply_qpart",E,E,28,[[["self"],["u32"],[R[47]]],["vec"]]],[11,R[50],E,E,28,[[["self"],["u32"],[R[28]],[R[47]]]]],[11,"new",E,E,29,[[["u32"],["vec"]],["ppartmultiplier"]]],[11,"update",E,E,29,[[["self"]],["bool"]]],[11,"decompose_basis_element_qpart",E,E,28,[[["self"],["usize"],["i32"]],["vec"]]],[11,"decompose_basis_element_ppart",E,E,28,[[["self"],["usize"],["i32"]],["vec"]]],[11,"increment_p_part",E,"Returns `true` if the new element is not within the bounds",28,[[["vec"],["vec"]],["bool"]]],[0,"field",R[40],E,N,N],[3,"Field",R[168],E,N,N],[12,"prime",E,E,30,N],[11,"new",E,E,30,[[["u32"]],["self"]]],[17,"_IMPL_DESERIALIZE_FOR_MilnorProfileOption",R[40],E,N,N],[17,"_IMPL_DESERIALIZE_FOR_AlgebraSpec",E,E,N,N],[8,"Algebra",E,"A graded algebra over F_p, finite dimensional in each…",N,N],[10,R[205],E,"The \"type\" of the algebra, which is \"adem\" or \"milnor\".…",31,[[["self"]],["str"]]],[10,"prime",E,R[212],31,[[["self"]],["u32"]]],[11,"name",E,E,31,[[["self"]],["str"]]],[10,R[61],E,"Computes the list of basis elements up to and including…",31,[[["self"],["i32"]]]],[10,R[21],E,R[213],31,[[["self"],["i32"]],["usize"]]],[10,R[207],E,"Computes the product `r * s` of the two basis elements,…",31,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[11,R[216],E,E,31,[[["self"],["u32"],["usize"],["i32"],[R[28]],[R[28]]]]],[11,R[217],E,E,31,[[["self"],["u32"],["usize"],["i32"],[R[28]],[R[28]]]]],[11,R[218],E,E,31,[[["self"],["u32"],["i32"],[R[28]],[R[28]]]]],[11,R[206],E,"A filtration one element in Ext(k, k) is the same as an…",31,[[["self"]],["vec"]]],[11,R[208],E,R[214],31,[[["self"],["value"]]]],[11,R[209],E,E,31,[[["self"],["usize"],["i32"]],["value"]]],[11,R[130],E,R[215],31,[[["self"],["usize"],["i32"]],[R[18]]]],[11,R[131],E,"Converts an element into a string for display.",31,[[["self"],[R[28]],["i32"]],[R[18]]]],[11,R[63],E,"Given a degree `degree`, the function returns a list of…",31,[[["self"],["i32"]],[["vec",["usize"]],["usize"]]]],[11,R[210],E,"Given a non-generator basis element of the algebra,…",31,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[211],E,"Get any relations that the algebra wants checked to ensure…",31,[[["self"],["i32"]],[["vec",["vec"]],["vec"]]]],[8,R[253],E,E,N,N],[10,R[176],E,"This function decomposes an element of the algebra as a…",32,[[["self"],["usize"],["i32"]],["vec"]]],[10,R[177],E,"Expresses Delta(x) as sum_j (A_{ij} (x) B_{ij}). Here x…",32,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[71],E,E,21,[[[R[18]],["value"]],[["box",["error"]],[R[51]],[R[0],[R[51],"box"]]]]],[0,"change_of_basis",R[19],E,N,N],[5,"adem_to_milnor_on_basis","rust_ext::change_of_basis",E,N,[[["u32"],[R[52]],["i32"],[R[28]],["usize"],[R[53]]]]],[5,"adem_to_milnor",E,E,N,[[[R[28]],["u32"],[R[52]],["i32"],[R[28]],[R[53]]]]],[5,"milnor_to_adem_on_basis",E,E,N,[[["u32"],[R[52]],["i32"],[R[28]],["usize"],[R[53]]]]],[5,"milnor_to_adem_on_basis_2",E,E,N,[[["u32"],[R[52]],["i32"],[R[28]],["usize"],[R[53]]]]],[5,"milnor_to_adem_on_basis_generic",E,E,N,[[["u32"],[R[52]],["i32"],[R[28]],["usize"],[R[53]]]]],[5,"milnor_to_adem",E,E,N,[[[R[28]],["u32"],[R[52]],["i32"],[R[28]],[R[53]]]]],[5,"adem_q",E,E,N,[[["u32"],[R[52]],[R[28]],[R[53]]]]],[5,"adem_plist",E,E,N,[[["u32"],[R[52]],["i32"],[R[28]],["vec",["u32"]],[R[53]]]]],[0,"steenrod_parser",R[19],E,N,N],[3,R[254],R[169],E,N,N],[12,"info",E,E,33,N],[4,R[255],E,E,N,N],[13,"PList",E,E,34,N],[13,"P",E,E,34,N],[13,"Q",E,E,34,N],[4,R[256],E,E,N,N],[13,"Product",E,E,35,N],[13,"Sum",E,E,35,N],[13,"BasisElt",E,E,35,N],[13,"Scalar",E,E,35,N],[4,R[257],E,E,N,N],[13,"Act",E,E,36,N],[13,"Sum",E,E,36,N],[13,"ModuleBasisElt",E,E,36,N],[5,"digits",E,E,N,[[["str"]],[["u32"],[R[54],["str","u32"]],["str"]]]],[5,"integer_list",E,E,N,[[["str"]],[[R[54],["str","vec"]],["str"],["vec",["u32"]]]]],[5,"sequence",E,E,N,[[["str"]],[[R[54],["str","vec"]],["str"],["vec",["u32"]]]]],[5,"algebra_generator",E,E,N,[[["str"]],[[R[55]],["str"],[R[54],["str",R[55]]]]]],[5,"scalar",E,E,N,[[["str"]],[[R[55]],["str"],[R[54],["str",R[55]]]]]],[5,"algebra_parens",E,E,N,[[["str"]],[[R[55]],["str"],[R[54],["str",R[55]]]]]],[5,"algebra_factor",E,E,N,[[["str"]],[[R[55]],["str"],[R[54],["str",R[55]]]]]],[5,"algebra_term",E,E,N,[[["str"]],[[R[55]],["str"],[R[54],["str",R[55]]]]]],[5,"algebra_expr",E,E,N,[[["str"]],[[R[55]],["str"],[R[54],["str",R[55]]]]]],[5,"module_generator",E,E,N,[[["str"]],[[R[54],["str",R[56]]],[R[56]],["str"]]]],[5,"module_parens",E,E,N,[[["str"]],[[R[54],["str",R[56]]],[R[56]],["str"]]]],[5,"module_factor",E,E,N,[[["str"]],[[R[54],["str",R[56]]],[R[56]],["str"]]]],[5,"module_term",E,E,N,[[["str"]],[[R[54],["str",R[56]]],[R[56]],["str"]]]],[5,"module_expr",E,E,N,[[["str"]],[[R[54],["str",R[56]]],[R[56]],["str"]]]],[5,"parse_algebra",E,E,N,[[["str"]],[[R[55]],["box",["error"]],[R[0],[R[55],"box"]]]]],[5,"parse_module",E,E,N,[[["str"]],[[R[56]],[R[0],[R[56],"box"]],["box",["error"]]]]],[0,"steenrod_evaluator",R[19],E,N,N],[3,R[258],R[170],E,N,N],[12,R[57],E,E,37,N],[12,R[58],E,E,37,N],[3,R[279],E,E,N,N],[3,R[259],E,E,N,N],[12,"name",E,E,38,N],[5,"evaluate_algebra_adem",E,E,N,[[["str"],[R[52]],[R[53]]],[[R[0],["box"]],["box",["error"]]]]],[5,"evaluate_algebra_milnor",E,E,N,[[["str"],[R[52]],[R[53]]],[[R[0],["box"]],["box",["error"]]]]],[5,"evaluate_algebra_tree",E,E,N,[[[R[55]],[R[52]],[R[53]]],[[R[0],["box"]],["box",["error"]]]]],[5,"evaluate_algebra_tree_helper",E,E,N,[[[R[59],["i32"]],[R[52]],["i32"],[R[55]],[R[53]]],[[R[0],["box"]],["box",["error"]]]]],[5,"evaluate_basis_element",E,E,N,[[[R[226]],[R[59],["i32"]],[R[52]],["i32"],[R[53]]],[[R[0],["box"]],["box",["error"]]]]],[5,"evaluate_module",E,E,N,[[["str"],[R[52]],["m"],[R[60]],[R[53]]],[[R[0],["box"]],["box",["error"]]]]],[5,"evaluate_module_tree",E,E,N,[[[R[56]],[R[52]],["m"],[R[60]],[R[53]]],[[R[0],["box"]],["box",["error"]]]]],[5,"evaluate_module_tree_helper",E,E,N,[[[R[56]],[R[52]],[R[59],["i32"]],["i32"],["m"],[R[60]],[R[53]]],[[R[0],["box"]],["box",["error"]]]]],[5,"evaluate_module_basis_element",E,E,N,[[[R[18]],[R[52]],[R[59],["i32"]],["i32"],["m"],[R[60]],[R[53]]],[[R[0],["box"]],["box",["error"]]]]],[11,"new",E,E,37,[[["u32"]],["self"]]],[11,R[61],E,E,37,[[["self"],["i32"]]]],[11,"evaluate_adem_to_string",E,E,37,[[["self"],["str"]],[[R[18]],["box",["error"]],[R[0],[R[18],"box"]]]]],[11,"evaluate_milnor_to_string",E,E,37,[[["self"],["str"]],[[R[18]],["box",["error"]],[R[0],[R[18],"box"]]]]],[11,"evaluate_adem",E,E,37,[[["self"],["str"]],[[R[0],["box"]],["box",["error"]]]]],[11,"evaluate_milnor",E,E,37,[[["self"],["str"]],[[R[0],["box"]],["box",["error"]]]]],[0,R[83],R[19],E,N,N],[3,R[66],R[69],E,N,N],[12,R[62],E,E,39,N],[12,"name",E,E,39,N],[12,R[68],E,E,39,N],[12,R[64],E,E,39,N],[12,"actions",E,E,39,N],[3,R[96],E,E,N,N],[12,R[62],E,E,40,N],[12,"source",E,E,40,N],[12,"target",E,E,40,N],[12,R[97],E,E,40,N],[3,R[67],E,E,N,N],[12,"name",E,E,41,N],[12,R[9],E,E,41,N],[12,R[63],E,E,41,N],[12,R[72],E,E,41,N],[12,"map",E,E,41,N],[12,R[73],E,E,41,N],[3,R[78],E,R[79],N,N],[12,R[83],E,E,42,N],[12,R[80],E,E,42,N],[3,R[81],E,R[82],N,N],[12,R[83],E,E,43,N],[12,R[84],E,E,43,N],[12,R[85],E,E,43,N],[3,R[92],E,E,N,N],[12,R[62],E,E,44,N],[12,"name",E,E,44,N],[12,R[9],E,E,44,N],[12,R[16],E,E,44,N],[12,R[64],E,E,44,N],[12,"table",E,E,44,N],[3,R[88],E,E,N,N],[12,R[89],E,E,45,N],[12,R[90],E,E,45,N],[12,R[91],E,E,45,N],[3,R[99],E,E,N,N],[12,"left",E,E,46,N],[12,"right",E,E,46,N],[12,"offsets",E,E,46,N],[12,R[65],E,E,46,N],[3,R[100],E,E,N,N],[12,R[62],E,E,47,N],[12,R[9],E,E,47,N],[12,R[136],E,E,47,N],[12,"offsets",E,E,47,N],[12,R[65],E,E,47,N],[3,R[260],E,E,N,N],[12,"module_type",E,E,48,N],[3,R[261],E,E,N,N],[12,"relation",E,E,49,N],[12,"value",E,E,49,N],[4,R[262],E,E,N,N],[13,R[66],E,E,50,N],[13,R[67],E,E,50,N],[0,"finite_dimensional_module",E,E,N,N],[3,"FiniteDimensionalModule","rust_ext::module::finite_dimensional_module",E,N,N],[12,R[62],E,E,39,N],[12,"name",E,E,39,N],[12,R[68],E,E,39,N],[12,R[64],E,E,39,N],[12,"actions",E,E,39,N],[11,"new",R[69],E,39,[[[R[51]],["usize"],["arc",[R[51]]],[R[18]],["bivec",["usize"]]],["self"]]],[11,"set_basis_element_name",E,E,39,[[["self"],["usize"],["i32"],[R[18]]]]],[11,R[75],E,E,39,[[["value"]]]],[11,"allocate_actions",E,E,39,[[["bivec"],["arc"]],[["bivec",["bivec"]],["bivec",["vec"]]]]],[11,"set_action_vector",E,E,39,[[["self"],["usize"],["i32"],[R[28]]]]],[11,"set_action",E,E,39,[[["self"],["u32"],["usize"],["i32"],["vec",["u32"]]]]],[11,"action",E,R[70],39,[[["self"],["usize"],["i32"]],[R[28]]]],[11,"action_mut",E,R[70],39,[[["self"],["usize"],["i32"]],[R[28]]]],[11,R[71],E,E,39,[[["arc",[R[51]]],[R[51]],["value"]],["self"]]],[11,"check_validity",E,E,39,[[["self"],["i32"]],[["box",["error"]],[R[0],["box"]]]]],[11,"extend_actions",E,E,39,[[["self"],["i32"]]]],[11,"minimal_actions_to_json",E,E,39,[[["self"]],["value"]]],[11,"to_minimal_json",E,E,39,[[["self"]],["value"]]],[11,"actions_to_json",E,E,39,[[["self"]],["value"]]],[0,"finitely_presented_module",E,E,N,N],[3,R[263],R[171],E,N,N],[12,R[76],E,E,51,N],[12,R[77],E,E,51,N],[3,"FinitelyPresentedModule",E,E,N,N],[12,"name",E,E,41,N],[12,R[9],E,E,41,N],[12,R[63],E,E,41,N],[12,R[72],E,E,41,N],[12,"map",E,E,41,N],[12,R[73],E,E,41,N],[11,"new",R[69],E,41,[[[R[51]],["i32"],["arc",[R[51]]],[R[18]]],["self"]]],[11,R[93],E,E,41,[[["self"],["vec",[R[18]]],["i32"],[R[18]]]]],[11,"add_relations",E,E,41,[[["self"],[R[74]],["i32"]]]],[11,R[75],E,E,41,[[["value"]]]],[11,R[71],E,E,41,[[["arc",[R[51]]],[R[51]],["value"]],["self"]]],[11,"relations_to_json",E,E,41,[[["self"]],["value"]]],[11,R[76],E,E,41,[[["self"],["usize"],["i32"]],["isize"]]],[11,R[77],E,E,41,[[["self"],["usize"],["i32"]],["usize"]]],[0,"truncated_module",E,E,N,N],[3,R[78],"rust_ext::module::truncated_module",R[79],N,N],[12,R[83],E,E,42,N],[12,R[80],E,E,42,N],[11,"new",R[69],E,42,[[["i32"],["arc"]],["self"]]],[0,"quotient_module",E,E,N,N],[3,R[81],"rust_ext::module::quotient_module",R[82],N,N],[12,R[83],E,E,43,N],[12,R[84],E,E,43,N],[12,R[85],E,E,43,N],[11,"new",R[69],E,43,[[["arc"]],["self"]]],[11,"quotient",E,E,43,[[["self"],[R[28]],["i32"]]]],[11,"quotient_basis_elements",E,E,43,[[["self"],["vec",["usize"]],["usize"],["i32"]]]],[11,"quotient_vectors",E,E,43,[[["self"],[R[28]],["i32"],["vec",[R[28]]]]]],[11,"flush",E,E,43,[[["self"],["i32"]]]],[11,"quotient_all",E,E,43,[[["self"],["i32"]]]],[11,"act_on_original_basis",E,E,43,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[11,"reduce",E,E,43,[[["self"],[R[28]],["i32"]]]],[11,"old_basis_to_new",E,E,43,[[["self"],["i32"],[R[28]],[R[28]]]]],[0,"free_module",E,E,N,N],[3,R[264],R[172],E,N,N],[12,"operation_degree",E,E,52,N],[12,"operation_index",E,E,52,N],[12,R[86],E,E,52,N],[12,R[87],E,E,52,N],[3,R[88],E,E,N,N],[12,R[89],E,E,45,N],[12,R[90],E,E,45,N],[12,R[91],E,E,45,N],[3,R[92],E,E,N,N],[12,R[62],E,E,44,N],[12,"name",E,E,44,N],[12,R[9],E,E,44,N],[12,R[16],E,E,44,N],[12,R[64],E,E,44,N],[12,"table",E,E,44,N],[11,"new",R[69],E,44,[[[R[51]],["i32"],["arc",[R[51]]],[R[18]]],["self"]]],[11,R[154],E,E,44,[[["self"]],["i32"]]],[11,"number_of_gens_in_degree",E,E,44,[[["self"],["i32"]],["usize"]]],[11,"construct_table",E,E,44,[[["self"],["i32"]]]],[11,"dimension_with_table",E,E,44,[[[R[94]]],["usize"]]],[11,R[93],E,E,44,[[["self"],[R[94]],["usize"],["i32"],[R[59],["vec"]],[R[107],["i32"]],["vec",[R[18]]]]]],[11,"add_generators_to_table",E,E,44,[[[R[94]],["usize"],["i32"]]]],[11,"operation_generator_to_index",E,E,44,[[["self"],["usize"],["i32"]],["usize"]]],[11,"operation_generator_pair_to_idx",E,E,44,[[["self"],[R[95]]],["usize"]]],[11,"index_to_op_gen",E,E,44,[[["self"],["usize"],["i32"]],[R[95]]]],[11,"element_to_json",E,E,44,[[["self"],[R[28]],["i32"]],["value"]]],[11,"add_generators_immediate",E,E,44,[[["self"],["usize"],["i32"],[R[59],["vec"]],["vec",[R[18]]]]]],[11,R[106],E,E,44,[[["self"],["i32"]]]],[0,"hom_module",E,E,N,N],[3,R[96],"rust_ext::module::hom_module",E,N,N],[12,R[62],E,E,40,N],[12,"source",E,E,40,N],[12,"target",E,E,40,N],[12,R[97],E,E,40,N],[11,"new",R[69],E,40,[[["arc",[R[98]]],["arc"],[R[98]]],["self"]]],[11,"source",E,E,40,[[["self"]],[[R[98]],["arc",[R[98]]]]]],[11,"target",E,E,40,[[["self"]],["arc"]]],[11,"element_to_homomorphism",E,E,40,[[["self"],[R[28]],["i32"]],[R[115]]]],[11,"evaluate_basis_map_on_element",E,E,40,[[["self"],["u32"],["usize"],["i32"],[R[28]],[R[28]]]]],[0,"tensor_module",E,E,N,N],[3,R[99],"rust_ext::module::tensor_module",E,N,N],[12,"left",E,E,46,N],[12,"right",E,E,46,N],[12,"offsets",E,E,46,N],[12,R[65],E,E,46,N],[11,"new",R[69],E,46,[[["arc"],["arc"]],["self"]]],[11,R[101],E,E,46,[[["self"],["usize"],["i32"]],["i32"]]],[11,"act_helper",E,E,46,[[["self"],["u32"],["usize"],["i32"],[R[28]],[R[28]]]]],[0,"sum_module",E,E,N,N],[3,R[100],"rust_ext::module::sum_module",E,N,N],[12,R[62],E,E,47,N],[12,R[9],E,E,47,N],[12,R[136],E,E,47,N],[12,"offsets",E,E,47,N],[12,R[65],E,E,47,N],[11,"new",R[69],E,47,[[[R[51]],["vec",["arc"]],["i32"],["arc",[R[51]]],["arc"]],["self"]]],[11,R[101],E,E,47,[[["self"],["usize"],["i32"]],["usize"]]],[0,"homomorphism",E,E,N,N],[3,R[104],R[105],E,N,N],[12,"source",E,E,53,N],[12,"target",E,E,53,N],[12,"outputs",E,E,53,N],[12,"kernel",E,E,53,N],[12,R[102],E,E,53,N],[12,R[9],E,E,53,N],[12,R[16],E,E,53,N],[12,R[103],E,E,53,N],[3,R[113],E,R[114],N,N],[12,"source",E,E,54,N],[12,"target",E,E,54,N],[12,"map",E,E,54,N],[12,"kernel",E,E,54,N],[12,R[102],E,E,54,N],[3,R[109],E,E,N,N],[12,"lock",E,E,55,N],[12,"source",E,E,55,N],[12,"target",E,E,55,N],[12,R[103],E,E,55,N],[12,R[338],E,E,55,N],[12,R[110],E,E,55,N],[12,"kernels",E,E,55,N],[3,R[126],E,E,N,N],[12,"source",E,E,56,N],[12,"target",E,E,56,N],[12,"map",E,E,56,N],[3,R[124],E,E,N,N],[12,"source",E,E,57,N],[12,R[125],E,E,57,N],[3,R[117],E,E,N,N],[12,"f",E,E,58,N],[12,"s",E,E,58,N],[12,T,E,E,58,N],[3,R[118],E,E,N,N],[12,"f",E,E,59,N],[12,"s",E,E,59,N],[12,T,E,E,59,N],[3,R[121],E,E,N,N],[12,"f",E,E,60,N],[12,"s",E,E,60,N],[12,T,E,E,60,N],[3,R[122],E,E,N,N],[12,"f",E,E,61,N],[12,"s",E,E,61,N],[12,T,E,E,61,N],[0,"free_module_homomorphism",E,E,N,N],[3,R[104],"rust_ext::module::homomorphism::free_module_homomorphism",E,N,N],[12,"source",E,E,53,N],[12,"target",E,E,53,N],[12,"outputs",E,E,53,N],[12,"kernel",E,E,53,N],[12,R[102],E,E,53,N],[12,R[9],E,E,53,N],[12,R[16],E,E,53,N],[12,R[103],E,E,53,N],[11,"new",R[105],E,53,[[["arc"],[R[98]],["i32"],["arc",[R[98]]]],["self"]]],[11,R[103],E,E,53,[[["self"]],["i32"]]],[11,R[9],E,E,53,[[["self"]],["i32"]]],[11,"output",E,E,53,[[["self"],["usize"],["i32"]],[R[28]]]],[11,"extend_by_zero_safe",E,E,53,[[["self"],["i32"]]]],[11,R[106],E,E,53,[[["self"],[R[107]],["i32"]]]],[11,"add_generators_from_big_vector",E,E,53,[[["self"],["i32"],[R[107]],[R[28]]]]],[11,"add_generators_from_matrix_rows",E,E,53,[[["self"],[R[74]],["usize"],["i32"],[R[107]]]]],[11,"apply_to_generator",E,E,53,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[11,"apply_to_basis_element_with_table",E,E,53,[[["self"],["u32"],[R[94]],["i32"],[R[28]],["usize"]]]],[11,R[128],E,E,53,[[["self"],[R[74]],["usize"],["i32"]]]],[11,"get_matrix_with_table",E,"Arguments * `degree` - The internal degree of the target…",53,[[["self"],[R[74]],[R[94]],["i32"],["usize"]]]],[11,"lock",E,E,53,[[["self"]],[[R[107],["i32"]],["i32"]]]],[11,"set_kernel",E,E,53,[[["self"],["i32"],[R[107]],[R[34]]]]],[11,"set_quasi_inverse",E,E,53,[[["self"],[R[108]],["i32"],[R[107]]]]],[0,"bounded_module_homomorphism",E,E,N,N],[3,R[109],"rust_ext::module::homomorphism::bounded_module_homomorphism",E,N,N],[12,"lock",E,E,55,N],[12,"source",E,E,55,N],[12,"target",E,E,55,N],[12,R[103],E,E,55,N],[12,R[338],E,E,55,N],[12,R[110],E,E,55,N],[12,"kernels",E,E,55,N],[11,"from",R[105],E,55,[[["f"]],["self"]]],[11,"replace_source",E,"This function replaces the source of the…",55,[[["arc"],[R[111]]],[[R[111]],[R[112]]]]],[11,"replace_target",E,"See `replace_source`",55,[[["arc"],[R[111]]],[[R[112]],[R[111]]]]],[0,"hom_pullback",E,E,N,N],[3,R[113],"rust_ext::module::homomorphism::hom_pullback",R[114],N,N],[12,"source",E,E,54,N],[12,"target",E,E,54,N],[12,"map",E,E,54,N],[12,"kernel",E,E,54,N],[12,R[102],E,E,54,N],[11,"new",R[105],E,54,[[[R[116]],[R[115],[R[98]]],["arc",[R[115]]],["arc",[R[116]]]],["self"]]],[0,"truncated_homomorphism",E,E,N,N],[3,R[117],"rust_ext::module::homomorphism::truncated_homomorphism",E,N,N],[12,"f",E,E,58,N],[12,"s",E,E,58,N],[12,T,E,E,58,N],[3,R[118],E,E,N,N],[12,"f",E,E,59,N],[12,"s",E,E,59,N],[12,T,E,E,59,N],[11,"new",R[105],E,58,[[[R[119]],["arc",[R[119]]],[R[119]],["arc",[R[119]]],["arc"]],["self"]]],[11,R[120],E,E,58,[[["self"]],["i32"]]],[11,"new",E,E,59,[[["arc",[R[119]]],["arc"],[R[119]],["arc"]],["self"]]],[11,R[120],E,E,59,[[["self"]],["i32"]]],[0,"quotient_homomorphism",E,E,N,N],[3,R[121],"rust_ext::module::homomorphism::quotient_homomorphism",E,N,N],[12,"f",E,E,60,N],[12,"s",E,E,60,N],[12,T,E,E,60,N],[3,R[122],E,E,N,N],[12,"f",E,E,61,N],[12,"s",E,E,61,N],[12,T,E,E,61,N],[11,"new",R[105],E,60,[[[R[123]],[R[123]],["arc",[R[123]]],["arc",[R[123]]],["arc"]],["self"]]],[11,"new",E,E,61,[[[R[123]],["arc"],["arc",[R[123]]],["arc"]],["self"]]],[0,"fp_module_homomorphism",E,E,N,N],[3,R[124],"rust_ext::module::homomorphism::fp_module_homomorphism",E,N,N],[12,"source",E,E,57,N],[12,R[125],E,E,57,N],[8,R[127],E,E,N,N],[10,R[77],E,E,62,[[["self"],["usize"],["i32"]],["usize"]]],[10,R[63],E,E,62,[[["self"]],["arc"]]],[0,"finite_module_homomorphism",R[105],E,N,N],[3,R[126],R[173],E,N,N],[12,"source",E,E,56,N],[12,"target",E,E,56,N],[12,"map",E,E,56,N],[4,"FMHI",E,E,N,N],[13,"FD",E,E,63,N],[13,"FP",E,E,63,N],[8,R[127],R[105],E,N,N],[10,R[77],E,E,62,[[["self"],["usize"],["i32"]],["usize"]]],[10,R[63],E,E,62,[[["self"]],["arc"]]],[8,R[265],E,E,N,N],[16,"Source",E,E,64,N],[16,"Target",E,E,64,N],[18,"CUSTOM_QI",E,E,64,N],[10,"source",E,E,64,[[["self"]],["arc"]]],[10,"target",E,E,64,[[["self"]],["arc"]]],[10,R[103],E,E,64,[[["self"]],["i32"]]],[10,R[178],E,"Calling this function when `input_idx <…",64,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[10,"kernel",E,E,64,[[["self"],["i32"]],[R[34]]]],[10,R[102],E,E,64,[[["self"],["i32"]],[R[108]]]],[10,R[179],E,E,64,[[["self"],["i32"]]]],[11,"apply",E,E,64,[[["self"],["u32"],["i32"],[R[28]],[R[28]]]]],[11,"prime",E,E,64,[[["self"]],["u32"]]],[11,R[9],E,E,64,[[["self"]],["i32"]]],[11,"image",E,"Returns the image of the module homomorphism in degree…",64,[[["self"],["i32"]],[R[59]]]],[11,R[146],E,"A version of kernel_and_quasi_inverse that, in fact,…",64,[[["self"],["i32"]],[R[108]]]],[11,"kernel_and_quasi_inverse",E,E,64,[[["self"],["i32"]]]],[11,R[128],E,E,64,[[["self"],[R[74]],["usize"],["i32"]]]],[11,R[180],E,E,64,[[["self"],["i32"],[R[28]],[R[28]]]]],[8,R[266],E,E,N,N],[10,R[181],E,E,65,[[["arc"],["i32"],["arc"]],["self"]]],[8,R[267],R[69],E,N,N],[10,R[16],E,"`max_degree` is the a degree such that if t >…",66,[[["self"]],["i32"]]],[11,R[129],E,E,66,[[["self"]],["usize"]]],[11,"to_fd_module",E,E,66,[[["self"]],[R[132]]]],[8,"Module",E,E,N,N],[10,R[62],E,E,67,[[["self"]],[["arc",[R[51]]],[R[51]]]]],[10,"name",E,E,67,[[["self"]],["str"]]],[10,R[9],E,E,67,[[["self"]],["i32"]]],[11,R[61],E,E,67,[[["self"],["i32"]]]],[10,R[21],E,E,67,[[["self"],["i32"]],["usize"]]],[10,R[219],E,E,67,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[10,R[130],E,E,67,[[["self"],["usize"],["i32"]],[R[18]]]],[11,"is_unit",E,E,67,[[["self"]],["bool"]]],[11,"prime",E,E,67,[[["self"]],["u32"]]],[11,R[220],E,"Whether act_on_basis_borrow is available.",67,[[["self"]],["bool"]]],[11,R[221],E,"Returns a borrow of the value of the corresponding action…",67,[[["self"],["usize"],["i32"]],[R[28]]]],[11,"act",E,E,67,[[["self"],["u32"],["usize"],["i32"],[R[28]],[R[28]]]]],[11,R[222],E,E,67,[[["self"],["u32"],["i32"],[R[28]],[R[28]]]]],[11,R[223],E,E,67,[[["self"],["i32"]],[R[18]]]],[11,R[131],E,E,67,[[["self"],[R[28]],["i32"]],[R[18]]]],[8,R[268],E,E,N,N],[10,R[134],E,E,68,[[["arc",[R[51]]],[R[51]],["i32"]],["self"]]],[11,R[71],E,E,50,[[["arc",[R[51]]],[R[51]],["value"]],[["box",["error"]],[R[0],["box"]]]]],[11,"as_fp_module",E,E,50,[[],[[R[59],[R[231]]],[R[231]]]]],[11,"as_fd_module",E,E,50,[[],[[R[132]],[R[59],[R[132]]]]]],[0,R[133],R[19],E,N,N],[3,R[138],R[140],E,N,N],[12,R[9],E,E,69,N],[12,"source",E,E,69,N],[12,"target",E,E,69,N],[12,R[134],E,E,69,N],[12,R[136],E,E,69,N],[12,R[135],E,E,69,N],[12,R[139],E,E,69,N],[3,R[141],E,E,N,N],[12,R[136],E,E,70,N],[12,R[134],E,E,70,N],[12,R[135],E,E,70,N],[3,R[142],E,E,N,N],[12,R[136],E,E,71,N],[12,R[134],E,E,71,N],[12,R[135],E,E,71,N],[12,R[143],E,E,71,N],[12,R[137],E,E,71,N],[3,R[144],E,E,N,N],[12,"lock",E,E,72,N],[12,"left_cc",E,E,72,N],[12,R[145],E,E,72,N],[12,R[136],E,E,72,N],[12,R[134],E,E,72,N],[12,R[135],E,E,72,N],[3,R[269],E,"`chain_maps` is required to be non-empty",N,N],[12,"s_shift",E,E,73,N],[12,R[137],E,E,73,N],[4,R[270],E,E,N,N],[13,"Homological",E,E,74,N],[13,"Cohomological",E,E,74,N],[0,"hom_complex",E,E,N,N],[3,R[138],"rust_ext::chain_complex::hom_complex",E,N,N],[12,R[9],E,E,69,N],[12,"source",E,E,69,N],[12,"target",E,E,69,N],[12,R[134],E,E,69,N],[12,R[136],E,E,69,N],[12,R[135],E,E,69,N],[12,R[139],E,E,69,N],[11,"new",R[140],E,69,[[["arc"],["arc"]],["self"]]],[0,"finite_chain_complex",E,E,N,N],[3,R[141],"rust_ext::chain_complex::finite_chain_complex",E,N,N],[12,R[136],E,E,70,N],[12,R[134],E,E,70,N],[12,R[135],E,E,70,N],[3,R[142],E,E,N,N],[12,R[136],E,E,71,N],[12,R[134],E,E,71,N],[12,R[135],E,E,71,N],[12,R[143],E,E,71,N],[12,R[137],E,E,71,N],[11,"pop",R[140],E,70,[[["self"]]]],[11,"ccdz",E,E,70,[[["arc"]],["self"]]],[0,"tensor_product_chain_complex",E,E,N,N],[3,R[144],R[147],E,N,N],[12,"lock",E,E,72,N],[12,"left_cc",E,E,72,N],[12,R[145],E,E,72,N],[12,R[136],E,E,72,N],[12,R[134],E,E,72,N],[12,R[135],E,E,72,N],[3,R[271],E,E,N,N],[12,"left_cc",E,E,75,N],[12,R[145],E,E,75,N],[12,"source_s",E,E,75,N],[12,"lock",E,E,75,N],[12,"source",E,E,75,N],[12,"target",E,E,75,N],[12,R[110],E,E,75,N],[6,"STM",E,E,N,N],[6,"TensorSquareCC",E,E,N,N],[11,"new",R[140],E,72,[[["arc"],["arc"]],["self"]]],[11,"left_cc",E,E,72,[[["self"]],["arc"]]],[11,R[145],E,E,72,[[["self"]],["arc"]]],[11,"swap",E,"This function sends a (x) b to b (x) a. This makes sense…",72,[[["self"],["u32"],["i32"],[R[28]],[R[28]]]]],[11,R[146],R[147],E,75,[[["self"],["i32"]]]],[8,R[272],R[140],"A chain complex is defined to start in degree 0. The…",N,N],[16,"Module",E,E,76,N],[16,R[148],E,E,76,N],[11,"prime",E,E,76,[[["self"]],["u32"]]],[10,R[62],E,E,76,[[["self"]],[["arc",[R[51]]],[R[51]]]]],[10,R[9],E,E,76,[[["self"]],["i32"]]],[10,R[134],E,E,76,[[["self"]],["arc"]]],[10,R[83],E,E,76,[[["self"],["u32"]],["arc"]]],[10,R[149],E,E,76,[[["self"],["u32"]],["arc"]]],[10,R[150],E,E,76,[[["self"],["u32"],["i32"]]]],[10,R[182],E,E,76,[[["self"],["u32"],["vec",["usize"]],["i32"],["usize"]]]],[10,R[183],E,E,76,[[["self"],["u32"],["i32"]],["vec"]]],[10,R[184],E,E,76,[[["self"],["u32"]],["i32"]]],[11,"compute_homology_through_bidegree",E,E,76,[[["self"],["u32"],["i32"]]]],[11,R[185],E,E,76,[[["self"],["u32"],["i32"]],["usize"]]],[11,R[151],E,E,76,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[11,"compute_homology",E,E,76,[[["self"],["u32"],["i32"]]]],[8,R[273],E,E,N,N],[16,"Module",E,E,77,N],[16,R[148],E,E,77,N],[11,"prime",E,E,77,[[["self"]],["u32"]]],[10,R[62],E,E,77,[[["self"]],[["arc",[R[51]]],[R[51]]]]],[10,R[9],E,E,77,[[["self"]],["i32"]]],[10,R[134],E,E,77,[[["self"]],["arc"]]],[10,R[83],E,E,77,[[["self"],["u32"]],["arc"]]],[10,R[149],E,E,77,[[["self"],["u32"]],["arc"]]],[10,R[150],E,E,77,[[["self"],["u32"],["i32"]]]],[10,R[187],E,E,77,[[["self"],["u32"],["vec",["usize"]],["i32"],["usize"]]]],[10,R[139],E,E,77,[[["self"],["u32"],["i32"]],["vec"]]],[10,R[188],E,E,77,[[["self"],["u32"]],["i32"]]],[11,"compute_cohomology_through_bidegree",E,E,77,[[["self"],["u32"],["i32"]]]],[11,"cohomology_dimension",E,E,77,[[["self"],["u32"],["i32"]],["usize"]]],[11,R[151],E,E,77,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[11,"compute_cohomology",E,E,77,[[["self"],["u32"],["i32"]]]],[8,R[274],E,"An augmented chain complex is a map of chain complexes C…",N,N],[16,"TargetComplex",E,E,78,N],[16,R[269],E,E,78,N],[10,"target",E,E,78,[[["self"]],["arc"]]],[10,R[189],E,E,78,[[["self"],["u32"]],["arc"]]],[8,R[275],E,"A bounded chain complex is a chain complex C for which C_s…",N,N],[10,"max_s",E,E,79,[[["self"]],["u32"]]],[0,R[152],R[19],E,N,N],[3,R[276],R[174],"ResolutionInner contains the data of the actual…",N,N],[12,"complex",E,E,80,N],[12,R[136],E,E,80,N],[12,R[134],E,E,80,N],[12,R[137],E,E,80,N],[12,R[135],E,E,80,N],[12,"kernels",E,E,80,N],[3,"Cocycle",E,E,N,N],[12,"s",E,E,81,N],[12,T,E,E,81,N],[12,"class",E,E,81,N],[12,"name",E,E,81,N],[3,"SelfMap",E,E,N,N],[12,"s",E,E,82,N],[12,T,E,E,82,N],[12,"name",E,E,82,N],[12,"map_data",E,E,82,N],[12,"map",E,E,82,N],[3,R[277],E,"Fields * `kernels` - For each internal degree, store the…",N,N],[12,"inner",E,E,83,N],[12,"next_s",E,E,83,N],[12,"next_t",E,E,83,N],[12,"add_class",E,E,83,N],[12,R[153],E,E,83,N],[12,"filtration_one_products",E,E,83,N],[12,"unit_resolution",E,E,83,N],[12,"unit_resolution_owner",E,E,83,N],[12,"product_names",E,E,83,N],[12,"product_list",E,E,83,N],[12,"chain_maps_to_unit_resolution",E,E,83,N],[12,"max_product_homological_degree",E,E,83,N],[12,"self_maps",E,E,83,N],[5,"ptr_eq",E,"Hack to compare two pointers of different types (in this…",N,[[["arc"],["arc"]],["bool"]]],[11,"new",E,E,80,[[["arc"]],["self"]]],[11,"extend_through_degree",E,"This function prepares the ResolutionInner object to…",80,[[["self"],["u32"],["i32"]]]],[11,"step_resolution",E,"Call our resolution $X$, and the chain complex to resolve…",80,[[["self"],["u32"],["i32"]]]],[11,"cocycle_string",E,E,80,[[["self"],["u32"],["usize"],["i32"]],[R[18]]]],[11,"complex",E,E,80,[[["self"]],["arc"]]],[11,"number_of_gens_in_bidegree",E,E,80,[[["self"],["u32"],["i32"]],["usize"]]],[11,"prime",E,E,80,[[["self"]],["u32"]]],[11,"new",E,E,83,[[["box",["fn"]],[R[59],["box"]],["arc"],[R[59],["box"]],["box",["fn"]]],["self"]]],[11,"resolve_through_bidegree",E,E,83,[[["self"],["u32"],["i32"]]]],[11,"resolve_through_degree",E,E,83,[[["self"],["i32"]]]],[11,"step_after",E,E,83,[[["self"],["u32"],["i32"]]]],[11,"compute_filtration_one_products",E,E,83,[[["self"],["u32"],["i32"]]]],[11,R[153],E,E,83,[[["self"],["u32"],["vec",["vec"]],["i32"],["vec",["u32"]],["str"],["bool"]]]],[11,R[154],E,E,83,[[["self"]],["i32"]]],[11,"max_computed_homological_degree",E,E,83,[[["self"]],["u32"]]],[11,"graded_dimension_string",E,E,83,[[["self"]],[R[18]]]],[11,"catch_up_products",E,"This function computes the products between the element…",83,[[["self"]]]],[11,R[339],E,"The return value is whether the product was actually…",83,[[["self"],["u32"],["i32"],["vec",["u32"]],["str"]],["bool"]]],[11,"construct_unit_resolution",E,E,83,[[["self"]]]],[11,"set_unit_resolution",E,E,83,[[["self"],["weak",["rwlock"]],["rwlock",[R[152]]]]]],[11,"compute_products",E,"Compute products whose result lie in degrees up to (s, t)",83,[[["self"],["u32"],["i32"]]]],[11,"compute_product_step",E,"Target = result of the product Source = multiplicand",83,[[["self"],["u32"],["i32"],["cocycle"]]]],[11,"construct_maps_to_unit",E,E,83,[[["self"],["u32"],["i32"]]]],[11,"extend_maps_to_unit",E,"This ensures the chain_maps_to_unit_resolution are defined…",83,[[["self"],["u32"],["i32"]]]],[11,"add_self_map",E,"The return value is whether the self map was actually…",83,[[["self"],["u32"],["i32"],[R[74]],["str"]],["bool"]]],[11,"compute_self_maps",E,"We compute the products by self maps where the result has…",83,[[["self"],["u32"],["i32"]]]],[11,R[62],E,E,83,[[["self"]],[["arc",[R[51]]],[R[51]]]]],[11,"prime",E,E,83,[[["self"]],["u32"]]],[11,R[83],E,E,83,[[["self"],["u32"]],[[R[98]],["arc",[R[98]]]]]],[11,R[9],E,E,83,[[["self"]],["i32"]]],[11,R[149],E,E,83,[[["self"],["u32"]],[["arc",[R[115]]],[R[115],[R[98]]]]]],[0,"resolution_homomorphism",R[19],E,N,N],[3,R[278],R[175],E,N,N],[12,"name",E,E,84,N],[12,"source",E,E,84,N],[12,"target",E,E,84,N],[12,"maps",E,E,84,N],[12,"homological_degree_shift",E,E,84,N],[12,"internal_degree_shift",E,E,84,N],[6,"ResolutionHomomorphismToUnit",E,E,N,N],[11,"new",E,E,84,[[["weak",[R[155]]],["u32"],["weak"],["i32"],[R[18]],[R[155]]],["self"]]],[11,"get_map_ensure_length",E,E,84,[[["self"],["u32"]],[R[115]]]],[11,"get_map",E,E,84,[[["self"],["u32"]],[R[115]]]],[11,"to_chain_maps",E,E,84,[[],[[R[115]],["vec",[R[115]]]]]],[11,"extend",E,"Extend the resolution homomorphism such that it is defined…",84,[[["self"],["u32"],["i32"]]]],[11,"extend_step",E,E,84,[[["self"],["u32"],[R[74]],["i32"],[R[59],[R[74]]]]]],[11,"extend_step_helper",E,E,84,[[["self"],["u32"],[R[74]],["i32"],[R[59],[R[74]]]],[R[74]]]],[0,"cli_module_loaders",R[19],E,N,N],[5,"get_gens","rust_ext::cli_module_loaders",E,N,[[["i32"]],[["bivec",["vec"]],["box",["error"]],[R[0],["bivec","box"]]]]],[5,"gens_to_json",E,E,N,[[["bivec"]],["value"]]],[5,"get_expression_to_vector",E,E,N,[[[R[28]],["str"],["f"]]]],[5,"interactive_module_define",E,E,N,[[],[[R[18]],["box",["error"]],[R[0],[R[18],"box"]]]]],[5,"interactive_module_define_fdmodule",E,E,N,[[["value"],["u32"],["bool"]],[[R[0],["value","box"]],["value"],["box",["error"]]]]],[5,"get_relation",E,E,N,[[[R[52]],[R[98]],[R[60]],[R[53]]],[[R[18]],[R[0],[R[18]]]]]],[5,"interactive_module_define_fpmodule",E,E,N,[[["value"],["u32"],["bool"]],[[R[0],["value","box"]],["value"],["box",["error"]]]]],[0,"yoneda",R[19],E,N,N],[5,"rate_operation","rust_ext::yoneda",E,N,[[["usize"],["arc"],["i32"]],["i32"]]],[5,"rate_adem_operation",E,E,N,[[["usize"],[R[52]],["i32"]],["i32"]]],[5,"operation_drop",E,E,N,[[["usize"],[R[52]],["i32"]],["i32"]]],[5,"split_mut_borrow",E,E,N,[[["vec"],["usize"]]]],[5,"yoneda_representative_element",E,E,N,[[["u32"],["arc"],["i32"],["usize"]],[[R[156],[R[157]]],[R[156]],[R[157]],[R[158],[R[157],R[156],R[156]]]]]],[5,"yoneda_representative",E,"This function produces a quasi-isomorphic quotient of `cc`…",N,[[["chainmap"],["arc"]],[[R[156],[R[157]]],[R[156]],[R[157]],[R[158],[R[157],R[156],R[156]]]]]],[5,"yoneda_representative_with_strategy",E,E,N,[[["chainmap"],["arc"],["f"]],[[R[156],[R[157]]],[R[156]],[R[157]],[R[158],[R[157],R[156],R[156]]]]]],[5,"compute_kernel_image",E,"This function does the following computation:",N,[[["qm"],["g"],["i32"],[R[59],["arc"]],["arc"],[R[34]],[R[59],[R[34]]],[R[59]]]]],[6,"Yoneda",E,E,N,N],[17,"PENALTY_UNIT",E,E,N,N],[6,"CCC",R[19],E,N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[1],E,E,0,[[[U]],[R[0]]]],[11,R[2],E,E,0,[[],[R[0]]]],[11,R[3],E,E,0,[[["self"]],[T]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[R[6]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[1],E,E,1,[[[U]],[R[0]]]],[11,R[2],E,E,1,[[],[R[0]]]],[11,R[3],E,E,1,[[["self"]],[T]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[R[6]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[162],E,E,2,[[["self"]],[R[18]]]],[11,R[1],E,E,2,[[[U]],[R[0]]]],[11,R[2],E,E,2,[[],[R[0]]]],[11,R[3],E,E,2,[[["self"]],[T]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[R[6]]]],[11,R[161],R[159],E,3,[[["self"]],[T]]],[11,R[160],E,E,3,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[1],E,E,3,[[[U]],[R[0]]]],[11,R[2],E,E,3,[[],[R[0]]]],[11,R[3],E,E,3,[[["self"]],[T]]],[11,R[4],E,E,3,[[["self"]],[T]]],[11,R[5],E,E,3,[[["self"]],[R[6]]]],[11,R[161],E,E,4,[[["self"]],[T]]],[11,R[160],E,E,4,[[["self"],[T]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[1],E,E,4,[[[U]],[R[0]]]],[11,R[2],E,E,4,[[],[R[0]]]],[11,R[3],E,E,4,[[["self"]],[T]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[R[6]]]],[11,R[161],E,E,5,[[["self"]],[T]]],[11,R[160],E,E,5,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[1],E,E,5,[[[U]],[R[0]]]],[11,R[2],E,E,5,[[],[R[0]]]],[11,R[3],E,E,5,[[["self"]],[T]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"]],[R[6]]]],[11,R[161],E,E,6,[[["self"]],[T]]],[11,R[160],E,E,6,[[["self"],[T]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[1],E,E,6,[[[U]],[R[0]]]],[11,R[2],E,E,6,[[],[R[0]]]],[11,R[3],E,E,6,[[["self"]],[T]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"]],[R[6]]]],[11,R[161],E,E,7,[[["self"]],[T]]],[11,R[160],E,E,7,[[["self"],[T]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[1],E,E,7,[[[U]],[R[0]]]],[11,R[2],E,E,7,[[],[R[0]]]],[11,R[3],E,E,7,[[["self"]],[T]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"]],[R[6]]]],[11,R[161],E,E,8,[[["self"]],[T]]],[11,R[160],E,E,8,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[1],E,E,8,[[[U]],[R[0]]]],[11,R[2],E,E,8,[[],[R[0]]]],[11,R[3],E,E,8,[[["self"]],[T]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"]],[R[6]]]],[11,R[167],E,E,9,[[],["i"]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[1],E,E,9,[[[U]],[R[0]]]],[11,R[2],E,E,9,[[],[R[0]]]],[11,R[3],E,E,9,[[["self"]],[T]]],[11,R[4],E,E,9,[[["self"]],[T]]],[11,R[5],E,E,9,[[["self"]],[R[6]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[1],E,E,10,[[[U]],[R[0]]]],[11,R[2],E,E,10,[[],[R[0]]]],[11,R[3],E,E,10,[[["self"]],[T]]],[11,R[4],E,E,10,[[["self"]],[T]]],[11,R[5],E,E,10,[[["self"]],[R[6]]]],[11,R[161],E,E,11,[[["self"]],[T]]],[11,R[160],E,E,11,[[["self"],[T]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[162],E,E,11,[[["self"]],[R[18]]]],[11,R[1],E,E,11,[[[U]],[R[0]]]],[11,R[2],E,E,11,[[],[R[0]]]],[11,R[3],E,E,11,[[["self"]],[T]]],[11,R[4],E,E,11,[[["self"]],[T]]],[11,R[5],E,E,11,[[["self"]],[R[6]]]],[11,R[161],R[163],E,13,[[["self"]],[T]]],[11,R[160],E,E,13,[[["self"],[T]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[162],E,E,13,[[["self"]],[R[18]]]],[11,R[1],E,E,13,[[[U]],[R[0]]]],[11,R[2],E,E,13,[[],[R[0]]]],[11,R[3],E,E,13,[[["self"]],[T]]],[11,R[4],E,E,13,[[["self"]],[T]]],[11,R[5],E,E,13,[[["self"]],[R[6]]]],[11,R[161],E,E,14,[[["self"]],[T]]],[11,R[160],E,E,14,[[["self"],[T]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[1],E,E,14,[[[U]],[R[0]]]],[11,R[2],E,E,14,[[],[R[0]]]],[11,R[3],E,E,14,[[["self"]],[T]]],[11,R[4],E,E,14,[[["self"]],[T]]],[11,R[5],E,E,14,[[["self"]],[R[6]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[1],E,E,15,[[[U]],[R[0]]]],[11,R[2],E,E,15,[[],[R[0]]]],[11,R[3],E,E,15,[[["self"]],[T]]],[11,R[4],E,E,15,[[["self"]],[T]]],[11,R[5],E,E,15,[[["self"]],[R[6]]]],[11,"from",R[164],E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[1],E,E,16,[[[U]],[R[0]]]],[11,R[2],E,E,16,[[],[R[0]]]],[11,R[3],E,E,16,[[["self"]],[T]]],[11,R[4],E,E,16,[[["self"]],[T]]],[11,R[5],E,E,16,[[["self"]],[R[6]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[1],E,E,17,[[[U]],[R[0]]]],[11,R[2],E,E,17,[[],[R[0]]]],[11,R[3],E,E,17,[[["self"]],[T]]],[11,R[4],E,E,17,[[["self"]],[T]]],[11,R[5],E,E,17,[[["self"]],[R[6]]]],[11,"from",R[40],E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[1],E,E,18,[[[U]],[R[0]]]],[11,R[2],E,E,18,[[],[R[0]]]],[11,R[3],E,E,18,[[["self"]],[T]]],[11,R[4],E,E,18,[[["self"]],[T]]],[11,R[5],E,E,18,[[["self"]],[R[6]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[1],E,E,19,[[[U]],[R[0]]]],[11,R[2],E,E,19,[[],[R[0]]]],[11,R[3],E,E,19,[[["self"]],[T]]],[11,R[4],E,E,19,[[["self"]],[T]]],[11,R[5],E,E,19,[[["self"]],[R[6]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[162],E,E,20,[[["self"]],[R[18]]]],[11,R[1],E,E,20,[[[U]],[R[0]]]],[11,R[2],E,E,20,[[],[R[0]]]],[11,R[3],E,E,20,[[["self"]],[T]]],[11,R[4],E,E,20,[[["self"]],[T]]],[11,R[5],E,E,20,[[["self"]],[R[6]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[1],E,E,21,[[[U]],[R[0]]]],[11,R[2],E,E,21,[[],[R[0]]]],[11,R[3],E,E,21,[[["self"]],[T]]],[11,R[4],E,E,21,[[["self"]],[T]]],[11,R[5],E,E,21,[[["self"]],[R[6]]]],[11,"from",R[165],E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[1],E,E,22,[[[U]],[R[0]]]],[11,R[2],E,E,22,[[],[R[0]]]],[11,R[3],E,E,22,[[["self"]],[T]]],[11,R[4],E,E,22,[[["self"]],[T]]],[11,R[5],E,E,22,[[["self"]],[R[6]]]],[11,R[161],E,E,23,[[["self"]],[T]]],[11,R[160],E,E,23,[[["self"],[T]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[162],E,E,23,[[["self"]],[R[18]]]],[11,R[1],E,E,23,[[[U]],[R[0]]]],[11,R[2],E,E,23,[[],[R[0]]]],[11,R[3],E,E,23,[[["self"]],[T]]],[11,R[4],E,E,23,[[["self"]],[T]]],[11,R[5],E,E,23,[[["self"]],[R[6]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[1],E,E,24,[[[U]],[R[0]]]],[11,R[2],E,E,24,[[],[R[0]]]],[11,R[3],E,E,24,[[["self"]],[T]]],[11,R[4],E,E,24,[[["self"]],[T]]],[11,R[5],E,E,24,[[["self"]],[R[6]]]],[11,"from",R[166],E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[1],E,E,25,[[[U]],[R[0]]]],[11,R[2],E,E,25,[[],[R[0]]]],[11,R[3],E,E,25,[[["self"]],[T]]],[11,R[4],E,E,25,[[["self"]],[T]]],[11,R[5],E,E,25,[[["self"]],[R[6]]]],[11,R[161],E,E,26,[[["self"]],[T]]],[11,R[160],E,E,26,[[["self"],[T]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[1],E,E,26,[[[U]],[R[0]]]],[11,R[2],E,E,26,[[],[R[0]]]],[11,R[3],E,E,26,[[["self"]],[T]]],[11,R[4],E,E,26,[[["self"]],[T]]],[11,R[5],E,E,26,[[["self"]],[R[6]]]],[11,R[161],E,E,27,[[["self"]],[T]]],[11,R[160],E,E,27,[[["self"],[T]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[162],E,E,27,[[["self"]],[R[18]]]],[11,R[1],E,E,27,[[[U]],[R[0]]]],[11,R[2],E,E,27,[[],[R[0]]]],[11,R[3],E,E,27,[[["self"]],[T]]],[11,R[4],E,E,27,[[["self"]],[T]]],[11,R[5],E,E,27,[[["self"]],[R[6]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[1],E,E,28,[[[U]],[R[0]]]],[11,R[2],E,E,28,[[],[R[0]]]],[11,R[3],E,E,28,[[["self"]],[T]]],[11,R[4],E,E,28,[[["self"]],[T]]],[11,R[5],E,E,28,[[["self"]],[R[6]]]],[11,R[167],E,E,29,[[],["i"]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[1],E,E,29,[[[U]],[R[0]]]],[11,R[2],E,E,29,[[],[R[0]]]],[11,R[3],E,E,29,[[["self"]],[T]]],[11,R[4],E,E,29,[[["self"]],[T]]],[11,R[5],E,E,29,[[["self"]],[R[6]]]],[11,"from",R[168],E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[1],E,E,30,[[[U]],[R[0]]]],[11,R[2],E,E,30,[[],[R[0]]]],[11,R[3],E,E,30,[[["self"]],[T]]],[11,R[4],E,E,30,[[["self"]],[T]]],[11,R[5],E,E,30,[[["self"]],[R[6]]]],[11,"from",R[169],E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[162],E,E,33,[[["self"]],[R[18]]]],[11,R[1],E,E,33,[[[U]],[R[0]]]],[11,R[2],E,E,33,[[],[R[0]]]],[11,R[3],E,E,33,[[["self"]],[T]]],[11,R[4],E,E,33,[[["self"]],[T]]],[11,R[5],E,E,33,[[["self"]],[R[6]]]],[11,R[161],E,E,34,[[["self"]],[T]]],[11,R[160],E,E,34,[[["self"],[T]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[1],E,E,34,[[[U]],[R[0]]]],[11,R[2],E,E,34,[[],[R[0]]]],[11,R[3],E,E,34,[[["self"]],[T]]],[11,R[4],E,E,34,[[["self"]],[T]]],[11,R[5],E,E,34,[[["self"]],[R[6]]]],[11,R[161],E,E,35,[[["self"]],[T]]],[11,R[160],E,E,35,[[["self"],[T]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[1],E,E,35,[[[U]],[R[0]]]],[11,R[2],E,E,35,[[],[R[0]]]],[11,R[3],E,E,35,[[["self"]],[T]]],[11,R[4],E,E,35,[[["self"]],[T]]],[11,R[5],E,E,35,[[["self"]],[R[6]]]],[11,R[161],E,E,36,[[["self"]],[T]]],[11,R[160],E,E,36,[[["self"],[T]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[1],E,E,36,[[[U]],[R[0]]]],[11,R[2],E,E,36,[[],[R[0]]]],[11,R[3],E,E,36,[[["self"]],[T]]],[11,R[4],E,E,36,[[["self"]],[T]]],[11,R[5],E,E,36,[[["self"]],[R[6]]]],[11,"from",R[170],E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[1],E,E,37,[[[U]],[R[0]]]],[11,R[2],E,E,37,[[],[R[0]]]],[11,R[3],E,E,37,[[["self"]],[T]]],[11,R[4],E,E,37,[[["self"]],[T]]],[11,R[5],E,E,37,[[["self"]],[R[6]]]],[11,"from",E,E,85,[[[T]],[T]]],[11,"into",E,E,85,[[],[U]]],[11,R[162],E,E,85,[[["self"]],[R[18]]]],[11,R[1],E,E,85,[[[U]],[R[0]]]],[11,R[2],E,E,85,[[],[R[0]]]],[11,R[3],E,E,85,[[["self"]],[T]]],[11,R[4],E,E,85,[[["self"]],[T]]],[11,R[5],E,E,85,[[["self"]],[R[6]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[162],E,E,38,[[["self"]],[R[18]]]],[11,R[1],E,E,38,[[[U]],[R[0]]]],[11,R[2],E,E,38,[[],[R[0]]]],[11,R[3],E,E,38,[[["self"]],[T]]],[11,R[4],E,E,38,[[["self"]],[T]]],[11,R[5],E,E,38,[[["self"]],[R[6]]]],[11,"from",R[69],E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[1],E,E,39,[[[U]],[R[0]]]],[11,R[2],E,E,39,[[],[R[0]]]],[11,R[3],E,E,39,[[["self"]],[T]]],[11,R[4],E,E,39,[[["self"]],[T]]],[11,R[5],E,E,39,[[["self"]],[R[6]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[1],E,E,40,[[[U]],[R[0]]]],[11,R[2],E,E,40,[[],[R[0]]]],[11,R[3],E,E,40,[[["self"]],[T]]],[11,R[4],E,E,40,[[["self"]],[T]]],[11,R[5],E,E,40,[[["self"]],[R[6]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[1],E,E,41,[[[U]],[R[0]]]],[11,R[2],E,E,41,[[],[R[0]]]],[11,R[3],E,E,41,[[["self"]],[T]]],[11,R[4],E,E,41,[[["self"]],[T]]],[11,R[5],E,E,41,[[["self"]],[R[6]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[1],E,E,42,[[[U]],[R[0]]]],[11,R[2],E,E,42,[[],[R[0]]]],[11,R[3],E,E,42,[[["self"]],[T]]],[11,R[4],E,E,42,[[["self"]],[T]]],[11,R[5],E,E,42,[[["self"]],[R[6]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[1],E,E,43,[[[U]],[R[0]]]],[11,R[2],E,E,43,[[],[R[0]]]],[11,R[3],E,E,43,[[["self"]],[T]]],[11,R[4],E,E,43,[[["self"]],[T]]],[11,R[5],E,E,43,[[["self"]],[R[6]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[1],E,E,44,[[[U]],[R[0]]]],[11,R[2],E,E,44,[[],[R[0]]]],[11,R[3],E,E,44,[[["self"]],[T]]],[11,R[4],E,E,44,[[["self"]],[T]]],[11,R[5],E,E,44,[[["self"]],[R[6]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[1],E,E,45,[[[U]],[R[0]]]],[11,R[2],E,E,45,[[],[R[0]]]],[11,R[3],E,E,45,[[["self"]],[T]]],[11,R[4],E,E,45,[[["self"]],[T]]],[11,R[5],E,E,45,[[["self"]],[R[6]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[1],E,E,46,[[[U]],[R[0]]]],[11,R[2],E,E,46,[[],[R[0]]]],[11,R[3],E,E,46,[[["self"]],[T]]],[11,R[4],E,E,46,[[["self"]],[T]]],[11,R[5],E,E,46,[[["self"]],[R[6]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[1],E,E,47,[[[U]],[R[0]]]],[11,R[2],E,E,47,[[],[R[0]]]],[11,R[3],E,E,47,[[["self"]],[T]]],[11,R[4],E,E,47,[[["self"]],[T]]],[11,R[5],E,E,47,[[["self"]],[R[6]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[162],E,E,48,[[["self"]],[R[18]]]],[11,R[1],E,E,48,[[[U]],[R[0]]]],[11,R[2],E,E,48,[[],[R[0]]]],[11,R[3],E,E,48,[[["self"]],[T]]],[11,R[4],E,E,48,[[["self"]],[T]]],[11,R[5],E,E,48,[[["self"]],[R[6]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[162],E,E,49,[[["self"]],[R[18]]]],[11,R[1],E,E,49,[[[U]],[R[0]]]],[11,R[2],E,E,49,[[],[R[0]]]],[11,R[3],E,E,49,[[["self"]],[T]]],[11,R[4],E,E,49,[[["self"]],[T]]],[11,R[5],E,E,49,[[["self"]],[R[6]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[1],E,E,50,[[[U]],[R[0]]]],[11,R[2],E,E,50,[[],[R[0]]]],[11,R[3],E,E,50,[[["self"]],[T]]],[11,R[4],E,E,50,[[["self"]],[T]]],[11,R[5],E,E,50,[[["self"]],[R[6]]]],[11,"from",R[171],E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[1],E,E,51,[[[U]],[R[0]]]],[11,R[2],E,E,51,[[],[R[0]]]],[11,R[3],E,E,51,[[["self"]],[T]]],[11,R[4],E,E,51,[[["self"]],[T]]],[11,R[5],E,E,51,[[["self"]],[R[6]]]],[11,"from",R[172],E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[1],E,E,52,[[[U]],[R[0]]]],[11,R[2],E,E,52,[[],[R[0]]]],[11,R[3],E,E,52,[[["self"]],[T]]],[11,R[4],E,E,52,[[["self"]],[T]]],[11,R[5],E,E,52,[[["self"]],[R[6]]]],[11,"from",R[105],E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[1],E,E,53,[[[U]],[R[0]]]],[11,R[2],E,E,53,[[],[R[0]]]],[11,R[3],E,E,53,[[["self"]],[T]]],[11,R[4],E,E,53,[[["self"]],[T]]],[11,R[5],E,E,53,[[["self"]],[R[6]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[1],E,E,54,[[[U]],[R[0]]]],[11,R[2],E,E,54,[[],[R[0]]]],[11,R[3],E,E,54,[[["self"]],[T]]],[11,R[4],E,E,54,[[["self"]],[T]]],[11,R[5],E,E,54,[[["self"]],[R[6]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[1],E,E,55,[[[U]],[R[0]]]],[11,R[2],E,E,55,[[],[R[0]]]],[11,R[3],E,E,55,[[["self"]],[T]]],[11,R[4],E,E,55,[[["self"]],[T]]],[11,R[5],E,E,55,[[["self"]],[R[6]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[1],E,E,56,[[[U]],[R[0]]]],[11,R[2],E,E,56,[[],[R[0]]]],[11,R[3],E,E,56,[[["self"]],[T]]],[11,R[4],E,E,56,[[["self"]],[T]]],[11,R[5],E,E,56,[[["self"]],[R[6]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[1],E,E,57,[[[U]],[R[0]]]],[11,R[2],E,E,57,[[],[R[0]]]],[11,R[3],E,E,57,[[["self"]],[T]]],[11,R[4],E,E,57,[[["self"]],[T]]],[11,R[5],E,E,57,[[["self"]],[R[6]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[1],E,E,58,[[[U]],[R[0]]]],[11,R[2],E,E,58,[[],[R[0]]]],[11,R[3],E,E,58,[[["self"]],[T]]],[11,R[4],E,E,58,[[["self"]],[T]]],[11,R[5],E,E,58,[[["self"]],[R[6]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[1],E,E,59,[[[U]],[R[0]]]],[11,R[2],E,E,59,[[],[R[0]]]],[11,R[3],E,E,59,[[["self"]],[T]]],[11,R[4],E,E,59,[[["self"]],[T]]],[11,R[5],E,E,59,[[["self"]],[R[6]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,"into",E,E,60,[[],[U]]],[11,R[1],E,E,60,[[[U]],[R[0]]]],[11,R[2],E,E,60,[[],[R[0]]]],[11,R[3],E,E,60,[[["self"]],[T]]],[11,R[4],E,E,60,[[["self"]],[T]]],[11,R[5],E,E,60,[[["self"]],[R[6]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,"into",E,E,61,[[],[U]]],[11,R[1],E,E,61,[[[U]],[R[0]]]],[11,R[2],E,E,61,[[],[R[0]]]],[11,R[3],E,E,61,[[["self"]],[T]]],[11,R[4],E,E,61,[[["self"]],[T]]],[11,R[5],E,E,61,[[["self"]],[R[6]]]],[11,"from",R[173],E,63,[[[T]],[T]]],[11,"into",E,E,63,[[],[U]]],[11,R[1],E,E,63,[[[U]],[R[0]]]],[11,R[2],E,E,63,[[],[R[0]]]],[11,R[3],E,E,63,[[["self"]],[T]]],[11,R[4],E,E,63,[[["self"]],[T]]],[11,R[5],E,E,63,[[["self"]],[R[6]]]],[11,"from",R[140],E,69,[[[T]],[T]]],[11,"into",E,E,69,[[],[U]]],[11,R[1],E,E,69,[[[U]],[R[0]]]],[11,R[2],E,E,69,[[],[R[0]]]],[11,R[3],E,E,69,[[["self"]],[T]]],[11,R[4],E,E,69,[[["self"]],[T]]],[11,R[5],E,E,69,[[["self"]],[R[6]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,"into",E,E,70,[[],[U]]],[11,R[1],E,E,70,[[[U]],[R[0]]]],[11,R[2],E,E,70,[[],[R[0]]]],[11,R[3],E,E,70,[[["self"]],[T]]],[11,R[4],E,E,70,[[["self"]],[T]]],[11,R[5],E,E,70,[[["self"]],[R[6]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,"into",E,E,71,[[],[U]]],[11,R[1],E,E,71,[[[U]],[R[0]]]],[11,R[2],E,E,71,[[],[R[0]]]],[11,R[3],E,E,71,[[["self"]],[T]]],[11,R[4],E,E,71,[[["self"]],[T]]],[11,R[5],E,E,71,[[["self"]],[R[6]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,"into",E,E,72,[[],[U]]],[11,R[1],E,E,72,[[[U]],[R[0]]]],[11,R[2],E,E,72,[[],[R[0]]]],[11,R[3],E,E,72,[[["self"]],[T]]],[11,R[4],E,E,72,[[["self"]],[T]]],[11,R[5],E,E,72,[[["self"]],[R[6]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,"into",E,E,73,[[],[U]]],[11,R[1],E,E,73,[[[U]],[R[0]]]],[11,R[2],E,E,73,[[],[R[0]]]],[11,R[3],E,E,73,[[["self"]],[T]]],[11,R[4],E,E,73,[[["self"]],[T]]],[11,R[5],E,E,73,[[["self"]],[R[6]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,"into",E,E,74,[[],[U]]],[11,R[1],E,E,74,[[[U]],[R[0]]]],[11,R[2],E,E,74,[[],[R[0]]]],[11,R[3],E,E,74,[[["self"]],[T]]],[11,R[4],E,E,74,[[["self"]],[T]]],[11,R[5],E,E,74,[[["self"]],[R[6]]]],[11,"from",R[147],E,75,[[[T]],[T]]],[11,"into",E,E,75,[[],[U]]],[11,R[1],E,E,75,[[[U]],[R[0]]]],[11,R[2],E,E,75,[[],[R[0]]]],[11,R[3],E,E,75,[[["self"]],[T]]],[11,R[4],E,E,75,[[["self"]],[T]]],[11,R[5],E,E,75,[[["self"]],[R[6]]]],[11,"from",R[174],E,80,[[[T]],[T]]],[11,"into",E,E,80,[[],[U]]],[11,R[1],E,E,80,[[[U]],[R[0]]]],[11,R[2],E,E,80,[[],[R[0]]]],[11,R[3],E,E,80,[[["self"]],[T]]],[11,R[4],E,E,80,[[["self"]],[T]]],[11,R[5],E,E,80,[[["self"]],[R[6]]]],[11,R[161],E,E,81,[[["self"]],[T]]],[11,R[160],E,E,81,[[["self"],[T]]]],[11,"from",E,E,81,[[[T]],[T]]],[11,"into",E,E,81,[[],[U]]],[11,R[1],E,E,81,[[[U]],[R[0]]]],[11,R[2],E,E,81,[[],[R[0]]]],[11,R[3],E,E,81,[[["self"]],[T]]],[11,R[4],E,E,81,[[["self"]],[T]]],[11,R[5],E,E,81,[[["self"]],[R[6]]]],[11,"from",E,E,82,[[[T]],[T]]],[11,"into",E,E,82,[[],[U]]],[11,R[1],E,E,82,[[[U]],[R[0]]]],[11,R[2],E,E,82,[[],[R[0]]]],[11,R[3],E,E,82,[[["self"]],[T]]],[11,R[4],E,E,82,[[["self"]],[T]]],[11,R[5],E,E,82,[[["self"]],[R[6]]]],[11,"from",E,E,83,[[[T]],[T]]],[11,"into",E,E,83,[[],[U]]],[11,R[1],E,E,83,[[[U]],[R[0]]]],[11,R[2],E,E,83,[[],[R[0]]]],[11,R[3],E,E,83,[[["self"]],[T]]],[11,R[4],E,E,83,[[["self"]],[T]]],[11,R[5],E,E,83,[[["self"]],[R[6]]]],[11,"from",R[175],E,84,[[[T]],[T]]],[11,"into",E,E,84,[[],[U]]],[11,R[1],E,E,84,[[[U]],[R[0]]]],[11,R[2],E,E,84,[[],[R[0]]]],[11,R[3],E,E,84,[[["self"]],[T]]],[11,R[4],E,E,84,[[["self"]],[T]]],[11,R[5],E,E,84,[[["self"]],[R[6]]]],[11,R[176],R[165],E,24,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[177],E,E,24,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[177],R[166],E,28,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[176],E,E,28,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[177],R[168],E,30,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[176],E,E,30,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[176],R[40],E,21,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[177],E,E,21,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[77],R[69],E,41,[[["self"],["usize"],["i32"]],["usize"]]],[11,R[63],E,E,41,[[["self"]],["arc"]]],[11,R[77],E,E,50,[[["self"],["usize"],["i32"]],["usize"]]],[11,R[63],E,E,50,[[["self"]],["arc"]]],[11,"source",R[105],E,53,[[["self"]],["arc"]]],[11,"target",E,E,53,[[["self"]],["arc"]]],[11,R[103],E,E,53,[[["self"]],["i32"]]],[11,R[178],E,E,53,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[11,R[102],E,E,53,[[["self"],["i32"]],[R[108]]]],[11,"kernel",E,E,53,[[["self"],["i32"]],[R[34]]]],[11,R[179],E,E,53,[[["self"],["i32"]]]],[11,"source",E,E,55,[[["self"]],["arc"]]],[11,"target",E,E,55,[[["self"]],["arc"]]],[11,R[103],E,E,55,[[["self"]],["i32"]]],[11,R[178],E,E,55,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[11,R[102],E,E,55,[[["self"],["i32"]],[R[108]]]],[11,"kernel",E,E,55,[[["self"],["i32"]],[R[34]]]],[11,R[179],E,E,55,[[["self"],["i32"]]]],[11,"source",E,E,54,[[["self"]],["arc"]]],[11,"target",E,E,54,[[["self"]],["arc"]]],[11,R[103],E,E,54,[[["self"]],["i32"]]],[11,R[9],E,E,54,[[["self"]],["i32"]]],[11,R[178],E,E,54,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[11,R[179],E,E,54,[[["self"],["i32"]]]],[11,R[102],E,E,54,[[["self"],["i32"]],[R[108]]]],[11,"kernel",E,E,54,[[["self"],["i32"]],[R[34]]]],[11,"source",E,E,58,[[["self"]],["arc"]]],[11,"target",E,E,58,[[["self"]],["arc"]]],[11,R[103],E,E,58,[[["self"]],["i32"]]],[11,R[178],E,E,58,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[11,"kernel",E,E,58,[[["self"],["i32"]],[R[34]]]],[11,R[102],E,E,58,[[["self"],["i32"]],[R[108]]]],[11,R[179],E,E,58,[[["self"],["i32"]]]],[11,"source",E,E,59,[[["self"]],["arc"]]],[11,"target",E,E,59,[[["self"]],["arc"]]],[11,R[103],E,E,59,[[["self"]],["i32"]]],[11,R[178],E,E,59,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[11,"kernel",E,E,59,[[["self"],["i32"]],[R[34]]]],[11,R[102],E,E,59,[[["self"],["i32"]],[R[108]]]],[11,R[179],E,E,59,[[["self"],["i32"]]]],[11,"source",E,E,60,[[["self"]],["arc"]]],[11,"target",E,E,60,[[["self"]],["arc"]]],[11,R[103],E,E,60,[[["self"]],["i32"]]],[11,R[178],E,E,60,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[11,"kernel",E,E,60,[[["self"],["i32"]],[R[34]]]],[11,R[102],E,E,60,[[["self"],["i32"]],[R[108]]]],[11,R[179],E,E,60,[[["self"],["i32"]]]],[11,"source",E,E,61,[[["self"]],["arc"]]],[11,"target",E,E,61,[[["self"]],["arc"]]],[11,R[103],E,E,61,[[["self"]],["i32"]]],[11,R[178],E,E,61,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[11,"kernel",E,E,61,[[["self"],["i32"]],[R[34]]]],[11,R[102],E,E,61,[[["self"],["i32"]],[R[108]]]],[11,R[179],E,E,61,[[["self"],["i32"]]]],[11,"source",E,E,57,[[["self"]],["arc"]]],[11,"target",E,E,57,[[["self"]],["arc"]]],[11,R[103],E,E,57,[[["self"]],["i32"]]],[11,R[178],E,E,57,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[11,R[102],E,E,57,[[["self"],["i32"]],[R[108]]]],[11,"kernel",E,E,57,[[["self"],["i32"]],[R[34]]]],[11,R[179],E,E,57,[[["self"],["i32"]]]],[11,"source",E,E,56,[[["self"]],["arc"]]],[11,"target",E,E,56,[[["self"]],["arc"]]],[11,R[103],E,E,56,[[["self"]],["i32"]]],[11,R[178],E,E,56,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[11,R[102],E,E,56,[[["self"],["i32"]],[R[108]]]],[11,"kernel",E,E,56,[[["self"],["i32"]],[R[34]]]],[11,R[179],E,E,56,[[["self"],["i32"]]]],[11,"source",R[147],E,75,[[["self"]],["arc"]]],[11,"target",E,E,75,[[["self"]],["arc"]]],[11,R[103],E,E,75,[[["self"]],["i32"]]],[11,R[178],E,"At the moment, this is off by a sign. However, we only use…",75,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[11,"kernel",E,E,75,[[["self"],["i32"]],[R[34]]]],[11,R[102],E,E,75,[[["self"],["i32"]],[R[108]]]],[11,R[179],E,E,75,[[["self"],["i32"]]]],[11,R[180],E,E,75,[[["self"],["i32"],[R[28]],[R[28]]]]],[11,R[181],R[105],E,55,[[["arc"],["i32"],["arc"]],["self"]]],[11,R[181],E,E,57,[[["arc"],["i32"],["arc"]],["self"]]],[11,R[181],E,E,56,[[["arc",[R[157]]],[R[157]],["i32"],["arc"]],["self"]]],[11,R[16],R[69],E,39,[[["self"]],["i32"]]],[11,R[16],E,E,42,[[["self"]],["i32"]]],[11,R[16],E,E,43,[[["self"]],["i32"]]],[11,R[16],E,E,46,[[["self"]],["i32"]]],[11,R[16],E,E,47,[[["self"]],["i32"]]],[11,R[16],E,E,50,[[["self"]],["i32"]]],[11,R[134],E,E,39,[[["arc",[R[51]]],[R[51]],["i32"]],["self"]]],[11,R[134],E,E,41,[[["arc",[R[51]]],[R[51]],["i32"]],["self"]]],[11,R[134],E,E,46,[[["arc",[R[51]]],[R[51]],["i32"]],["self"]]],[11,R[134],E,E,47,[[["arc",[R[51]]],[R[51]],["i32"]],["self"]]],[11,R[134],E,E,50,[[["arc",[R[51]]],[R[51]],["i32"]],["self"]]],[11,R[62],R[140],E,70,[[["self"]],[["arc",[R[51]]],[R[51]]]]],[11,R[9],E,E,70,[[["self"]],["i32"]]],[11,R[134],E,E,70,[[["self"]],["arc"]]],[11,R[83],E,E,70,[[["self"],["u32"]],["arc"]]],[11,R[149],E,E,70,[[["self"],["u32"]],["arc"]]],[11,R[150],E,E,70,[[["self"],["u32"],["i32"]]]],[11,R[182],E,E,70,[[["self"],["u32"],["vec",["usize"]],["i32"],["usize"]]]],[11,R[183],E,E,70,[[["self"],["u32"],["i32"]],["vec"]]],[11,R[184],E,E,70,[[["self"],["u32"]],["i32"]]],[11,R[62],E,E,71,[[["self"]],[["arc",[R[51]]],[R[51]]]]],[11,R[9],E,E,71,[[["self"]],["i32"]]],[11,R[134],E,E,71,[[["self"]],["arc"]]],[11,R[83],E,E,71,[[["self"],["u32"]],["arc"]]],[11,R[149],E,E,71,[[["self"],["u32"]],["arc"]]],[11,R[150],E,E,71,[[["self"],["u32"],["i32"]]]],[11,R[182],E,E,71,[[["self"],["u32"],["vec",["usize"]],["i32"],["usize"]]]],[11,R[183],E,E,71,[[["self"],["u32"],["i32"]],["vec"]]],[11,R[184],E,E,71,[[["self"],["u32"]],["i32"]]],[11,R[62],E,E,72,[[["self"]],[["arc",[R[51]]],[R[51]]]]],[11,R[9],E,E,72,[[["self"]],["i32"]]],[11,R[134],E,E,72,[[["self"]],["arc"]]],[11,R[83],E,E,72,[[["self"],["u32"]],["arc"]]],[11,R[149],E,E,72,[[["self"],["u32"]],["arc"]]],[11,R[150],E,E,72,[[["self"],["u32"],["i32"]]]],[11,R[182],E,E,72,[[["self"],["u32"],["vec",["usize"]],["i32"],["usize"]]]],[11,R[183],E,E,72,[[["self"],["u32"],["i32"]],["vec"]]],[11,R[184],E,E,72,[[["self"],["u32"]],["i32"]]],[11,R[62],R[174],E,80,[[["self"]],[["arc",[R[51]]],[R[51]]]]],[11,R[83],E,E,80,[[["self"],["u32"]],["arc"]]],[11,R[134],E,E,80,[[["self"]],["arc"]]],[11,R[9],E,E,80,[[["self"]],["i32"]]],[11,R[182],E,E,80,[[["self"],["u32"],["vec",["usize"]],["i32"],["usize"]]]],[11,R[183],E,E,80,[[["self"],["u32"],["i32"]],["vec"]]],[11,R[185],E,E,80,[[["self"],["u32"],["i32"]],["usize"]]],[11,R[184],E,E,80,[[["self"],["u32"]],["i32"]]],[11,R[149],E,E,80,[[["self"],["u32"]],["arc"]]],[11,R[150],E,E,80,[[["self"],["u32"],["i32"]]]],[11,R[62],R[140],E,69,[[["self"]],[["arc",[R[51]]],[R[51]]]]],[11,R[9],E,E,69,[[["self"]],["i32"]]],[11,R[134],E,E,69,[[["self"]],[["arc",[R[116]]],[R[116]]]]],[11,R[83],E,E,69,[[["self"],["u32"]],[["arc",[R[116]]],[R[116]]]]],[11,R[149],E,E,69,[[["self"],["u32"]],[[R[186]],["arc",[R[186]]]]]],[11,R[187],E,E,69,[[["self"],["u32"],["vec",["usize"]],["i32"],["usize"]]]],[11,R[139],E,E,69,[[["self"],["u32"],["i32"]],["vec"]]],[11,R[188],E,E,69,[[["self"],["u32"]],["i32"]]],[11,R[150],E,E,69,[[["self"],["u32"],["i32"]]]],[11,"target",E,E,71,[[["self"]],["arc"]]],[11,R[189],E,"This currently crashes if `s` is greater than the s degree…",71,[[["self"],["u32"]],["arc"]]],[11,"target",E,E,72,[[["self"]],["arc"]]],[11,R[189],E,E,72,[[["self"],["u32"]],["arc"]]],[11,"target",R[174],E,80,[[["self"]],["arc"]]],[11,R[189],E,E,80,[[["self"],["u32"]],["arc"]]],[11,"max_s",R[140],E,70,[[["self"]],["u32"]]],[11,"max_s",E,E,71,[[["self"]],["u32"]]],[11,R[190],R[159],E,11,[[["self"],["usize"]]]],[11,R[20],E,E,11,[[["self"]],[R[27]]]],[11,R[191],E,E,11,[[["self"]],[R[27]]]],[11,"prime",E,E,11,[[["self"]],["u32"]]],[11,R[21],E,E,11,[[["self"]],["usize"]]],[11,"offset",E,E,11,[[["self"]],["usize"]]],[11,R[192],E,E,11,[[["self"]],["usize"]]],[11,"slice",E,E,11,[[["self"]]]],[11,R[30],E,E,11,[[["self"],["usize"]]]],[11,R[193],E,E,11,[[["self"]]]],[11,R[31],E,E,11,[[["self"]]]],[11,R[32],E,E,11,[[["self"]]]],[11,"min_limb",E,E,11,[[["self"]],["usize"]]],[11,"max_limb",E,E,11,[[["self"]],["usize"]]],[11,"limbs",E,E,11,[[["self"]],["vec"]]],[11,R[194],E,E,11,[[["self"]],["vec"]]],[11,R[195],E,E,11,[[["self"],["usize"]],["u64"]]],[11,R[35],E,E,11,[[["self"]]]],[11,R[196],E,E,11,[[["self"],[R[28]]]]],[11,"assign",E,E,11,[[["self"],[R[28]]]]],[11,R[197],E,E,11,[[["self"]],["bool"]]],[11,"is_zero",E,E,11,[[["self"]],["bool"]]],[11,"entry",E,E,11,[[["self"],["usize"]],["u32"]]],[11,R[198],E,E,11,[[["self"],["u32"],["usize"]]]],[11,R[199],E,E,11,[[["self"],["u32"],["usize"]]]],[11,"unpack",E,E,11,[[["self"]]]],[11,R[200],E,E,11,[[["self"]],[["u32"],["vec",["u32"]]]]],[11,"pack",E,E,11,[[["self"]]]],[11,R[201],E,E,11,[[["self"],["u32"],["usize"],[R[28]]]]],[11,"add",E,E,11,[[["self"],["u32"],[R[28]]]]],[11,R[202],E,E,11,[[["self"],["u32"],[R[28]]]]],[11,R[203],E,E,11,[[["self"],["u32"],[R[28]]]]],[11,R[204],E,E,11,[[["self"],["u32"],[R[28]]]]],[11,"scale",E,E,11,[[["self"],["u32"]]]],[11,R[190],E,E,5,[[["self"],["usize"]]]],[11,"prime",E,E,5,[[["self"]],["u32"]]],[11,R[20],E,E,5,[[["self"]],[R[27]]]],[11,R[191],E,E,5,[[["self"]],[R[27]]]],[11,R[190],E,E,6,[[["self"],["usize"]]]],[11,"prime",E,E,6,[[["self"]],["u32"]]],[11,R[20],E,E,6,[[["self"]],[R[27]]]],[11,R[191],E,E,6,[[["self"]],[R[27]]]],[11,R[190],E,E,7,[[["self"],["usize"]]]],[11,"prime",E,E,7,[[["self"]],["u32"]]],[11,R[20],E,E,7,[[["self"]],[R[27]]]],[11,R[191],E,E,7,[[["self"]],[R[27]]]],[11,R[190],E,E,8,[[["self"],["usize"]]]],[11,"prime",E,E,8,[[["self"]],["u32"]]],[11,R[20],E,E,8,[[["self"]],[R[27]]]],[11,R[191],E,E,8,[[["self"]],[R[27]]]],[11,R[205],R[165],E,24,[[["self"]],["str"]]],[11,"prime",E,E,24,[[["self"]],["u32"]]],[11,"name",E,E,24,[[["self"]],["str"]]],[11,R[206],E,E,24,[[["self"]],["vec"]]],[11,R[61],E,E,24,[[["self"],["i32"]]]],[11,R[21],E,E,24,[[["self"],["i32"]],["usize"]]],[11,R[207],E,E,24,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[11,R[208],E,E,24,[[["self"],["value"]]]],[11,R[209],E,E,24,[[["self"],["usize"],["i32"]],["value"]]],[11,R[130],E,E,24,[[["self"],["usize"],["i32"]],[R[18]]]],[11,R[63],E,E,24,[[["self"],["i32"]],[["vec",["usize"]],["usize"]]]],[11,R[210],E,E,24,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[211],E,"We return Adem relations $b^2 = 0$, $P^i P^j = \\cdots$ for…",24,[[["self"],["i32"]],[["vec",["vec"]],["vec"]]]],[11,R[205],R[166],E,28,[[["self"]],["str"]]],[11,"prime",E,E,28,[[["self"]],["u32"]]],[11,"name",E,E,28,[[["self"]],["str"]]],[11,R[206],E,E,28,[[["self"]],["vec"]]],[11,R[61],E,E,28,[[["self"],["i32"]]]],[11,R[21],E,E,28,[[["self"],["i32"]],["usize"]]],[11,R[207],E,E,28,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[11,R[208],E,E,28,[[["self"],["value"]]]],[11,R[209],E,E,28,[[["self"],["usize"],["i32"]],["value"]]],[11,R[130],E,E,28,[[["self"],["usize"],["i32"]],[R[18]]]],[11,R[63],E,"We pick our generators to be Q_0 and all the P(...). This…",28,[[["self"],["i32"]],[["vec",["usize"]],["usize"]]]],[11,R[210],E,E,28,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[211],E,E,28,[[["self"],["i32"]],[["vec",["vec"]],["vec"]]]],[11,R[205],R[168],E,30,[[["self"]],["str"]]],[11,"prime",E,R[212],30,[[["self"]],["u32"]]],[11,"name",E,E,30,[[["self"]],["str"]]],[11,R[61],E,E,30,[[["self"],["i32"]]]],[11,R[21],E,R[213],30,[[["self"],["i32"]],["usize"]]],[11,R[207],E,E,30,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[11,R[206],E,E,30,[[["self"]],["vec"]]],[11,R[208],E,R[214],30,[[["self"],["value"]]]],[11,R[209],E,E,30,[[["self"],["usize"],["i32"]],["value"]]],[11,R[130],E,R[215],30,[[["self"],["usize"],["i32"]],[R[18]]]],[11,R[131],E,E,30,[[["self"],[R[28]],["i32"]],[R[18]]]],[11,R[63],E,E,30,[[["self"],["i32"]],[["vec",["usize"]],["usize"]]]],[11,R[210],E,E,30,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[211],E,E,30,[[["self"],["i32"]],[["vec",["vec"]],["vec"]]]],[11,R[205],R[40],E,21,[[["self"]],["str"]]],[11,"prime",E,E,21,[[["self"]],["u32"]]],[11,"name",E,E,21,[[["self"]],["str"]]],[11,R[61],E,E,21,[[["self"],["i32"]]]],[11,R[21],E,E,21,[[["self"],["i32"]],["usize"]]],[11,R[207],E,E,21,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[11,R[216],E,E,21,[[["self"],["u32"],["usize"],["i32"],[R[28]],[R[28]]]]],[11,R[217],E,E,21,[[["self"],["u32"],["usize"],["i32"],[R[28]],[R[28]]]]],[11,R[218],E,E,21,[[["self"],["u32"],["i32"],[R[28]],[R[28]]]]],[11,R[206],E,E,21,[[["self"]],["vec"]]],[11,R[208],E,E,21,[[["self"],["value"]]]],[11,R[209],E,E,21,[[["self"],["usize"],["i32"]],["value"]]],[11,R[130],E,E,21,[[["self"],["usize"],["i32"]],[R[18]]]],[11,R[131],E,E,21,[[["self"],[R[28]],["i32"]],[R[18]]]],[11,R[63],E,E,21,[[["self"],["i32"]],[["vec",["usize"]],["usize"]]]],[11,R[210],E,E,21,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[211],E,E,21,[[["self"],["i32"]],[["vec",["vec"]],["vec"]]]],[11,"name",R[69],E,39,[[["self"]],["str"]]],[11,R[62],E,E,39,[[["self"]],[["arc",[R[51]]],[R[51]]]]],[11,R[9],E,E,39,[[["self"]],["i32"]]],[11,R[61],E,E,39,[[["self"],["i32"]]]],[11,R[21],E,E,39,[[["self"],["i32"]],["usize"]]],[11,R[130],E,E,39,[[["self"],["usize"],["i32"]],[R[18]]]],[11,"is_unit",E,E,39,[[["self"]],["bool"]]],[11,R[219],E,E,39,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[11,R[220],E,E,39,[[["self"]],["bool"]]],[11,R[221],E,E,39,[[["self"],["usize"],["i32"]],[R[28]]]],[11,R[62],E,E,41,[[["self"]],[["arc",[R[51]]],[R[51]]]]],[11,R[9],E,E,41,[[["self"]],["i32"]]],[11,"name",E,E,41,[[["self"]],["str"]]],[11,R[61],E,E,41,[[["self"],["i32"]]]],[11,R[21],E,E,41,[[["self"],["i32"]],["usize"]]],[11,R[219],E,E,41,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[11,R[130],E,E,41,[[["self"],["usize"],["i32"]],[R[18]]]],[11,R[62],E,E,42,[[["self"]],[["arc",[R[51]]],[R[51]]]]],[11,"name",E,E,42,[[["self"]],["str"]]],[11,R[9],E,E,42,[[["self"]],["i32"]]],[11,R[61],E,E,42,[[["self"],["i32"]]]],[11,R[21],E,E,42,[[["self"],["i32"]],["usize"]]],[11,R[219],E,E,42,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[11,R[130],E,E,42,[[["self"],["usize"],["i32"]],[R[18]]]],[11,R[62],E,E,43,[[["self"]],[["arc",[R[51]]],[R[51]]]]],[11,"name",E,E,43,[[["self"]],["str"]]],[11,R[9],E,E,43,[[["self"]],["i32"]]],[11,R[61],E,E,43,[[["self"],["i32"]]]],[11,R[21],E,E,43,[[["self"],["i32"]],["usize"]]],[11,R[219],E,E,43,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[11,R[130],E,E,43,[[["self"],["usize"],["i32"]],[R[18]]]],[11,"name",E,E,44,[[["self"]],["str"]]],[11,R[62],E,E,44,[[["self"]],[["arc",[R[51]]],[R[51]]]]],[11,R[9],E,E,44,[[["self"]],["i32"]]],[11,R[21],E,E,44,[[["self"],["i32"]],["usize"]]],[11,R[130],E,E,44,[[["self"],["usize"],["i32"]],[R[18]]]],[11,R[219],E,E,44,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[11,R[62],E,E,40,[[["self"]],[["arc",[R[51]]],[R[51]]]]],[11,"name",E,E,40,[[["self"]],["str"]]],[11,R[9],E,E,40,[[["self"]],["i32"]]],[11,R[61],E,E,40,[[["self"],["i32"]]]],[11,R[21],E,E,40,[[["self"],["i32"]],["usize"]]],[11,R[219],E,E,40,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[11,R[130],E,E,40,[[["self"],["usize"],["i32"]],[R[18]]]],[11,R[62],E,E,46,[[["self"]],[["arc",[R[51]]],[R[51]]]]],[11,"name",E,E,46,[[["self"]],["str"]]],[11,R[9],E,E,46,[[["self"]],["i32"]]],[11,R[61],E,E,46,[[["self"],["i32"]]]],[11,R[21],E,E,46,[[["self"],["i32"]],["usize"]]],[11,R[219],E,E,46,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[11,"act",E,E,46,[[["self"],["u32"],["usize"],["i32"],[R[28]],[R[28]]]]],[11,R[130],E,E,46,[[["self"],["usize"],["i32"]],[R[18]]]],[11,R[62],E,E,47,[[["self"]],[["arc",[R[51]]],[R[51]]]]],[11,"name",E,E,47,[[["self"]],["str"]]],[11,R[9],E,E,47,[[["self"]],["i32"]]],[11,R[61],E,E,47,[[["self"],["i32"]]]],[11,R[21],E,E,47,[[["self"],["i32"]],["usize"]]],[11,R[219],E,E,47,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[11,R[130],E,E,47,[[["self"],["usize"],["i32"]],[R[18]]]],[11,R[62],E,E,50,[[["self"]],[["arc",[R[51]]],[R[51]]]]],[11,"name",E,E,50,[[["self"]],["str"]]],[11,R[9],E,E,50,[[["self"]],["i32"]]],[11,R[61],E,E,50,[[["self"],["i32"]]]],[11,R[21],E,E,50,[[["self"],["i32"]],["usize"]]],[11,R[219],E,E,50,[[["self"],["u32"],["usize"],["i32"],[R[28]]]]],[11,R[130],E,E,50,[[["self"],["usize"],["i32"]],[R[18]]]],[11,"is_unit",E,E,50,[[["self"]],["bool"]]],[11,"prime",E,E,50,[[["self"]],["u32"]]],[11,R[220],E,E,50,[[["self"]],["bool"]]],[11,R[221],E,E,50,[[["self"],["usize"],["i32"]],[R[28]]]],[11,"act",E,E,50,[[["self"],["u32"],["usize"],["i32"],[R[28]],[R[28]]]]],[11,R[222],E,E,50,[[["self"],["u32"],["i32"],[R[28]],[R[28]]]]],[11,R[223],E,E,50,[[["self"],["i32"]],[R[18]]]],[11,R[131],E,E,50,[[["self"],[R[28]],["i32"]],[R[18]]]],[11,"default",R[166],E,26,[[],["qpart"]]],[11,R[224],R[163],E,13,[[["self"]]]],[11,R[224],R[69],E,50,[[["self"]]]],[11,"clone",R[159],E,3,[[["self"]],[R[225]]]],[11,"clone",E,E,11,[[["self"]],[R[28]]]],[11,"clone",E,E,4,[[["self"]],[R[27]]]],[11,"clone",E,E,5,[[["self"]],[R[227]]]],[11,"clone",E,E,6,[[["self"]],[R[228]]]],[11,"clone",E,E,7,[[["self"]],[R[229]]]],[11,"clone",E,E,8,[[["self"]],[R[230]]]],[11,"clone",R[163],E,13,[[["self"]],[R[74]]]],[11,"clone",E,E,14,[[["self"]],[R[34]]]],[11,"clone",R[165],E,23,[[["self"]],[R[37]]]],[11,"clone",R[166],E,26,[[["self"]],["qpart"]]],[11,"clone",E,E,27,[[["self"]],[R[47]]]],[11,"clone",R[169],E,34,[[["self"]],[R[226]]]],[11,"clone",E,E,35,[[["self"]],[R[55]]]],[11,"clone",E,E,36,[[["self"]],[R[56]]]],[11,"clone",R[174],E,81,[[["self"]],["cocycle"]]],[11,"eq",R[159],E,11,[[["self"]],["bool"]]],[11,"eq",R[163],E,13,[[["self"],[R[74]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[74]]],["bool"]]],[11,"eq",R[165],E,23,[[["self"]],["bool"]]],[11,"eq",R[166],E,27,[[["self"]],["bool"]]],[11,"eq",R[69],E,39,[[["self"]],["bool"]]],[11,"eq",E,E,41,[[["self"]],["bool"]]],[11,"eq",E,E,50,[[["self"],[R[157]]],["bool"]]],[11,"ne",E,E,50,[[["self"],[R[157]]],["bool"]]],[11,"from",R[159],E,11,[[[R[227]]],[R[28]]]],[11,"from",E,E,11,[[[R[228]]],[R[28]]]],[11,"from",E,E,11,[[[R[229]]],[R[28]]]],[11,"from",E,E,11,[[[R[230]]],[R[28]]]],[11,"from",R[40],E,21,[[[R[52]]],[R[51]]]],[11,"from",E,E,21,[[[R[53]]],[R[51]]]],[11,"from",E,E,21,[[["field"]],[R[51]]]],[11,"from",R[105],E,56,[[[R[112],[R[157]]],[R[157]]],["self"]]],[11,"from",E,E,56,[[["fpmodulehomomorphism",[R[157]]],[R[157]]],["self"]]],[11,"from",R[69],E,50,[[[R[132]]],[R[157]]]],[11,"from",E,E,50,[[[R[231]]],[R[157]]]],[11,"from",R[140],E,70,[[[R[158]]],["finitechaincomplex"]]],[11,"next",R[159],E,9,[[["self"]],[R[59]]]],[11,"next",R[166],E,29,[[["self"]],[R[59]]]],[11,"deref",R[163],E,13,[[["self"]]]],[11,"deref",R[165],E,22,[[["self"]],["vec"]]],[11,R[12],R[163],E,13,[[["self"]]]],[11,"hash",R[165],E,23,[[["self"],["h"]]]],[11,"hash",R[166],E,27,[[["self"],["h"]]]],[11,"fmt",R[159],E,11,[[["self"],[R[13]]],[[R[0],["error"]],["error"]]]],[11,"fmt",R[163],E,13,[[["self"],[R[13]]],[[R[0],["error"]],["error"]]]],[11,"fmt",R[165],E,23,[[["self"],[R[13]]],[["error"],[R[0],["error"]]]]],[11,"fmt",R[166],E,27,[[["self"],[R[13]]],[["error"],[R[0],["error"]]]]],[11,"fmt",R[40],E,20,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",R[169],E,33,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",R[170],E,85,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,38,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",R[69],E,48,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,49,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",R[19],E,2,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",R[159],E,11,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,10,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",R[163],E,13,[[["self"],[R[13]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,14,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,15,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",R[164],E,16,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,17,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",R[165],E,23,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",R[166],E,27,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",R[40],E,18,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,19,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,20,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",R[169],E,34,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,35,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,36,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,33,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",R[170],E,85,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,38,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",R[172],E,52,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",R[69],E,48,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",E,E,49,[[["self"],[R[13]]],[R[0]]]],[11,"fmt",R[19],E,2,[[["self"],[R[13]]],[R[0]]]],[11,"index",R[163],E,13,[[["self"],["usize"]]]],[11,R[14],E,E,13,[[["self"],["usize"]]]],[11,R[232],R[40],E,20,[[["self"]],["str"]]],[11,R[232],R[169],E,33,[[["self"]],["str"]]],[11,R[232],R[170],E,85,[[["self"]],["str"]]],[11,R[232],E,E,38,[[["self"]],["str"]]],[11,R[232],R[69],E,48,[[["self"]],["str"]]],[11,R[232],E,E,49,[[["self"]],["str"]]],[11,R[232],R[19],E,2,[[["self"]],["str"]]],[11,R[233],R[159],E,11,[[["self"],["s"]],[R[0]]]],[11,R[234],E,E,11,[[["d"]],[R[0]]]],[11,R[234],R[40],E,18,[[["__d"]],[R[0]]]],[11,R[234],E,E,19,[[["__d"]],[R[0]]]],[11,"initialize",R[165],E,22,[[["self"]]]]],"p":[[3,"Config"],[3,R[235]],[3,R[236]],[3,R[237]],[3,R[238]],[3,R[22]],[3,R[23]],[3,R[24]],[3,R[25]],[3,R[239]],[3,R[240]],[4,"FpVector"],[8,R[241]],[3,"Matrix"],[3,"Subspace"],[3,R[242]],[3,R[243]],[3,R[244]],[3,R[245]],[3,R[246]],[3,R[247]],[4,R[248]],[3,R[39]],[3,R[249]],[3,R[36]],[3,R[250]],[3,"QPart"],[3,R[251]],[3,R[42]],[3,R[252]],[3,"Field"],[8,"Algebra"],[8,R[253]],[3,R[254]],[4,R[255]],[4,R[256]],[4,R[257]],[3,R[258]],[3,R[259]],[3,R[66]],[3,R[96]],[3,R[67]],[3,R[78]],[3,R[81]],[3,R[92]],[3,R[88]],[3,R[99]],[3,R[100]],[3,R[260]],[3,R[261]],[4,R[262]],[3,R[263]],[3,R[264]],[3,R[104]],[3,R[113]],[3,R[109]],[3,R[126]],[3,R[124]],[3,R[117]],[3,R[118]],[3,R[121]],[3,R[122]],[8,R[127]],[4,"FMHI"],[8,R[265]],[8,R[266]],[8,R[267]],[8,"Module"],[8,R[268]],[3,R[138]],[3,R[141]],[3,R[142]],[3,R[144]],[3,R[269]],[4,R[270]],[3,R[271]],[8,R[272]],[8,R[273]],[8,R[274]],[8,R[275]],[3,R[276]],[3,"Cocycle"],[3,"SelfMap"],[3,R[277]],[3,R[278]],[3,R[279]]]};
searchIndex["thread_token"]={"doc":E,"i":[[3,R[7],"thread_token","A `TokenBucket` is a bucket containing a fixed number of…",N,N],[12,"max_threads",E,E,0,N],[12,"running_threads",E,E,0,N],[12,"condvar",E,E,0,N],[3,"Token",E,"A `Token` is what `TokenBucket::take_token` returns. The…",N,N],[12,"bucket",E,E,1,N],[11,"new",E,"Constructs a new `TokenBucket` with a fixed number of…",0,[[["usize"]],["self"]]],[11,"take_token",E,"Attempts to take a token from the bucket. This will block…",0,[[["self"]],["token"]]],[11,"recv_or_release",E,"This function attempts to read a message from `receiver`…",0,[[["token"],["self"],[R[59]]],["token"]]],[11,"release_token",E,E,0,[[["self"]]]],[11,"release",E,"This function does not do anything. It simply takes…",1,[[]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[1],E,E,0,[[[U]],[R[0]]]],[11,R[2],E,E,0,[[],[R[0]]]],[11,R[3],E,E,0,[[["self"]],[T]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[R[6]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[1],E,E,1,[[[U]],[R[0]]]],[11,R[2],E,E,1,[[],[R[0]]]],[11,R[3],E,E,1,[[["self"]],[T]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[R[6]]]],[11,"drop",E,E,1,[[["self"]]]]],"p":[[3,R[7]],[3,"Token"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);