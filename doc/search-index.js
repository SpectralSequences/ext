var N=null,E="",T="t",U="u",searchIndex={};
var R=["display","This function attempts to read a message from `receiver`…","option","token","result","try_from","try_into","borrow_mut","borrow","type_id","TokenBucket","min_degree","from_vec","with_capacity","to_owned","clone_into","deref_mut","index_mut","formatter","OnceBiVec","typeid","matrices","subspace","fpvector","rwlock","sseqchoice","ext_websocket","permanent","product","max_degree","algebra_name","differentials","class_names","page_list","string","AddProductDifferential","AddProductType","AddPermanentClass","AddDifferential","SetClassName","BlockRefresh","AddProduct","AddClass","Resolving","Complete","Construct","ConstructJson","SetStructline","SetDifferential","SetClass","SetPageList","QueryTable","QueryTableResult","QueryCocycleString","QueryCocycleStringResult","message","sender","construct","resolution","process_message","ext_websocket::sseq","ext_websocket::actions","to_string","ext_websocket::managers","act_sseq","act_resolution","resolving","constructjson","resolve","recipient","addproductdifferential","addproducttype","action","addpermanentclass","adddifferential","setclassname","blockrefresh","addproduct","addclass","complete","setstructline","setdifferential","setclass","setpagelist","querytable","querytableresult","querycocyclestring","querycocyclestringresult","serialize","deserialize","Differential","ProductItem","ClassState","Resolve","Recipient","SseqChoice","ResolutionManager","SseqManager","algebraicobjectsbundle","rust_ext","vector_container","dimension","FpVector2","FpVector3","FpVector5","FpVectorGeneric","bit_length","vectorcontainer","set_to_zero","fpvectoriterator","set_slice","clear_slice","into_slice","row_reduce","AdemAlgebra","adembasiselement","BOCKSTEIN_TABLE","rust_ext::algebra","truncated","MilnorAlgebra","next_degree","basis_table","basis_element_to_index_map","basis_element_from_index","milnorbasiselement","try_basis_element_to_index","basis_element_to_index","generate_basis_generic","multiply","algebraany","milnoralgebra","ademalgebra","iresult","bocksteinorsq","algebraparsenode","moduleparsenode","adem_algebra","milnor_algebra","compute_basis","generators","algebra","gen_names","block_structures","RealProjectiveSpace","graded_dimension","rust_ext::module","This function will panic if you call it with input such…","from_json","relations","index_table","module_gens_from_json","gen_idx_to_fp_idx","fp_idx_to_gen_idx","TruncatedModule","A module M where we quotient out everything above degree…","truncation","QuotientModule","Given a module `module`, this is the quotient of `module`…","subspaces","basis_list","generator_degree","generator_index","FreeModuleTableEntry","basis_element_to_opgen","generator_to_index","FreeModule","gen_deg_idx_to_internal_idx","add_generators","freemoduletableentry","operationgeneratorpair","HomModule","freemodule","TensorModule","SumModule","This is $\\mathbb{RP}_{\\mathrm{min}}^{\\mathrm{max}}$. The…","clear_bottom","degree_shift","quasi_inverse","FreeModuleHomomorphism","rust_ext::module::homomorphism","extend_by_zero","mutexguard","quasiinverse","GenericZeroHomomorphism","BoundedModuleHomomorphism","quasi_inverses","boundedmodule","boundedmodulehomomorphism","HomPullback","Given a map `map`: A -> B and `source` = Hom(B, X),…","freemodulehomomorphism","hommodule","TruncatedHomomorphism","TruncatedHomomorphismSource","truncatedmodule","truncated_degree","QuotientHomomorphism","QuotientHomomorphismSource","quotientmodule","FPModuleHomomorphism","underlying_map","FiniteModuleHomomorphism","FPModuleT","get_matrix","total_dimension","basis_element_to_string","element_to_string","realprojectivespace","fdmodule","chain_complex","zero_module","chain_maps","target_cc","modules","source_cc","finitechaincomplex","rust_ext::chain_complex","FiniteChainComplex","FiniteAugmentedChainComplex","TensorChainComplex","right_cc","calculate_quasi_inverse","rust_ext::chain_complex::tensor_product_chain_complex","differential","Homomorphism","compute_through_bidegree","homology_gen_to_cocyle","unit_resolution","addstructlinefn","addclassfn","add_structline","max_computed_degree","add_product","resolutioninner","hashmap","finitemodulehomomorphism","finitemodule","finiteaugmentedchaincomplex","rust_ext::fp_vector","rust_ext::matrix","rust_ext::block_structure","rust_ext::algebra::adem_algebra","rust_ext::algebra::milnor_algebra","into_iter","rust_ext::algebra::field","rust_ext::steenrod_parser","rust_ext::steenrod_evaluator","rust_ext::module::finitely_presented_module","rust_ext::module::free_module","rust_ext::module::rpn","rust_ext::module::homomorphism::finite_module_homomorphism","rust_ext::chain_complex::hom_complex","rust_ext::resolution","rust_ext::resolution_homomorphism","decompose","coproduct","apply_to_basis_element","compute_kernels_and_quasi_inverses_through_degree","apply_quasi_inverse","At the moment, this is off by a sign. However, we only use…","zero_homomorphism","set_homology_basis","homology_basis","max_homology_degree","homology_dimension","chain_map","reduce_limbs","vector_container_mut","min_index","restore_slice","limbs_mut","limb_mask","set_to_zero_pure","shift_assign","is_zero_pure","set_entry","add_basis_element","to_vector","add_tensor","shift_add","shift_right_add","shift_left_add","algebra_type","default_filtration_one_products","multiply_basis_elements","json_to_basis","string_to_basis","json_from_basis","decompose_basis_element","relations_to_check","Gets the dimension of the algebra in degree `degree`.","Converts a JSON object into a basis element. The way basis…","Converts a basis element into a string for display.","multiply_basis_element_by_element","multiply_element_by_basis_element","multiply_element_by_element","act_on_basis","borrow_output","act_on_basis_borrow","act_by_element","generator_list_string","assert_receiver_is_total_eq","limbbitindexpair","algebrabasiselt","fpvector2","fpvector3","fpvector5","fpvectorgeneric","fpmodule","description","AlgebraicObjectsBundle","ModuleFileNotFoundError","LimbBitIndexPair","VectorContainer","FpVectorIterator","FpVectorMask","FpVectorT","QuasiInverse","GeneratorBasisEltPair","BlockStructure","BlockStart","MilnorProfileOption","AlgebraSpec","InvalidAlgebraError","AlgebraAny","AdemBasisElement","MilnorProfile","MilnorBasisElement","PPartMultiplier","Bialgebra","ParseError","AlgebraBasisElt","AlgebraParseNode","ModuleParseNode","BocksteinOrSq","SteenrodCalculator","UnknownBasisElementError","FDModule","FPModule","UnknownModuleTypeError","ModuleFailedRelationError","FiniteModule","FPMIndexTable","OperationGeneratorPair","ModuleHomomorphism","ZeroHomomorphism","BoundedModule","ZeroModule","ChainMap","ChainComplexGrading","HomChainComplex","HomChainMap","TensorChainMap","ChainComplex","CochainComplex","AugmentedChainComplex","BoundedChainComplex","ResolutionInner","Resolution","ResolutionHomomorphism","DegreeError"];
searchIndex["bivec"]={"doc":E,"i":[[3,"BiVec","bivec","A BiVec is like a Vec, except we allow indices to be…",N,N],[12,"data",E,E,0,N],[12,R[11],E,E,0,N],[11,"new",E,E,0,[[["i32"]],["self"]]],[11,R[12],E,E,0,[[["vec"],["i32"]],["self"]]],[11,R[13],E,E,0,[[["i32"]],["self"]]],[11,R[11],E,E,0,[[["self"]],["i32"]]],[11,R[29],E,"This returns the largest degree in the bivector. This is…",0,[[["self"]],["i32"]]],[11,"len",E,"This returns the \"length\" of the bivector, defined to be…",0,[[["self"]],["i32"]]],[11,"is_empty",E,E,0,[[["self"]],["bool"]]],[11,"push",E,E,0,[[["self"],[T]]]],[11,"get",E,E,0,[[["self"],["i32"]],[[T],[R[2]]]]],[11,"last",E,E,0,[[["self"]],[[T],[R[2]]]]],[11,"iter",E,E,0,[[["self"]],["iter"]]],[11,"iter_mut",E,E,0,[[["self"]],["itermut"]]],[11,"iter_enum",E,E,0,[[["self"]]]],[11,"extend_with",E,"Extends the bivec such that `max_degree()` is at least…",0,[[["self"],["f"],["i32"]]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[5],E,E,0,[[[U]],[R[4]]]],[11,R[6],E,E,0,[[],[R[4]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[R[20]]]],[11,R[301],E,E,0,[[["self"]]]],[11,"clone",E,E,0,[[["self"]],["bivec"]]],[11,"eq",E,E,0,[[["self"],["bivec"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["bivec"]],["bool"]]],[11,"index",E,E,0,[[["self"],["i32"]],[T]]],[11,R[17],E,E,0,[[["self"],["i32"]],[T]]],[11,"fmt",E,E,0,[[["self"],[R[18]]],[R[4]]]],[11,R[88],E,E,0,[[["self"],["s"]],[R[4]]]],[11,R[89],E,E,0,[[["d"]],[R[4]]]],[11,"save",E,E,0,[[["self"]],[R[4]]]],[11,"load",E,E,0,[[],[R[4]]]]],"p":[[3,"BiVec"]]};
searchIndex["compressor"]={"doc":E,"i":[[5,"ms_to_string","compressor",E,N,[[["i64"]],[R[34]]]],[5,"main",E,E,N,[[]]],[17,"NUM_THREAD",E,E,N,N]],"p":[]};
searchIndex["ext_websocket"]={"doc":E,"i":[[0,"sseq",R[26],E,N,N],[3,R[90],R[60],E,N,N],[12,"matrix",E,E,0,N],[12,"source_dim",E,E,0,N],[12,"target_dim",E,E,0,N],[12,"column_to_pivots_row",E,E,0,N],[12,"error",E,E,0,N],[3,"Product",E,"Fields * `matrices[x][y]` : This encodes the matrix of the…",N,N],[12,"name",E,E,1,N],[12,"x",E,E,1,N],[12,"y",E,E,1,N],[12,"left",E,E,1,N],[12,"user",E,E,1,N],[12,R[27],E,E,1,N],[12,R[223],E,E,1,N],[12,R[21],E,E,1,N],[3,R[91],E,E,N,N],[12,"name",E,E,2,N],[12,"mult_x",E,E,2,N],[12,"mult_y",E,E,2,N],[12,R[21],E,E,2,N],[3,"Sseq",E,"Here are some blanket assumptions we make about the order…",N,N],[12,"p",E,E,3,N],[12,"name",E,E,3,N],[12,"min_x",E,E,3,N],[12,"min_y",E,E,3,N],[12,"block_refresh",E,E,3,N],[12,R[56],E,E,3,N],[12,R[33],E,E,3,N],[12,"product_name_to_index",E,E,3,N],[12,"products",E,E,3,N],[12,"classes",E,E,3,N],[12,R[32],E,E,3,N],[12,R[31],E,E,3,N],[12,"permanent_classes",E,E,3,N],[12,"zeros",E,E,3,N],[12,"page_classes",E,E,3,N],[4,R[92],E,E,N,N],[13,"Error",E,E,4,N],[13,"Done",E,E,4,N],[13,"InProgress",E,E,4,N],[5,"sseq_profile",E,E,N,[[["i32"]]]],[5,"sseq_profile_i",E,E,N,[[["i32"]]]],[5,"express_basis",E,"Given a vector `elt`, a subspace `zeros` of the total…",N,[[[R[22]],[R[23]],[R[2],[R[22]]]],[["u32"],["vec",["u32"]]]]],[17,"MIN_PAGE",E,E,N,N],[17,"INFINITY",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_ClassState",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_ClassState",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_ProductItem",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_ProductItem",E,E,N,N],[11,"new",E,E,0,[[["u32"],["usize"]],["self"]]],[11,R[108],E,E,0,[[["self"]]]],[11,"add",E,E,0,[[["self"],[R[23]],[R[2],[R[23]]]]]],[11,"get_source_target_pairs",E,E,0,[[["self"]],["vec"]]],[11,"reduce_target",E,"Given a subspace of the target space, project the target…",0,[[["self"],[R[22]]]]],[11,"evaluate",E,"This evaluates the differential on `source`, adding the…",0,[[["self"],[R[23]],[R[23]]]]],[11,"prime",E,E,0,[[["self"]],["u32"]]],[11,"new",E,E,3,[[["u32"],[R[56]],["i32"],[R[25]],[R[2],[R[56]]]],["self"]]],[11,"clear",E,"This clears out all the user actions. This is intended to…",3,[[["self"]]]],[11,"refresh_all",E,E,3,[[["self"]]]],[11,"add_page",E,"Adds a page to the page list, which is the list of pages…",3,[[["self"],["i32"]]]],[11,"allocate_differential_matrix",E,"Initializes `differentials[x][y][r]`. It sets the…",3,[[["self"],["i32"]]]],[11,"allocate_zeros_subspace",E,E,3,[[["self"],["bivec"],["i32"]]]],[11,R[128],E,"Given a class `class` at `(x, y)` and a Product object…",3,[[["self"],[R[28]],[R[23]],["i32"]],[R[2]]]],[11,"leibniz",E,"Apply the Leibniz rule to obtain new differentials. The…",3,[[["self"],[R[2],[R[23]]],[R[23]],["i32"],[R[23]],["usize"]],[R[2]]]],[11,"compute_edges_inner",E,E,3,[[[R[24],["vec"]],["u32"],[R[56]],["i32"],["arc",[R[24]]],["arc",[R[24]]],["arc",[R[24]]],[R[24],["bivec"]],[R[24],["bivec"]],[R[25]]]]],[11,"compute_edges",E,"Computes products whose source is at (x, y).",3,[[["self"],["i32"]]]],[11,"compute_next_page_no_d",E,"Compute the classes in next page assuming there is no…",3,[[["u32"],[R[22]]]]],[11,"compute_next_page_with_d",E,"Compute the classes in next page assuming there might be a…",3,[[["self"],["i32"]]]],[11,"compute_classes",E,"Arguments * `refresh_edge` - Whether to automatically call…",3,[[["self"],["bool"],["i32"]]]],[11,"send_class_data",E,E,3,[[["self"],["i32"]]]],[11,"send",E,E,3,[[["self"],[R[55]]]]],[11,"product_defined",E,E,3,[[["self"],[R[28]],["i32"]],["bool"]]],[11,"class_defined",E,E,3,[[["self"],["i32"]],["bool"]]],[11,"get_page",E,E,3,[[["bivec"],["i32"]],[T]]],[11,"get_differentials_hitting",E,"Get a list of r for which there is a d_r differential…",3,[[["self"],["i32"]],[["vec",["i32"]],["i32"]]]],[11,"set_class",E,"This function should only be called when everything to the…",3,[[["self"],["usize"],["i32"]]]],[11,"set_class_name",E,E,3,[[["self"],["usize"],["i32"],[R[34]]]]],[11,"add_differential",E,"Add a differential starting at (x, y). This mutates the…",3,[[["self"],[R[23]],["i32"],[R[23]]]]],[11,"add_differential_propagate",E,"This function recursively propagates differentials. If…",3,[[["self"],[R[23]],["i32"],[R[2]],["usize"]]]],[11,"add_permanent_class",E,E,3,[[["self"],[R[23]],["i32"]]]],[11,"add_product_type",E,"Add a product to the list of products, but don't add any…",3,[[["self"],["i32"],["str"],["bool"]]]],[11,"add_product_differential",E,E,3,[[["self"],[R[34]]]]],[11,"repropagate_product",E,E,3,[[["self"],["usize"]]]],[11,R[232],E,E,3,[[["self"],["i32"],[R[34]],["bool"]]]],[0,"actions",R[26],E,N,N],[3,"Message",R[61],E,N,N],[12,"recipients",E,E,5,N],[12,"sseq",E,E,5,N],[12,R[72],E,E,5,N],[3,R[38],E,E,N,N],[12,"x",E,E,6,N],[12,"y",E,E,6,N],[12,"r",E,E,6,N],[12,"source",E,E,6,N],[12,"target",E,E,6,N],[3,R[36],E,E,N,N],[12,"x",E,E,7,N],[12,"y",E,E,7,N],[12,"class",E,E,7,N],[12,"name",E,E,7,N],[12,R[27],E,E,7,N],[3,R[37],E,E,N,N],[12,"x",E,E,8,N],[12,"y",E,E,8,N],[12,"class",E,E,8,N],[3,R[39],E,E,N,N],[12,"x",E,E,9,N],[12,"y",E,E,9,N],[12,"idx",E,E,9,N],[12,"name",E,E,9,N],[3,"Clear",E,E,N,N],[3,R[40],E,"This blocks the sseq object from recomputing classes and…",N,N],[12,"block",E,E,10,N],[3,R[42],E,E,N,N],[12,"x",E,E,11,N],[12,"y",E,E,11,N],[12,"num",E,E,11,N],[3,R[41],E,E,N,N],[12,"mult_x",E,E,12,N],[12,"mult_y",E,E,12,N],[12,"source_x",E,E,12,N],[12,"source_y",E,E,12,N],[12,"name",E,E,12,N],[12,R[28],E,E,12,N],[12,"left",E,E,12,N],[3,R[35],E,E,N,N],[12,"source",E,E,13,N],[12,"target",E,E,13,N],[3,R[43],E,E,N,N],[12,"p",E,E,14,N],[12,R[11],E,E,14,N],[12,R[29],E,E,14,N],[12,"is_unit",E,E,14,N],[3,R[44],E,E,N,N],[3,R[45],E,E,N,N],[12,"module_name",E,E,15,N],[12,R[30],E,E,15,N],[3,R[46],E,E,N,N],[12,"data",E,E,16,N],[12,R[30],E,E,16,N],[3,R[93],E,E,N,N],[12,R[29],E,E,17,N],[3,R[47],E,E,N,N],[12,"x",E,E,18,N],[12,"y",E,E,18,N],[12,"structlines",E,E,18,N],[3,R[48],E,E,N,N],[12,"x",E,E,19,N],[12,"y",E,E,19,N],[12,"true_differentials",E,E,19,N],[12,R[31],E,E,19,N],[3,R[49],E,E,N,N],[12,"x",E,E,20,N],[12,"y",E,E,20,N],[12,"state",E,E,20,N],[12,"permanents",E,E,20,N],[12,"classes",E,E,20,N],[12,"decompositions",E,E,20,N],[12,R[32],E,E,20,N],[3,R[50],E,E,N,N],[12,R[33],E,E,21,N],[3,R[51],E,E,N,N],[12,"s",E,E,22,N],[12,T,E,E,22,N],[3,R[52],E,E,N,N],[12,"s",E,E,23,N],[12,T,E,E,23,N],[12,R[34],E,E,23,N],[3,R[53],E,E,N,N],[12,"s",E,E,24,N],[12,T,E,E,24,N],[12,"idx",E,E,24,N],[3,R[54],E,E,N,N],[12,"s",E,E,25,N],[12,T,E,E,25,N],[12,"idx",E,E,25,N],[12,R[34],E,E,25,N],[4,R[94],E,E,N,N],[13,"Sseq",E,E,26,N],[13,"Resolver",E,E,26,N],[4,R[95],E,E,N,N],[13,"Main",E,E,27,N],[13,"Unit",E,E,27,N],[4,"Action",E,"This is just a list of everything that implements…",N,N],[13,R[35],E,E,28,N],[13,R[36],E,E,28,N],[13,R[37],E,E,28,N],[13,R[38],E,E,28,N],[13,R[39],E,E,28,N],[13,"Clear",E,E,28,N],[13,R[40],E,E,28,N],[13,R[41],E,E,28,N],[13,R[42],E,E,28,N],[13,R[43],E,E,28,N],[13,R[44],E,E,28,N],[13,R[45],E,E,28,N],[13,R[46],E,E,28,N],[13,R[93],E,E,28,N],[13,R[47],E,E,28,N],[13,R[48],E,E,28,N],[13,R[49],E,E,28,N],[13,R[50],E,E,28,N],[13,R[51],E,E,28,N],[13,R[52],E,E,28,N],[13,R[53],E,E,28,N],[13,R[54],E,E,28,N],[17,"_IMPL_SERIALIZE_FOR_Message",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Message",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Recipient",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Recipient",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_SseqChoice",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_SseqChoice",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Action",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Action",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_AddDifferential",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_AddDifferential",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_AddProductType",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_AddProductType",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_AddPermanentClass",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_AddPermanentClass",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_SetClassName",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_SetClassName",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Clear",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Clear",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_BlockRefresh",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_BlockRefresh",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_AddClass",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_AddClass",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_AddProduct",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_AddProduct",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_AddProductDifferential",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_AddProductDifferential",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Resolving",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Resolving",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Complete",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Complete",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Construct",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Construct",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_ConstructJson",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_ConstructJson",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Resolve",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Resolve",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_SetStructline",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_SetStructline",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_SetDifferential",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_SetDifferential",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_SetClass",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_SetClass",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_SetPageList",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_SetPageList",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_QueryTable",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_QueryTable",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_QueryTableResult",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_QueryTableResult",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_QueryCocycleString",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_QueryCocycleString",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_QueryCocycleStringResult",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_QueryCocycleStringResult",E,E,N,N],[8,"ActionT",E,"The name `Action` is sort-of a misnomer. It is the content…",N,N],[11,R[64],E,E,29,[[["self"],["sseq"]],[[R[2],[R[55]]],[R[55]]]]],[11,R[65],E,E,29,[[["self"],["arc"]],[[R[2],[R[55]]],[R[55]]]]],[11,R[62],E,E,29,[[["self"]],[R[34]]]],[0,"managers",R[26],E,N,N],[3,R[96],R[63],"ResolutionManager is a struct that manipulates an…",N,N],[12,R[56],E,E,30,N],[12,"is_unit",E,E,30,N],[12,R[58],E,E,30,N],[12,R[227],E,E,30,N],[3,R[97],E,"This is more-or-less the same as the ResolutionManager,…",N,N],[12,R[56],E,E,31,N],[12,"sseq",E,E,31,N],[12,"unit_sseq",E,E,31,N],[11,"new",E,"Constructs a ResolutionManager object.",30,[[[R[56]]],["self"]]],[11,R[59],E,"Reads a message and performs the actions as instructed.",30,[[["self"],[R[55]]],[[R[4],["box"]],["box",["error"]]]]],[11,"construct_json",E,"Resolves a module defined by a json object. The result is…",30,[[["self"],[R[67]]],[[R[4],["box"]],["box",["error"]]]]],[11,R[57],E,"Resolves a module specified by `json`. The result is…",30,[[["self"],[R[57]]],[[R[4],["box"]],["box",["error"]]]]],[11,"process_bundle",E,E,30,[[["self"],[R[98]]]]],[11,R[68],E,E,30,[[["self"],[R[25]],[R[68]]],[[R[4],["box"]],["box",["error"]]]]],[11,"setup_callback",E,E,30,[[["self"],[R[25]],[R[58]]]]],[11,"new",E,"Constructs a SseqManager object.",31,[[[R[56]]],["self"]]],[11,"is_user",E,"Return Whether this was a user action. If it is a user…",31,[[[R[72]]],["bool"]]],[11,R[59],E,E,31,[[["self"],[R[55]]],[["box",["error"]],[R[4],["bool","box"]],["bool"]]]],[11,"get_sseq",E,E,31,[[["self"],[R[25]]],[[R[2],["sseq"]],["sseq"]]]],[11,R[66],E,E,31,[[["self"],[R[55]]],[[R[4],["box"]],["box",["error"]]]]],[11,"relay",E,E,31,[[["self"],[R[55]]],[[R[4],["box"]],["box",["error"]]]]],[6,"Sender",R[26],E,N,N],[11,"into",R[60],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[5],E,E,0,[[[U]],[R[4]]]],[11,R[6],E,E,0,[[],[R[4]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[R[20]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[5],E,E,1,[[[U]],[R[4]]]],[11,R[6],E,E,1,[[],[R[4]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[R[20]]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[5],E,E,2,[[[U]],[R[4]]]],[11,R[6],E,E,2,[[],[R[4]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[R[20]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[5],E,E,3,[[[U]],[R[4]]]],[11,R[6],E,E,3,[[],[R[4]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[R[20]]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[5],E,E,4,[[[U]],[R[4]]]],[11,R[6],E,E,4,[[],[R[4]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[R[20]]]],[11,R[14],R[61],E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[62],E,E,5,[[["self"]],[R[34]]]],[11,R[5],E,E,5,[[[U]],[R[4]]]],[11,R[6],E,E,5,[[],[R[4]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[R[20]]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[5],E,E,6,[[[U]],[R[4]]]],[11,R[6],E,E,6,[[],[R[4]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[R[20]]]],[11,R[14],E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[5],E,E,7,[[[U]],[R[4]]]],[11,R[6],E,E,7,[[],[R[4]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[R[20]]]],[11,R[14],E,E,8,[[["self"]],[T]]],[11,R[15],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[5],E,E,8,[[[U]],[R[4]]]],[11,R[6],E,E,8,[[],[R[4]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[R[20]]]],[11,R[14],E,E,9,[[["self"]],[T]]],[11,R[15],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[5],E,E,9,[[[U]],[R[4]]]],[11,R[6],E,E,9,[[],[R[4]]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[R[20]]]],[11,R[14],E,E,32,[[["self"]],[T]]],[11,R[15],E,E,32,[[["self"],[T]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[5],E,E,32,[[[U]],[R[4]]]],[11,R[6],E,E,32,[[],[R[4]]]],[11,R[7],E,E,32,[[["self"]],[T]]],[11,R[8],E,E,32,[[["self"]],[T]]],[11,R[9],E,E,32,[[["self"]],[R[20]]]],[11,R[14],E,E,10,[[["self"]],[T]]],[11,R[15],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[5],E,E,10,[[[U]],[R[4]]]],[11,R[6],E,E,10,[[],[R[4]]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[["self"]],[R[20]]]],[11,R[14],E,E,11,[[["self"]],[T]]],[11,R[15],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[5],E,E,11,[[[U]],[R[4]]]],[11,R[6],E,E,11,[[],[R[4]]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[["self"]],[R[20]]]],[11,R[14],E,E,12,[[["self"]],[T]]],[11,R[15],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[5],E,E,12,[[[U]],[R[4]]]],[11,R[6],E,E,12,[[],[R[4]]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[["self"]],[R[20]]]],[11,R[14],E,E,13,[[["self"]],[T]]],[11,R[15],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[5],E,E,13,[[[U]],[R[4]]]],[11,R[6],E,E,13,[[],[R[4]]]],[11,R[7],E,E,13,[[["self"]],[T]]],[11,R[8],E,E,13,[[["self"]],[T]]],[11,R[9],E,E,13,[[["self"]],[R[20]]]],[11,R[14],E,E,14,[[["self"]],[T]]],[11,R[15],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[5],E,E,14,[[[U]],[R[4]]]],[11,R[6],E,E,14,[[],[R[4]]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[8],E,E,14,[[["self"]],[T]]],[11,R[9],E,E,14,[[["self"]],[R[20]]]],[11,R[14],E,E,33,[[["self"]],[T]]],[11,R[15],E,E,33,[[["self"],[T]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[5],E,E,33,[[[U]],[R[4]]]],[11,R[6],E,E,33,[[],[R[4]]]],[11,R[7],E,E,33,[[["self"]],[T]]],[11,R[8],E,E,33,[[["self"]],[T]]],[11,R[9],E,E,33,[[["self"]],[R[20]]]],[11,R[14],E,E,15,[[["self"]],[T]]],[11,R[15],E,E,15,[[["self"],[T]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[5],E,E,15,[[[U]],[R[4]]]],[11,R[6],E,E,15,[[],[R[4]]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[8],E,E,15,[[["self"]],[T]]],[11,R[9],E,E,15,[[["self"]],[R[20]]]],[11,R[14],E,E,16,[[["self"]],[T]]],[11,R[15],E,E,16,[[["self"],[T]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[5],E,E,16,[[[U]],[R[4]]]],[11,R[6],E,E,16,[[],[R[4]]]],[11,R[7],E,E,16,[[["self"]],[T]]],[11,R[8],E,E,16,[[["self"]],[T]]],[11,R[9],E,E,16,[[["self"]],[R[20]]]],[11,R[14],E,E,17,[[["self"]],[T]]],[11,R[15],E,E,17,[[["self"],[T]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[5],E,E,17,[[[U]],[R[4]]]],[11,R[6],E,E,17,[[],[R[4]]]],[11,R[7],E,E,17,[[["self"]],[T]]],[11,R[8],E,E,17,[[["self"]],[T]]],[11,R[9],E,E,17,[[["self"]],[R[20]]]],[11,R[14],E,E,18,[[["self"]],[T]]],[11,R[15],E,E,18,[[["self"],[T]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[5],E,E,18,[[[U]],[R[4]]]],[11,R[6],E,E,18,[[],[R[4]]]],[11,R[7],E,E,18,[[["self"]],[T]]],[11,R[8],E,E,18,[[["self"]],[T]]],[11,R[9],E,E,18,[[["self"]],[R[20]]]],[11,R[14],E,E,19,[[["self"]],[T]]],[11,R[15],E,E,19,[[["self"],[T]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[5],E,E,19,[[[U]],[R[4]]]],[11,R[6],E,E,19,[[],[R[4]]]],[11,R[7],E,E,19,[[["self"]],[T]]],[11,R[8],E,E,19,[[["self"]],[T]]],[11,R[9],E,E,19,[[["self"]],[R[20]]]],[11,R[14],E,E,20,[[["self"]],[T]]],[11,R[15],E,E,20,[[["self"],[T]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[5],E,E,20,[[[U]],[R[4]]]],[11,R[6],E,E,20,[[],[R[4]]]],[11,R[7],E,E,20,[[["self"]],[T]]],[11,R[8],E,E,20,[[["self"]],[T]]],[11,R[9],E,E,20,[[["self"]],[R[20]]]],[11,R[14],E,E,21,[[["self"]],[T]]],[11,R[15],E,E,21,[[["self"],[T]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[5],E,E,21,[[[U]],[R[4]]]],[11,R[6],E,E,21,[[],[R[4]]]],[11,R[7],E,E,21,[[["self"]],[T]]],[11,R[8],E,E,21,[[["self"]],[T]]],[11,R[9],E,E,21,[[["self"]],[R[20]]]],[11,R[14],E,E,22,[[["self"]],[T]]],[11,R[15],E,E,22,[[["self"],[T]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[5],E,E,22,[[[U]],[R[4]]]],[11,R[6],E,E,22,[[],[R[4]]]],[11,R[7],E,E,22,[[["self"]],[T]]],[11,R[8],E,E,22,[[["self"]],[T]]],[11,R[9],E,E,22,[[["self"]],[R[20]]]],[11,R[14],E,E,23,[[["self"]],[T]]],[11,R[15],E,E,23,[[["self"],[T]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[5],E,E,23,[[[U]],[R[4]]]],[11,R[6],E,E,23,[[],[R[4]]]],[11,R[7],E,E,23,[[["self"]],[T]]],[11,R[8],E,E,23,[[["self"]],[T]]],[11,R[9],E,E,23,[[["self"]],[R[20]]]],[11,R[14],E,E,24,[[["self"]],[T]]],[11,R[15],E,E,24,[[["self"],[T]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[5],E,E,24,[[[U]],[R[4]]]],[11,R[6],E,E,24,[[],[R[4]]]],[11,R[7],E,E,24,[[["self"]],[T]]],[11,R[8],E,E,24,[[["self"]],[T]]],[11,R[9],E,E,24,[[["self"]],[R[20]]]],[11,R[14],E,E,25,[[["self"]],[T]]],[11,R[15],E,E,25,[[["self"],[T]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[5],E,E,25,[[[U]],[R[4]]]],[11,R[6],E,E,25,[[],[R[4]]]],[11,R[7],E,E,25,[[["self"]],[T]]],[11,R[8],E,E,25,[[["self"]],[T]]],[11,R[9],E,E,25,[[["self"]],[R[20]]]],[11,R[14],E,E,26,[[["self"]],[T]]],[11,R[15],E,E,26,[[["self"],[T]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[5],E,E,26,[[[U]],[R[4]]]],[11,R[6],E,E,26,[[],[R[4]]]],[11,R[7],E,E,26,[[["self"]],[T]]],[11,R[8],E,E,26,[[["self"]],[T]]],[11,R[9],E,E,26,[[["self"]],[R[20]]]],[11,R[14],E,E,27,[[["self"]],[T]]],[11,R[15],E,E,27,[[["self"],[T]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[5],E,E,27,[[[U]],[R[4]]]],[11,R[6],E,E,27,[[],[R[4]]]],[11,R[7],E,E,27,[[["self"]],[T]]],[11,R[8],E,E,27,[[["self"]],[T]]],[11,R[9],E,E,27,[[["self"]],[R[20]]]],[11,R[14],E,E,28,[[["self"]],[T]]],[11,R[15],E,E,28,[[["self"],[T]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[5],E,E,28,[[[U]],[R[4]]]],[11,R[6],E,E,28,[[],[R[4]]]],[11,R[7],E,E,28,[[["self"]],[T]]],[11,R[8],E,E,28,[[["self"]],[T]]],[11,R[9],E,E,28,[[["self"]],[R[20]]]],[11,"into",R[63],E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[5],E,E,30,[[[U]],[R[4]]]],[11,R[6],E,E,30,[[],[R[4]]]],[11,R[7],E,E,30,[[["self"]],[T]]],[11,R[8],E,E,30,[[["self"]],[T]]],[11,R[9],E,E,30,[[["self"]],[R[20]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[5],E,E,31,[[[U]],[R[4]]]],[11,R[6],E,E,31,[[],[R[4]]]],[11,R[7],E,E,31,[[["self"]],[T]]],[11,R[8],E,E,31,[[["self"]],[T]]],[11,R[9],E,E,31,[[["self"]],[R[20]]]],[11,R[64],R[61],E,28,[[["self"],["sseq"]],[[R[2],[R[55]]],[R[55]]]]],[11,R[65],E,E,28,[[["self"],["arc"]],[[R[2],[R[55]]],[R[55]]]]],[11,R[62],E,E,28,[[["self"]],[R[34]]]],[11,R[64],E,E,6,[[["self"],["sseq"]],[[R[2],[R[55]]],[R[55]]]]],[11,R[64],E,E,7,[[["self"],["sseq"]],[[R[2],[R[55]]],[R[55]]]]],[11,R[65],E,E,7,[[["self"],["arc"]],[[R[2],[R[55]]],[R[55]]]]],[11,R[64],E,E,8,[[["self"],["sseq"]],[[R[2],[R[55]]],[R[55]]]]],[11,R[64],E,E,9,[[["self"],["sseq"]],[[R[2],[R[55]]],[R[55]]]]],[11,R[64],E,E,32,[[["self"],["sseq"]],[[R[2],[R[55]]],[R[55]]]]],[11,R[64],E,E,10,[[["self"],["sseq"]],[[R[2],[R[55]]],[R[55]]]]],[11,R[64],E,E,11,[[["self"],["sseq"]],[[R[2],[R[55]]],[R[55]]]]],[11,R[64],E,E,12,[[["self"],["sseq"]],[[R[2],[R[55]]],[R[55]]]]],[11,R[64],E,E,13,[[["self"],["sseq"]],[[R[2],[R[55]]],[R[55]]]]],[11,R[65],E,E,13,[[["self"],["arc"]],[[R[2],[R[55]]],[R[55]]]]],[11,R[62],E,E,13,[[["self"]],[R[34]]]],[11,R[65],E,E,22,[[["self"],["arc"]],[[R[2],[R[55]]],[R[55]]]]],[11,R[65],E,E,24,[[["self"],["arc"]],[[R[2],[R[55]]],[R[55]]]]],[11,"clone",R[60],E,4,[[["self"]],["classstate"]]],[11,"clone",E,E,2,[[["self"]],["productitem"]]],[11,"clone",R[61],E,5,[[["self"]],[R[55]]]],[11,"clone",E,E,26,[[["self"]],[R[69]]]],[11,"clone",E,E,27,[[["self"]],[R[25]]]],[11,"clone",E,E,28,[[["self"]],[R[72]]]],[11,"clone",E,E,6,[[["self"]],[R[74]]]],[11,"clone",E,E,7,[[["self"]],[R[71]]]],[11,"clone",E,E,8,[[["self"]],[R[73]]]],[11,"clone",E,E,9,[[["self"]],[R[75]]]],[11,"clone",E,E,32,[[["self"]],["clear"]]],[11,"clone",E,E,10,[[["self"]],[R[76]]]],[11,"clone",E,E,11,[[["self"]],[R[78]]]],[11,"clone",E,E,12,[[["self"]],[R[77]]]],[11,"clone",E,E,13,[[["self"]],[R[70]]]],[11,"clone",E,E,14,[[["self"]],[R[66]]]],[11,"clone",E,E,33,[[["self"]],[R[79]]]],[11,"clone",E,E,15,[[["self"]],[R[57]]]],[11,"clone",E,E,16,[[["self"]],[R[67]]]],[11,"clone",E,E,17,[[["self"]],[R[68]]]],[11,"clone",E,E,18,[[["self"]],[R[80]]]],[11,"clone",E,E,19,[[["self"]],[R[81]]]],[11,"clone",E,E,20,[[["self"]],[R[82]]]],[11,"clone",E,E,21,[[["self"]],[R[83]]]],[11,"clone",E,E,22,[[["self"]],[R[84]]]],[11,"clone",E,E,23,[[["self"]],[R[85]]]],[11,"clone",E,E,24,[[["self"]],[R[86]]]],[11,"clone",E,E,25,[[["self"]],[R[87]]]],[11,"eq",E,E,26,[[["self"],[R[69]]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[25]]],["bool"]]],[11,"from",E,E,28,[[[R[70]]],[R[72]]]],[11,"from",E,E,28,[[[R[71]]],[R[72]]]],[11,"from",E,E,28,[[[R[73]]],[R[72]]]],[11,"from",E,E,28,[[[R[74]]],[R[72]]]],[11,"from",E,E,28,[[[R[75]]],[R[72]]]],[11,"from",E,E,28,[[["clear"]],[R[72]]]],[11,"from",E,E,28,[[[R[76]]],[R[72]]]],[11,"from",E,E,28,[[[R[77]]],[R[72]]]],[11,"from",E,E,28,[[[R[78]]],[R[72]]]],[11,"from",E,E,28,[[[R[66]]],[R[72]]]],[11,"from",E,E,28,[[[R[79]]],[R[72]]]],[11,"from",E,E,28,[[[R[57]]],[R[72]]]],[11,"from",E,E,28,[[[R[67]]],[R[72]]]],[11,"from",E,E,28,[[[R[68]]],[R[72]]]],[11,"from",E,E,28,[[[R[80]]],[R[72]]]],[11,"from",E,E,28,[[[R[81]]],[R[72]]]],[11,"from",E,E,28,[[[R[82]]],[R[72]]]],[11,"from",E,E,28,[[[R[83]]],[R[72]]]],[11,"from",E,E,28,[[[R[84]]],[R[72]]]],[11,"from",E,E,28,[[[R[85]]],[R[72]]]],[11,"from",E,E,28,[[[R[86]]],[R[72]]]],[11,"from",E,E,28,[[[R[87]]],[R[72]]]],[11,"fmt",R[60],E,4,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,2,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",R[61],E,5,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,26,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,27,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,28,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,6,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,7,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,8,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,9,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,32,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,10,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,11,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,12,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,13,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,14,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,33,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,15,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,16,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,17,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,18,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,19,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,20,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,21,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,22,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,23,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,24,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,25,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,5,[[["self"],[R[18]]],[R[4]]]],[11,R[5],E,E,13,[[[R[72]]],[R[4]]]],[11,R[5],E,E,7,[[[R[72]]],[R[4]]]],[11,R[5],E,E,8,[[[R[72]]],[R[4]]]],[11,R[5],E,E,6,[[[R[72]]],[R[4]]]],[11,R[5],E,E,9,[[[R[72]]],[R[4]]]],[11,R[5],E,E,32,[[[R[72]]],[R[4]]]],[11,R[5],E,E,10,[[[R[72]]],[R[4]]]],[11,R[5],E,E,12,[[[R[72]]],[R[4]]]],[11,R[5],E,E,11,[[[R[72]]],[R[4]]]],[11,R[5],E,E,14,[[[R[72]]],[R[4]]]],[11,R[5],E,E,33,[[[R[72]]],[R[4]]]],[11,R[5],E,E,15,[[[R[72]]],[R[4]]]],[11,R[5],E,E,16,[[[R[72]]],[R[4]]]],[11,R[5],E,E,17,[[[R[72]]],[R[4]]]],[11,R[5],E,E,18,[[[R[72]]],[R[4]]]],[11,R[5],E,E,19,[[[R[72]]],[R[4]]]],[11,R[5],E,E,20,[[[R[72]]],[R[4]]]],[11,R[5],E,E,21,[[[R[72]]],[R[4]]]],[11,R[5],E,E,22,[[[R[72]]],[R[4]]]],[11,R[5],E,E,23,[[[R[72]]],[R[4]]]],[11,R[5],E,E,24,[[[R[72]]],[R[4]]]],[11,R[5],E,E,25,[[[R[72]]],[R[4]]]],[11,R[88],R[60],E,4,[[["self"],["__s"]],[R[4]]]],[11,R[88],E,E,2,[[["self"],["__s"]],[R[4]]]],[11,R[88],R[61],E,5,[[["self"],["__s"]],[R[4]]]],[11,R[88],E,E,26,[[["self"],["__s"]],[R[4]]]],[11,R[88],E,E,27,[[["self"],["__s"]],[R[4]]]],[11,R[88],E,E,28,[[["self"],["__s"]],[R[4]]]],[11,R[88],E,E,6,[[["self"],["__s"]],[R[4]]]],[11,R[88],E,E,7,[[["self"],["__s"]],[R[4]]]],[11,R[88],E,E,8,[[["self"],["__s"]],[R[4]]]],[11,R[88],E,E,9,[[["self"],["__s"]],[R[4]]]],[11,R[88],E,E,32,[[["self"],["__s"]],[R[4]]]],[11,R[88],E,E,10,[[["self"],["__s"]],[R[4]]]],[11,R[88],E,E,11,[[["self"],["__s"]],[R[4]]]],[11,R[88],E,E,12,[[["self"],["__s"]],[R[4]]]],[11,R[88],E,E,13,[[["self"],["__s"]],[R[4]]]],[11,R[88],E,E,14,[[["self"],["__s"]],[R[4]]]],[11,R[88],E,E,33,[[["self"],["__s"]],[R[4]]]],[11,R[88],E,E,15,[[["self"],["__s"]],[R[4]]]],[11,R[88],E,E,16,[[["self"],["__s"]],[R[4]]]],[11,R[88],E,E,17,[[["self"],["__s"]],[R[4]]]],[11,R[88],E,E,18,[[["self"],["__s"]],[R[4]]]],[11,R[88],E,E,19,[[["self"],["__s"]],[R[4]]]],[11,R[88],E,E,20,[[["self"],["__s"]],[R[4]]]],[11,R[88],E,E,21,[[["self"],["__s"]],[R[4]]]],[11,R[88],E,E,22,[[["self"],["__s"]],[R[4]]]],[11,R[88],E,E,23,[[["self"],["__s"]],[R[4]]]],[11,R[88],E,E,24,[[["self"],["__s"]],[R[4]]]],[11,R[88],E,E,25,[[["self"],["__s"]],[R[4]]]],[11,R[89],R[60],E,4,[[["__d"]],[R[4]]]],[11,R[89],E,E,2,[[["__d"]],[R[4]]]],[11,R[89],R[61],E,5,[[["__d"]],[R[4]]]],[11,R[89],E,E,26,[[["__d"]],[R[4]]]],[11,R[89],E,E,27,[[["__d"]],[R[4]]]],[11,R[89],E,E,28,[[["__d"]],[R[4]]]],[11,R[89],E,E,6,[[["__d"]],[R[4]]]],[11,R[89],E,E,7,[[["__d"]],[R[4]]]],[11,R[89],E,E,8,[[["__d"]],[R[4]]]],[11,R[89],E,E,9,[[["__d"]],[R[4]]]],[11,R[89],E,E,32,[[["__d"]],[R[4]]]],[11,R[89],E,E,10,[[["__d"]],[R[4]]]],[11,R[89],E,E,11,[[["__d"]],[R[4]]]],[11,R[89],E,E,12,[[["__d"]],[R[4]]]],[11,R[89],E,E,13,[[["__d"]],[R[4]]]],[11,R[89],E,E,14,[[["__d"]],[R[4]]]],[11,R[89],E,E,33,[[["__d"]],[R[4]]]],[11,R[89],E,E,15,[[["__d"]],[R[4]]]],[11,R[89],E,E,16,[[["__d"]],[R[4]]]],[11,R[89],E,E,17,[[["__d"]],[R[4]]]],[11,R[89],E,E,18,[[["__d"]],[R[4]]]],[11,R[89],E,E,19,[[["__d"]],[R[4]]]],[11,R[89],E,E,20,[[["__d"]],[R[4]]]],[11,R[89],E,E,21,[[["__d"]],[R[4]]]],[11,R[89],E,E,22,[[["__d"]],[R[4]]]],[11,R[89],E,E,23,[[["__d"]],[R[4]]]],[11,R[89],E,E,24,[[["__d"]],[R[4]]]],[11,R[89],E,E,25,[[["__d"]],[R[4]]]]],"p":[[3,R[90]],[3,"Product"],[3,R[91]],[3,"Sseq"],[4,R[92]],[3,"Message"],[3,R[38]],[3,R[36]],[3,R[37]],[3,R[39]],[3,R[40]],[3,R[42]],[3,R[41]],[3,R[35]],[3,R[43]],[3,R[45]],[3,R[46]],[3,R[93]],[3,R[47]],[3,R[48]],[3,R[49]],[3,R[50]],[3,R[51]],[3,R[52]],[3,R[53]],[3,R[54]],[4,R[94]],[4,R[95]],[4,"Action"],[8,"ActionT"],[3,R[96]],[3,R[97]],[3,"Clear"],[3,R[44]]]};
searchIndex["once"]={"doc":E,"i":[[3,"OnceVec","once",E,N,N],[12,"data",E,E,0,N],[3,R[19],E,E,N,N],[12,"data",E,E,1,N],[11,"into_vec",E,E,0,[[],["vec"]]],[11,R[12],E,E,0,[[["vec"]],["self"]]],[11,"new",E,E,0,[[],["self"]]],[11,R[13],E,E,0,[[["usize"]],["self"]]],[11,"get_vec_mut",E,E,0,[[["self"]],["vec"]]],[11,"get_vec",E,E,0,[[["self"]],["vec"]]],[11,"reserve",E,E,0,[[["self"],["usize"]]]],[11,"reserve_exact",E,E,0,[[["self"],["usize"]]]],[11,"push",E,E,0,[[["self"],[T]]]],[11,"into_bivec",E,E,1,[[],["bivec"]]],[11,"from_bivec",E,E,1,[[["bivec"]],["self"]]],[11,"get_bivec",E,E,1,[[["self"]],["bivec"]]],[11,"new",E,E,1,[[["i32"]],["self"]]],[11,R[13],E,E,1,[[["i32"]],["self"]]],[11,"push",E,E,1,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[5],E,E,0,[[[U]],[R[4]]]],[11,R[6],E,E,0,[[],[R[4]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[R[20]]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[5],E,E,1,[[[U]],[R[4]]]],[11,R[6],E,E,1,[[],[R[4]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[R[20]]]],[11,"default",E,E,0,[[],["self"]]],[11,"clone",E,E,1,[[["self"]],["self"]]],[11,R[16],E,E,0,[[["self"]]]],[11,R[16],E,E,1,[[["self"]]]],[11,"deref",E,E,0,[[["self"]]]],[11,"deref",E,E,1,[[["self"]]]],[11,"index",E,E,0,[[["self"],["usize"]],[T]]],[11,"index",E,E,0,[[["self"],["u32"]],[T]]],[11,"index",E,E,1,[[["self"],["i32"]],[T]]],[11,R[17],E,E,0,[[["self"],["usize"]],[T]]],[11,R[17],E,E,0,[[["self"],["u32"]],[T]]],[11,R[17],E,E,1,[[["self"],["i32"]],[T]]],[11,"fmt",E,E,0,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,1,[[["self"],[R[18]]],[R[4]]]],[11,"load",E,E,0,[[],[R[4]]]],[11,"load",E,E,1,[[],[R[4]]]],[11,"save",E,E,0,[[["self"]],[R[4]]]],[11,"save",E,E,1,[[["self"]],[R[4]]]]],"p":[[3,"OnceVec"],[3,R[19]]]};
searchIndex["query"]={"doc":E,"i":[[5,"query","query",E,N,[[["str"],["f"]],[R[0]]]],[5,"query_with_default",E,E,N,[[[R[0]],["str"],["f"]],[R[0]]]],[5,"query_with_default_no_default_indicated",E,E,N,[[[R[0]],["str"],["f"]],[R[0]]]],[5,"query_yes_no",E,E,N,[[["str"]],["bool"]]]],"p":[]};
searchIndex["rust_ext"]={"doc":E,"i":[[3,"Config",R[99],E,N,N],[12,"module_paths",E,E,0,N],[12,"module_file_name",E,E,0,N],[12,R[30],E,E,0,N],[12,R[29],E,E,0,N],[3,R[310],E,E,N,N],[12,R[209],E,E,1,N],[12,R[58],E,E,1,N],[3,R[311],E,E,N,N],[12,"name",E,E,2,N],[5,R[57],E,E,N,[[["config"]],[["box",["error"]],[R[4],[R[98],"box"]],[R[98]]]]],[5,"construct_from_json",E,E,N,[[[R[34]],["value"]],[["box",["error"]],[R[4],[R[98],"box"]],[R[98]]]]],[5,"run_define_module",E,E,N,[[],[[R[4],[R[34],"box"]],[R[34]],["box",["error"]]]]],[5,"run_resolve",E,E,N,[[["config"]],[[R[4],[R[34],"box"]],[R[34]],["box",["error"]]]]],[5,"run_yoneda",E,E,N,[[["config"]],[[R[4],[R[34],"box"]],[R[34]],["box",["error"]]]]],[5,"run_steenrod",E,E,N,[[],[[R[4],[R[34],"box"]],[R[34]],["box",["error"]]]]],[5,"run_test",E,E,N,[[],[[R[4],["box"]],["box",["error"]]]]],[5,"load_module_from_file",E,E,N,[[["config"]],[[R[4],[R[34],"box"]],[R[34]],["box",["error"]]]]],[0,"combinatorics",E,E,N,N],[5,"is_valid_prime","rust_ext::combinatorics",E,N,[[["u32"]],["bool"]]],[5,"inverse",E,E,N,[[["u32"]],["u32"]]],[5,"minus_one_to_the_n",E,E,N,[[["u32"]],["u32"]]],[5,"direct_binomial",E,E,N,[[["u32"]],["u32"]]],[5,"integer_power",E,"Computes b^e.",N,[[["u32"]],["u32"]]],[5,"power_mod",E,"Compute b^e mod p. We use this for computing modulo…",N,[[["u32"]],["u32"]]],[5,"logp",E,E,N,[[["u32"]],["u32"]]],[5,"basep_expansion",E,"Expand n base p and write the result into buffer result.…",N,[[["u32"]]]],[5,"multinomial2",E,E,N,[[],["u32"]]],[5,"binomial2",E,E,N,[[["i32"]],["u32"]]],[5,"multinomial_odd",E,E,N,[[["u32"]],["u32"]]],[5,"binomial_odd",E,E,N,[[["u32"],["i32"]],["u32"]]],[5,"multinomial",E,E,N,[[["u32"]],["u32"]]],[5,"binomial",E,E,N,[[["u32"],["i32"]],["u32"]]],[5,"adem_relation_coefficient",E,E,N,[[["u32"]],["u32"]]],[5,"inadmissible_pairs",E,E,N,[[["i32"],["u32"],["bool"]],["vec"]]],[5,"tau_degrees",E,E,N,[[["u32"]]]],[5,"xi_degrees",E,E,N,[[["u32"]]]],[7,"INVERSE_TABLE",E,E,N,N],[7,"XI_DEGREES",E,E,N,N],[7,"TAU_DEGREES",E,E,N,N],[7,"BINOMIAL_TABLE",E,E,N,N],[17,"MAX_PRIME_INDEX",E,E,N,N],[17,"MAX_PRIME",E,E,N,N],[17,"NOT_A_PRIME",E,E,N,N],[17,"MAX_EXPONENT",E,E,N,N],[17,"MAX_XI_TAU",E,E,N,N],[17,"PRIME_TO_INDEX_MAP",E,E,N,N],[0,"fp_vector",R[99],"An `FpVector` is a vector with entries in Fp. We use this…",N,N],[3,R[312],R[238],E,N,N],[12,"limb",E,E,3,N],[12,"bit_index",E,E,3,N],[3,R[313],E,E,N,N],[12,R[101],E,E,4,N],[12,"slice_start",E,E,4,N],[12,"slice_end",E,E,4,N],[12,"limbs",E,E,4,N],[3,R[102],E,E,N,N],[12,R[100],E,E,5,N],[3,R[103],E,E,N,N],[12,R[100],E,E,6,N],[3,R[104],E,E,N,N],[12,R[100],E,E,7,N],[3,R[105],E,E,N,N],[12,"p",E,E,8,N],[12,R[100],E,E,8,N],[3,R[314],E,E,N,N],[12,"limbs",E,E,9,N],[12,R[106],E,E,9,N],[12,"bit_mask",E,E,9,N],[12,"entries_per_64_bits_m_1",E,E,9,N],[12,"limb_index",E,E,9,N],[12,"entries_left",E,E,9,N],[12,"cur_limb",E,E,9,N],[12,"counter",E,E,9,N],[3,R[315],E,"An FpVectorMask encodes a subset of the basis elements of…",N,N],[12,"p",E,E,10,N],[12,R[101],E,E,10,N],[12,"masks",E,E,10,N],[4,"FpVector",E,E,N,N],[13,R[102],E,E,11,N],[13,R[103],E,E,11,N],[13,R[104],E,E,11,N],[13,R[105],E,E,11,N],[5,R[106],E,E,N,[[["u32"]],["usize"]]],[5,"bitmask",E,E,N,[[["u32"]],["u64"]]],[5,"entries_per_64_bits",E,E,N,[[["u32"]],["usize"]]],[5,"initialize_limb_bit_index_table",E,E,N,[[["u32"]]]],[5,"limb_bit_index_pair",E,E,N,[[["u32"],["usize"]],[R[302]]]],[7,"BIT_LENGHTS",E,E,N,N],[7,"BITMASKS",E,E,N,N],[7,"ENTRIES_PER_64_BITS",E,E,N,N],[7,"LIMB_BIT_INDEX_TABLE",E,"This table tells us which limb and which bitfield of that…",N,N],[7,"LIMB_BIT_INDEX_ONCE_TABLE",E,E,N,N],[17,"MAX_DIMENSION",E,E,N,N],[8,R[316],E,E,N,N],[10,R[266],E,E,12,[[["self"],["usize"]]]],[10,R[100],E,E,12,[[["self"]],[R[107]]]],[10,R[267],E,E,12,[[["self"]],[R[107]]]],[10,"prime",E,E,12,[[["self"]],["u32"]]],[11,R[101],E,E,12,[[["self"]],["usize"]]],[11,"offset",E,E,12,[[["self"]],["usize"]]],[11,R[268],E,E,12,[[["self"]],["usize"]]],[11,"slice",E,E,12,[[["self"]]]],[11,R[110],E,E,12,[[["self"],["usize"]]]],[11,R[269],E,E,12,[[["self"]]]],[11,R[111],E,E,12,[[["self"]]]],[11,R[112],E,"Drops every element in the fp_vector that is not in the…",12,[[["self"]]]],[11,"min_limb",E,E,12,[[["self"]],["usize"]]],[11,"max_limb",E,E,12,[[["self"]],["usize"]]],[11,"limbs",E,E,12,[[["self"]],["vec"]]],[11,R[270],E,E,12,[[["self"]],["vec"]]],[11,R[271],E,E,12,[[["self"],["usize"]],["u64"]]],[11,R[272],E,E,12,[[["self"]]]],[11,R[108],E,E,12,[[["self"]]]],[11,R[273],E,E,12,[[["self"],[R[23]]]]],[11,"assign",E,E,12,[[["self"],[R[23]]]]],[11,R[274],E,E,12,[[["self"]],["bool"]]],[11,"is_zero",E,E,12,[[["self"]],["bool"]]],[11,"entry",E,E,12,[[["self"],["usize"]],["u32"]]],[11,R[275],E,E,12,[[["self"],["u32"],["usize"]]]],[11,R[276],E,E,12,[[["self"],["u32"],["usize"]]]],[11,"unpack",E,"Unpacks an FpVector onto an array slice. note that the…",12,[[["self"]]]],[11,R[277],E,E,12,[[["self"]],[["u32"],["vec",["u32"]]]]],[11,"pack",E,E,12,[[["self"]]]],[11,R[278],E,"`coeff` need not be reduced mod p. Adds v otimes w to self.",12,[[["self"],["u32"],["usize"],[R[23]]]]],[11,"add",E,"Adds `c` * `other` to `self`. `other` must have the same…",12,[[["self"],["u32"],[R[23]]]]],[11,R[279],E,E,12,[[["self"],["u32"],[R[23]]]]],[11,R[280],E,E,12,[[["self"],["u32"],[R[23]]]]],[11,R[281],E,E,12,[[["self"],["u32"],[R[23]]]]],[11,"scale",E,E,12,[[["self"],["u32"]]]],[11,"new",E,E,11,[[["u32"],["usize"]],[R[23]]]],[11,R[12],E,E,11,[[["u32"]],[R[23]]]],[11,"add_limb",E,E,11,[[["u32"],["u64"]],["u64"]]],[11,"number_of_limbs",E,E,11,[[["u32"],["usize"]],["usize"]]],[11,"padded_dimension",E,E,11,[[["u32"],["usize"]],["usize"]]],[11,"scratch_vector",E,E,11,[[["u32"],["usize"]],["self"]]],[11,"set_scratch_vector_size",E,E,11,[[["usize"]],["self"]]],[11,"iter",E,E,11,[[["self"]],[R[109]]]],[11,"pack_limb",E,E,11,[[["u32"],["usize"],["vec"]],["usize"]]],[11,"unpack_limb",E,E,11,[[["u32"],["usize"]],["usize"]]],[11,"new",E,E,9,[[[R[23]]],[R[109]]]],[11,"skip_n",E,E,9,[[["self"],["usize"]]]],[11,"new",E,E,10,[[["u32"],["usize"]],["self"]]],[11,"set_zero",E,E,10,[[["self"]]]],[11,"set_mask",E,"If `on` is true, we add the `i`th basis element to the…",10,[[["self"],["usize"],["bool"]]]],[11,"apply",E,"This projects `target` onto the subspace spanned by the…",10,[[["self"],[R[23]]]]],[0,"matrix",R[99],E,N,N],[3,"Matrix",R[239],"A matrix! In particular, a matrix with values in F_p. The…",N,N],[12,"p",E,E,13,N],[12,"rows",E,E,13,N],[12,"columns",E,E,13,N],[12,"slice_row_start",E,E,13,N],[12,"slice_row_end",E,E,13,N],[12,"slice_col_start",E,E,13,N],[12,"slice_col_end",E,E,13,N],[12,"vectors",E,E,13,N],[3,"Subspace",E,"A subspace of a vector space. # Fields * `matrix` - A…",N,N],[12,"matrix",E,E,14,N],[12,"column_to_pivot_row",E,E,14,N],[3,R[317],E,"Given a matrix M, a quasi-inverse Q is a map from the…",N,N],[12,"image",E,E,15,N],[12,"preimage",E,E,15,N],[11,"new",E,"Produces a new matrix over F_p with the specified number…",13,[[["u32"],["usize"]],["matrix"]]],[11,"from_rows",E,"Produces a matrix from a list of rows. If `vectors.len()…",13,[[["u32"],[R[23]],["vec",[R[23]]],["usize"]],["self"]]],[11,R[12],E,"Produces a Matrix from an `&[Vec<u32>]` object. If the…",13,[[["u32"]],["matrix"]]],[11,"to_vec",E,E,13,[[["self"]],[["vec",["u32"]],["vec",["vec"]]]]],[11,"augmented_from_vec",E,"Produces a padded augmented matrix from an `&[Vec<u32>]`…",13,[[["u32"]]]],[11,"set_identity",E,E,13,[[["self"],["usize"]]]],[11,"prime",E,E,13,[[["self"]],["u32"]]],[11,"rows",E,"Gets the number of rows in the matrix.",13,[[["self"]],["usize"]]],[11,"columns",E,"Gets the number of columns in the matrix.",13,[[["self"]],["usize"]]],[11,R[110],E,"Sets the slice on the matrix. Restricts to the submatrix…",13,[[["self"],["usize"]]]],[11,R[111],E,"Un-slice the matrix.",13,[[["self"]]]],[11,R[112],E,E,13,[[],["self"]]],[11,"into_vec",E,E,13,[[],[[R[23]],["vec",[R[23]]]]]],[11,"iter",E,E,13,[[["self"]],[["iter",[R[23]]],[R[23]]]]],[11,"iter_mut",E,E,13,[[["self"]],[["itermut",[R[23]]],[R[23]]]]],[11,"swap_rows",E,E,13,[[["self"],["usize"]]]],[11,"row_op",E,E,13,[[["self"],["u32"],["usize"]]]],[11,R[113],E,"Perform row reduction to reduce it to reduced row echelon…",13,[[["self"],["vec"]]]],[11,"row_reduce_offset",E,E,13,[[["self"],["usize"],["vec"]]]],[11,"find_pivots_permutation",E,"This is very similar to row_reduce, except we only need to…",13,[[["self"],["iterator"]],[["vec",["usize"]],["usize"]]]],[11,"row_reduce_permutation",E,E,13,[[["self"],[T],["vec"]]]],[11,"new",E,E,14,[[["u32"],["usize"]],["self"]]],[11,"subquotient",E,"Given a chain of subspaces `subspace` < `space` <…",14,[[[R[2],[R[22]]],["usize"],[R[22]]],[["vec",["usize"]],["usize"]]]],[11,"entire_space",E,E,14,[[["u32"],["usize"]],["self"]]],[11,"add_vector",E,"This adds a vector to the subspace. This function assumes…",14,[[["self"],[R[23]]]]],[11,"add_vectors",E,E,14,[[["self"]]]],[11,"add_basis_elements",E,E,14,[[["self"]]]],[11,"reduce",E,"Projects a vector to a complement of the subspace. The…",14,[[["self"],[R[23]]]]],[11,"shift_reduce",E,"A version of `reduce` that doesn't require the vectors to…",14,[[["self"],[R[23]]]]],[11,R[113],E,E,14,[[["self"]]]],[11,"contains",E,E,14,[[["self"],[R[23]]],["bool"]]],[11,R[101],E,E,14,[[["self"]],["usize"]]],[11,"basis",E,"Returns a basis of the subspace.",14,[[["self"]]]],[11,R[108],E,"Sets the subspace to be the zero subspace.",14,[[["self"]]]],[11,"set_to_entire",E,"Sets the subspace to be the entire subspace.",14,[[["self"]]]],[11,"prime",E,E,15,[[["self"]],["u32"]]],[11,"apply",E,"Apply the quasi-inverse to an input vector and add a…",15,[[["self"],["u32"],[R[23]],[R[23]]]]],[11,R[108],E,E,13,[[["self"]]]],[11,"find_first_row_in_block",E,E,13,[[["self"],["usize"]],["usize"]]],[11,"compute_kernel",E,"Computes the kernel from an augmented matrix in rref. To…",13,[[["self"],["usize"]],[R[22]]]],[11,"compute_quasi_inverse",E,"Computes the quasi-inverse of a matrix given a rref of…",13,[[["self"],["usize"]],[R[182]]]],[11,"compute_quasi_inverses",E,"This function computes quasi-inverses for matrices A, B…",13,[[["self"],["usize"]]]],[11,"get_image",E,E,13,[[["self"],["usize"]],[R[22]]]],[11,"extend_to_surjection",E,"Given a matrix M in rref, add rows to make the matrix…",13,[[["self"],["usize"]],[["vec",["usize"]],["usize"]]]],[11,"extend_image_to_desired_image",E,"Given a matrix in rref, say [A|B|C], where B lies between…",13,[[["self"],["usize"],[R[22]]],[["vec",["usize"]],["usize"]]]],[11,"extend_image",E,"Extends the image of a matrix to either the whole…",13,[[["self"],["usize"],[R[2]]],[["vec",["usize"]],["usize"]]]],[11,"apply",E,"Applies a matrix to a vector.",13,[[["self"],["u32"],[R[23]],[R[23]]]]],[0,"block_structure",R[99],E,N,N],[3,R[318],R[240],E,N,N],[12,R[160],E,E,16,N],[12,R[161],E,E,16,N],[12,"basis_index",E,E,16,N],[3,R[319],E,E,N,N],[12,R[204],E,E,17,N],[12,"basis_element_to_block_idx",E,E,17,N],[12,"block_starts",E,E,17,N],[3,R[320],E,E,N,N],[12,"block_start_index",E,E,18,N],[12,"block_size",E,E,18,N],[11,"new",E,E,17,[[["bivec"]],["self"]]],[11,"generator_to_block",E,E,17,[[["self"],["usize"],["i32"]],["blockstart"]]],[11,"generator_basis_elt_to_index",E,E,17,[[["self"],["usize"],["i32"]],["usize"]]],[11,"index_to_generator_basis_elt",E,E,17,[[["self"],["usize"]],["generatorbasiseltpair"]]],[11,"add_block",E,E,17,[[["self"],["u32"],[R[23]],["i32"],["usize"],[R[23]]]]],[0,R[140],R[99],E,N,N],[3,R[321],R[117],E,N,N],[12,R[118],E,E,19,N],[12,"q_part",E,E,19,N],[12,"p_part",E,E,19,N],[3,R[322],E,E,N,N],[12,"p",E,E,20,N],[12,R[140],E,E,20,N],[12,"profile",E,E,20,N],[3,R[323],E,E,N,N],[12,"name",E,E,21,N],[4,R[324],E,E,N,N],[13,R[114],E,E,22,N],[13,R[119],E,E,22,N],[13,"Field",E,E,22,N],[0,R[136],E,E,N,N],[3,R[116],R[241],E,N,N],[12,"__private_field",E,E,23,N],[3,R[325],E,"The format of the AdemBasisElement is as follows. To…",N,N],[12,"degree",E,E,24,N],[12,"excess",E,E,24,N],[12,"bocksteins",E,E,24,N],[12,"ps",E,E,24,N],[3,R[114],E,E,N,N],[12,"p",E,E,25,N],[12,"name",E,E,25,N],[12,"generic",E,E,25,N],[12,"unstable",E,E,25,N],[12,R[120],E,E,25,N],[12,"even_basis_table",E,E,25,N],[12,R[121],E,E,25,N],[12,R[122],E,E,25,N],[12,"multiplication_table",E,E,25,N],[12,"sort_order",E,E,25,N],[5,"adem_basis_element_excess_sort_order",E,E,N,[[[R[115]]],["ordering"]]],[5,"adem_basis_element_length_sort_order",E,E,N,[[[R[115]]],["ordering"]]],[5,"shift_vec",E,E,N,[[["vec"],["isize"]],["vec"]]],[7,R[116],E,E,N,N],[11,"new",E,E,25,[[["u32"],["bool"]],["self"]]],[11,"generate_basis_even",E,E,25,[[["self"],["i32"]]]],[11,"generate_basis_even_degreen",E,E,25,[[["self"],["i32"]]]],[11,"generate_basis2",E,E,25,[[["self"],["i32"]]]],[11,R[127],E,E,25,[[["self"],["i32"]]]],[11,"generate_basis_generic_degreen",E,E,25,[[["self"],["i32"]]]],[11,"generate_basis_element_to_index_map",E,E,25,[[["self"],["i32"]]]],[11,R[123],E,E,25,[[["self"],["usize"],["i32"]],[R[115]]]],[11,R[125],E,E,25,[[["self"],[R[115]]],[["usize"],[R[2],["usize"]]]]],[11,R[126],E,E,25,[[["self"],[R[115]]],["usize"]]],[11,"tail_of_basis_element_to_index",E,E,25,[[["self"],["u32"],[R[115]]]]],[11,"generate_multiplication_table_2",E,E,25,[[["self"],["i32"]]]],[11,"generate_multiplication_table_2_step",E,E,25,[[["self"],["i32"],["usize"]],[R[23]]]],[11,"generate_multiplication_table_generic",E,E,25,[[["self"],["i32"]]]],[11,"generate_multiplication_table_generic_step",E,"This function expresses $Sq^x$ (current) in terms of the…",25,[[["self"],["i32"],["usize"]],[R[23]]]],[11,R[128],E,E,25,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,"make_mono_admissible",E,E,25,[[["self"],["u32"],[R[23]],[R[115]],["i32"]]]],[11,"make_mono_admissible_2",E,"Reduce a Steenrod monomial at the prime 2. # Arguments: *…",25,[[["self"],[R[23]],[R[115]],["i32"],["bool"]]]],[11,"make_mono_admissible_generic",E,E,25,[[["self"],["u32"],[R[23]],[R[115]],["i32"],["bool"]]]],[11,"decompose_basis_element_2",E,E,25,[[["self"],["usize"],["i32"]],["vec"]]],[11,"decompose_basis_element_generic",E,E,25,[[["self"],["usize"],["i32"]],["vec"]]],[11,"beps_pn",E,E,25,[[["self"],["u32"]]]],[0,R[137],R[117],E,N,N],[3,R[326],R[242],E,N,N],[12,R[118],E,E,26,N],[12,"q_part",E,E,26,N],[12,"p_part",E,E,26,N],[3,"QPart",E,E,N,N],[12,"degree",E,E,27,N],[12,"q_part",E,E,27,N],[3,R[327],E,E,N,N],[12,"q_part",E,E,28,N],[12,"p_part",E,E,28,N],[12,"degree",E,E,28,N],[3,R[119],E,E,N,N],[12,"profile",E,E,29,N],[12,"name",E,E,29,N],[12,R[120],E,E,29,N],[12,"p",E,E,29,N],[12,"generic",E,E,29,N],[12,"ppart_table",E,E,29,N],[12,"qpart_table",E,E,29,N],[12,R[121],E,E,29,N],[12,R[122],E,E,29,N],[3,R[328],E,E,N,N],[12,"p",E,E,30,N],[12,"M",E,E,30,N],[12,"r",E,E,30,N],[12,"rows",E,E,30,N],[12,"cols",E,E,30,N],[12,"diag_num",E,E,30,N],[12,"cont",E,E,30,N],[5,"from_p",E,E,N,[[["i32"],["u32"],["vec",["u32"]]],[R[124]]]],[6,"PPart",E,E,N,N],[17,"ZERO_QPART",E,E,N,N],[11,"new",E,E,29,[[["u32"]],["self"]]],[11,R[123],E,E,29,[[["self"],["usize"],["i32"]],[R[124]]]],[11,R[125],E,E,29,[[["self"],[R[124]]],[["usize"],[R[2],["usize"]]]]],[11,R[126],E,E,29,[[["self"],[R[124]]],["usize"]]],[11,"compute_ppart",E,E,29,[[["self"],["i32"]]]],[11,"compute_qpart",E,E,29,[[["self"],["i32"]]]],[11,R[127],E,E,29,[[["self"],["i32"]]]],[11,"generate_basis_2",E,E,29,[[["self"],["i32"]]]],[11,"try_beps_pn",E,E,29,[[["self"],["u32"]],[R[2]]]],[11,"beps_pn",E,E,29,[[["self"],["u32"]]]],[11,"multiply_qpart",E,E,29,[[["self"],[R[124]],["u32"]],["vec"]]],[11,R[128],E,E,29,[[["self"],["u32"],[R[23]],[R[124]]]]],[11,"prime",E,E,30,[[["self"]],["u32"]]],[11,"new",E,E,30,[[["vec"],["u32"]],["ppartmultiplier"]]],[11,"update",E,E,30,[[["self"]],["bool"]]],[11,"decompose_basis_element_qpart",E,E,29,[[["self"],["usize"],["i32"]],["vec"]]],[11,"decompose_basis_element_ppart",E,E,29,[[["self"],["usize"],["i32"]],["vec"]]],[11,"increment_p_part",E,"Returns `true` if the new element is not within the bounds",29,[[["vec"]],["bool"]]],[0,"field",R[117],E,N,N],[3,"Field",R[244],E,N,N],[12,"prime",E,E,31,N],[11,"new",E,E,31,[[["u32"]],["self"]]],[17,"_IMPL_DESERIALIZE_FOR_MilnorProfileOption",R[117],E,N,N],[17,"_IMPL_DESERIALIZE_FOR_AlgebraSpec",E,E,N,N],[8,"Algebra",E,"A graded algebra over F_p, finite dimensional in each…",N,N],[10,R[282],E,"The \"type\" of the algebra, which is \"adem\" or \"milnor\".…",32,[[["self"]],["str"]]],[10,"prime",E,"Returns the prime the algebra is over.",32,[[["self"]],["u32"]]],[11,"name",E,E,32,[[["self"]],["str"]]],[10,R[138],E,"Computes the list of basis elements up to and including…",32,[[["self"],["i32"]]]],[10,R[101],E,R[290],32,[[["self"],["i32"]],["usize"]]],[10,R[284],E,"Computes the product `r * s` of the two basis elements,…",32,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,R[293],E,E,32,[[["self"],["u32"],[R[23]],["i32"],["usize"],[R[23]]]]],[11,R[294],E,E,32,[[["self"],["u32"],[R[23]],["i32"],["usize"],[R[23]]]]],[11,R[295],E,E,32,[[["self"],["u32"],[R[23]],["i32"],[R[23]]]]],[11,R[283],E,"A filtration one element in Ext(k, k) is the same as an…",32,[[["self"]],["vec"]]],[11,R[285],E,R[291],32,[[["self"],["value"]]]],[11,R[287],E,E,32,[[["self"],["usize"],["i32"]],["value"]]],[11,R[286],E,E,32,[[["self"],["str"]],[[R[132],["str"]],["str"]]]],[11,R[205],E,R[292],32,[[["self"],["usize"],["i32"]],[R[34]]]],[11,R[206],E,"Converts an element into a string for display.",32,[[["self"],[R[23]],["i32"]],[R[34]]]],[11,R[139],E,"Given a degree `degree`, the function returns a list of…",32,[[["self"],["i32"]],[["vec",["usize"]],["usize"]]]],[11,R[288],E,"Given a non-generator basis element of the algebra,…",32,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[289],E,"Get any relations that the algebra wants checked to ensure…",32,[[["self"],["i32"]],[["vec",["vec"]],["vec"]]]],[8,R[329],E,E,N,N],[10,R[254],E,"This function decomposes an element of the algebra as a…",33,[[["self"],["usize"],["i32"]],["vec"]]],[10,R[255],E,"Expresses Delta(x) as sum_j (A_{ij} (x) B_{ij}). Here x…",33,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[147],E,E,22,[[[R[34]],["value"]],[[R[129]],["box",["error"]],[R[4],[R[129],"box"]]]]],[0,"change_of_basis",R[99],E,N,N],[5,"adem_to_milnor_on_basis","rust_ext::change_of_basis",E,N,[[["u32"],[R[23]],[R[130]],[R[131]],["i32"],["usize"]]]],[5,"adem_to_milnor",E,E,N,[[["u32"],[R[23]],[R[130]],[R[131]],["i32"],[R[23]]]]],[5,"milnor_to_adem_on_basis",E,E,N,[[["u32"],[R[23]],[R[130]],[R[131]],["i32"],["usize"]]]],[5,"milnor_to_adem_on_basis_2",E,E,N,[[["u32"],[R[23]],[R[130]],[R[131]],["i32"],["usize"]]]],[5,"milnor_to_adem_on_basis_generic",E,E,N,[[["u32"],[R[23]],[R[130]],[R[131]],["i32"],["usize"]]]],[5,"milnor_to_adem",E,E,N,[[["u32"],[R[23]],[R[130]],[R[131]],["i32"],[R[23]]]]],[5,"adem_q",E,E,N,[[["u32"],[R[23]],[R[130]],[R[131]]]]],[5,"adem_plist",E,E,N,[[["u32"],[R[23]],[R[130]],[R[131]],["i32"],["vec",["u32"]]]]],[0,"steenrod_parser",R[99],E,N,N],[3,R[330],R[245],E,N,N],[12,"info",E,E,34,N],[4,R[331],E,E,N,N],[13,"AList",E,E,35,N],[13,"PList",E,E,35,N],[13,"P",E,E,35,N],[13,"Q",E,E,35,N],[4,R[332],E,E,N,N],[13,"Product",E,E,36,N],[13,"Sum",E,E,36,N],[13,"BasisElt",E,E,36,N],[13,"Scalar",E,E,36,N],[4,R[333],E,E,N,N],[13,"Act",E,E,37,N],[13,"Sum",E,E,37,N],[13,"ModuleBasisElt",E,E,37,N],[4,R[334],E,E,N,N],[13,"Bockstein",E,E,38,N],[13,"Sq",E,E,38,N],[5,"digits",E,E,N,[[["str"]],[["u32"],["str"],[R[132],["str","u32"]]]]],[5,"comma_separated_integer_list",E,E,N,[[["str"]],[["vec",["u32"]],[R[132],["str","vec"]],["str"]]]],[5,"comma_separated_sequence",E,E,N,[[["str"]],[["vec",["u32"]],[R[132],["str","vec"]],["str"]]]],[5,"space_separated_integer_list",E,E,N,[[["str"]],[["vec",["u32"]],[R[132],["str","vec"]],["str"]]]],[5,"space_separated_sequence",E,E,N,[[["str"]],[["vec",["u32"]],[R[132],["str","vec"]],["str"]]]],[5,"bockstein_b",E,E,N,[[["str"]],[[R[132],["str",R[133]]],[R[133]],["str"]]]],[5,"sq_digits",E,E,N,[[["str"]],[[R[132],["str",R[133]]],[R[133]],["str"]]]],[5,"space_separated_bockstein_or_sq_list",E,E,N,[[["str"]],[["vec",[R[133]]],[R[132],["str","vec"]],["str"]]]],[5,"space_separated_bockstein_or_sq_sequence",E,E,N,[[["str"]],[["vec",[R[133]]],[R[132],["str","vec"]],["str"]]]],[5,"algebra_generator",E,E,N,[[["str"]],[[R[134]],["str"],[R[132],["str",R[134]]]]]],[5,"scalar",E,E,N,[[["str"]],[[R[134]],["str"],[R[132],["str",R[134]]]]]],[5,"algebra_parens",E,E,N,[[["str"]],[[R[134]],["str"],[R[132],["str",R[134]]]]]],[5,"algebra_factor",E,E,N,[[["str"]],[[R[134]],["str"],[R[132],["str",R[134]]]]]],[5,"algebra_term",E,E,N,[[["str"]],[[R[134]],["str"],[R[132],["str",R[134]]]]]],[5,"algebra_expr",E,E,N,[[["str"]],[[R[134]],["str"],[R[132],["str",R[134]]]]]],[5,"module_generator",E,E,N,[[["str"]],[[R[132],["str",R[135]]],[R[135]],["str"]]]],[5,"module_parens",E,E,N,[[["str"]],[[R[132],["str",R[135]]],[R[135]],["str"]]]],[5,"module_factor",E,E,N,[[["str"]],[[R[132],["str",R[135]]],[R[135]],["str"]]]],[5,"module_term",E,E,N,[[["str"]],[[R[132],["str",R[135]]],[R[135]],["str"]]]],[5,"module_expr",E,E,N,[[["str"]],[[R[132],["str",R[135]]],[R[135]],["str"]]]],[5,"parse_algebra",E,E,N,[[["str"]],[[R[4],[R[134],"box"]],["box",["error"]],[R[134]]]]],[5,"parse_module",E,E,N,[[["str"]],[[R[135]],["box",["error"]],[R[4],[R[135],"box"]]]]],[0,"steenrod_evaluator",R[99],E,N,N],[3,R[335],R[246],E,N,N],[12,R[136],E,E,39,N],[12,R[137],E,E,39,N],[3,R[360],E,E,N,N],[3,R[336],E,E,N,N],[12,"name",E,E,40,N],[5,"evaluate_algebra_adem",E,E,N,[[["str"],[R[130]],[R[131]]],[["box",["error"]],[R[4],["box"]]]]],[5,"evaluate_algebra_milnor",E,E,N,[[["str"],[R[130]],[R[131]]],[["box",["error"]],[R[4],["box"]]]]],[5,"evaluate_algebra_tree",E,E,N,[[[R[134]],[R[130]],[R[131]]],[["box",["error"]],[R[4],["box"]]]]],[5,"evaluate_algebra_tree_helper",E,E,N,[[[R[2],["i32"]],[R[130]],[R[131]],["i32"],[R[134]]],[["box",["error"]],[R[4],["box"]]]]],[5,"evaluate_basis_element",E,E,N,[[[R[2],["i32"]],[R[130]],[R[131]],["i32"],[R[303]]],[["box",["error"]],[R[4],["box"]]]]],[5,"evaluate_module",E,E,N,[[[R[130]],[R[131]],[R[234]],["m"],["str"]],[["box",["error"]],[R[4],["box"]]]]],[5,"evaluate_module_tree",E,E,N,[[[R[130]],[R[131]],[R[234]],["m"],[R[135]]],[["box",["error"]],[R[4],["box"]]]]],[5,"evaluate_module_tree_helper",E,E,N,[[[R[2],["i32"]],[R[130]],[R[131]],[R[234]],["m"],["i32"],[R[135]]],[["box",["error"]],[R[4],["box"]]]]],[5,"evaluate_module_basis_element",E,E,N,[[[R[2],["i32"]],[R[130]],[R[131]],[R[234]],["m"],["i32"],[R[34]]],[["box",["error"]],[R[4],["box"]]]]],[5,"bockstein_or_sq_to_adem_basis_elt",E,E,N,[[[R[133]],["i32"]],[R[115]]]],[5,"evaluate_p_or_b_list",E,E,N,[[[R[131]]]]],[11,"new",E,E,39,[[["u32"]],["self"]]],[11,R[138],E,E,39,[[["self"],["i32"]]]],[11,"evaluate_adem_to_string",E,E,39,[[["self"],["str"]],[[R[4],[R[34],"box"]],[R[34]],["box",["error"]]]]],[11,"evaluate_milnor_to_string",E,E,39,[[["self"],["str"]],[[R[4],[R[34],"box"]],[R[34]],["box",["error"]]]]],[11,"evaluate_adem",E,E,39,[[["self"],["str"]],[["box",["error"]],[R[4],["box"]]]]],[11,"evaluate_milnor",E,E,39,[[["self"],["str"]],[["box",["error"]],[R[4],["box"]]]]],[0,"module",R[99],E,N,N],[3,R[337],R[145],E,N,N],[12,R[140],E,E,41,N],[12,"name",E,E,41,N],[12,R[144],E,E,41,N],[12,R[141],E,E,41,N],[12,"actions",E,E,41,N],[3,R[143],E,R[174],N,N],[12,R[140],E,E,42,N],[12,"min",E,E,42,N],[12,R[175],E,E,42,N],[12,"max",E,E,42,N],[3,R[170],E,E,N,N],[12,R[140],E,E,43,N],[12,"source",E,E,43,N],[12,"target",E,E,43,N],[12,R[142],E,E,43,N],[3,R[338],E,E,N,N],[12,"name",E,E,44,N],[12,R[11],E,E,44,N],[12,R[139],E,E,44,N],[12,R[148],E,E,44,N],[12,"map",E,E,44,N],[12,R[149],E,E,44,N],[3,R[153],E,R[154],N,N],[12,"module",E,E,45,N],[12,R[155],E,E,45,N],[3,R[156],E,R[157],N,N],[12,"module",E,E,46,N],[12,R[158],E,E,46,N],[12,R[159],E,E,46,N],[3,R[165],E,E,N,N],[12,R[140],E,E,47,N],[12,"name",E,E,47,N],[12,R[11],E,E,47,N],[12,R[29],E,E,47,N],[12,R[141],E,E,47,N],[12,R[166],E,E,47,N],[12,"table",E,E,47,N],[3,R[162],E,E,N,N],[12,"num_gens",E,E,48,N],[12,R[163],E,E,48,N],[12,R[164],E,E,48,N],[3,R[172],E,E,N,N],[12,"left",E,E,49,N],[12,"right",E,E,49,N],[12,R[142],E,E,49,N],[3,R[173],E,E,N,N],[12,R[140],E,E,50,N],[12,R[11],E,E,50,N],[12,R[213],E,E,50,N],[12,R[142],E,E,50,N],[3,R[339],E,E,N,N],[12,"module_type",E,E,51,N],[3,R[340],E,E,N,N],[12,"relation",E,E,52,N],[12,"value",E,E,52,N],[4,R[341],E,E,N,N],[13,R[337],E,E,53,N],[13,R[338],E,E,53,N],[13,R[143],E,E,53,N],[0,"finite_dimensional_module",E,E,N,N],[3,"FiniteDimensionalModule","rust_ext::module::finite_dimensional_module",E,N,N],[12,R[140],E,E,41,N],[12,"name",E,E,41,N],[12,R[144],E,E,41,N],[12,R[141],E,E,41,N],[12,"actions",E,E,41,N],[11,"test_equal",R[145],E,41,[[["self"]],[[R[34]],[R[4],[R[34]]]]]],[11,"new",E,E,41,[[[R[129]],["usize"],["bivec",["usize"]],[R[34]],["arc",[R[129]]]],["self"]]],[11,"set_basis_element_name",E,E,41,[[["self"],["usize"],["i32"],[R[34]]]]],[11,R[150],E,E,41,[[["value"]]]],[11,"allocate_actions",E,E,41,[[["bivec"],["arc"]],[["bivec",["bivec"]],["bivec",["vec"]]]]],[11,"set_action_vector",E,E,41,[[["self"],["usize"],["i32"],[R[23]]]]],[11,"set_action",E,E,41,[[["self"],["u32"],["usize"],["i32"],["vec",["u32"]]]]],[11,R[72],E,R[146],41,[[["self"],["usize"],["i32"]],[R[23]]]],[11,"action_mut",E,R[146],41,[[["self"],["usize"],["i32"]],[R[23]]]],[11,R[147],E,E,41,[[[R[129]],["value"],["arc",[R[129]]]],["self"]]],[11,"parse_action",E,E,41,[[["self"],[R[234]],["str"]]]],[11,"parse_element",E,E,41,[[["str"]],[[R[132],["str"]],["str"]]]],[11,"check_validity",E,E,41,[[["self"],["i32"]],[[R[4],["box"]],["box",["error"]]]]],[11,"extend_actions",E,E,41,[[["self"],["i32"]]]],[11,"minimal_actions_to_json",E,E,41,[[["self"]],["value"]]],[11,"to_minimal_json",E,E,41,[[["self"]],["value"]]],[11,"actions_to_json",E,E,41,[[["self"]],["value"]]],[0,"finitely_presented_module",E,E,N,N],[3,R[342],R[247],E,N,N],[12,R[151],E,E,54,N],[12,R[152],E,E,54,N],[3,"FinitelyPresentedModule",E,E,N,N],[12,"name",E,E,44,N],[12,R[11],E,E,44,N],[12,R[139],E,E,44,N],[12,R[148],E,E,44,N],[12,"map",E,E,44,N],[12,R[149],E,E,44,N],[11,"new",R[145],E,44,[[[R[129]],["i32"],[R[34]],["arc",[R[129]]]],["self"]]],[11,R[167],E,E,44,[[["self"],["vec",[R[34]]],["i32"],[R[34]]]]],[11,"add_relations",E,E,44,[[["self"],["matrix"],["i32"]]]],[11,R[150],E,E,44,[[["value"]]]],[11,R[147],E,E,44,[[[R[129]],["value"],["arc",[R[129]]]],["self"]]],[11,"relations_to_json",E,E,44,[[["self"]],["value"]]],[11,R[151],E,E,44,[[["self"],["usize"],["i32"]],["isize"]]],[11,R[152],E,E,44,[[["self"],["usize"],["i32"]],["usize"]]],[0,"truncated_module",E,E,N,N],[3,R[153],"rust_ext::module::truncated_module",R[154],N,N],[12,"module",E,E,45,N],[12,R[155],E,E,45,N],[11,"new",R[145],E,45,[[["arc"],["i32"]],["self"]]],[0,"quotient_module",E,E,N,N],[3,R[156],"rust_ext::module::quotient_module",R[157],N,N],[12,"module",E,E,46,N],[12,R[158],E,E,46,N],[12,R[159],E,E,46,N],[11,"new",R[145],E,46,[[["arc"]],["self"]]],[11,"quotient",E,E,46,[[["self"],[R[23]],["i32"]]]],[11,"quotient_basis_elements",E,E,46,[[["self"],["i32"]]]],[11,"quotient_vectors",E,E,46,[[["self"],[R[23]],["i32"],["vec",[R[23]]]]]],[11,"flush",E,E,46,[[["self"],["i32"]]]],[11,"quotient_all",E,E,46,[[["self"],["i32"]]]],[11,"act_on_original_basis",E,E,46,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,"reduce",E,E,46,[[["self"],[R[23]],["i32"]]]],[11,"old_basis_to_new",E,E,46,[[["self"],[R[23]],["i32"],[R[23]]]]],[0,"free_module",E,E,N,N],[3,R[343],R[248],E,N,N],[12,"operation_degree",E,E,55,N],[12,"operation_index",E,E,55,N],[12,R[160],E,E,55,N],[12,R[161],E,E,55,N],[3,R[162],E,E,N,N],[12,"num_gens",E,E,48,N],[12,R[163],E,E,48,N],[12,R[164],E,E,48,N],[3,R[165],E,E,N,N],[12,R[140],E,E,47,N],[12,"name",E,E,47,N],[12,R[11],E,E,47,N],[12,R[29],E,E,47,N],[12,R[141],E,E,47,N],[12,R[166],E,E,47,N],[12,"table",E,E,47,N],[11,"new",R[145],E,47,[[[R[129]],["i32"],[R[34]],["arc",[R[129]]]],["self"]]],[11,R[231],E,E,47,[[["self"]],["i32"]]],[11,"number_of_gens_in_degree",E,E,47,[[["self"],["i32"]],["usize"]]],[11,"construct_table",E,E,47,[[["self"],["i32"]]]],[11,"dimension_with_table",E,E,47,[[[R[168]]],["usize"]]],[11,R[167],E,E,47,[[["self"],[R[181],["i32"]],["usize"],["i32"],["vec",[R[34]]],[R[2],["vec"]],[R[168]]]]],[11,"add_generators_to_table",E,E,47,[[["self"],["usize"],[R[168]],["i32"]]]],[11,"generator_offset",E,E,47,[[["self"],["usize"],["i32"]],["usize"]]],[11,"operation_generator_to_index",E,E,47,[[["self"],["usize"],["i32"]],["usize"]]],[11,"operation_generator_pair_to_idx",E,E,47,[[["self"],[R[169]]],["usize"]]],[11,"index_to_op_gen",E,E,47,[[["self"],["usize"],["i32"]],[R[169]]]],[11,"element_to_json",E,E,47,[[["self"],[R[23]],["i32"]],["value"]]],[11,"add_generators_immediate",E,E,47,[[["self"],["vec",[R[34]]],["usize"],["i32"],[R[2],["vec"]]]]],[11,R[180],E,E,47,[[["self"],["i32"]]]],[11,"get_degrees_with_gens",E,E,47,[[["self"],["i32"]],[["vec",["i32"]],["i32"]]]],[0,"hom_module",E,E,N,N],[3,R[170],"rust_ext::module::hom_module",E,N,N],[12,R[140],E,E,43,N],[12,"source",E,E,43,N],[12,"target",E,E,43,N],[12,R[142],E,E,43,N],[11,"new",R[145],E,43,[[["arc"],[R[171]],["arc",[R[171]]]],["self"]]],[11,"source",E,E,43,[[["self"]],[[R[171]],["arc",[R[171]]]]]],[11,"target",E,E,43,[[["self"]],["arc"]]],[11,"element_to_homomorphism",E,E,43,[[["self"],[R[23]],["i32"]],[R[190]]]],[11,"evaluate_basis_map_on_element",E,E,43,[[["self"],["u32"],[R[23]],["i32"],["usize"],[R[23]]]]],[0,"tensor_module",E,E,N,N],[3,R[172],"rust_ext::module::tensor_module",E,N,N],[12,"left",E,E,49,N],[12,"right",E,E,49,N],[12,R[142],E,E,49,N],[11,"new",R[145],E,49,[[["arc"],["arc"]],["self"]]],[11,"seek_module_num",E,E,49,[[["self"],["usize"],["i32"]],["i32"]]],[11,"offset",E,E,49,[[["self"],["i32"]],["usize"]]],[11,"act_helper",E,E,49,[[["self"],["u32"],[R[23]],["i32"],["usize"],[R[23]]]]],[0,"sum_module",E,E,N,N],[3,R[173],"rust_ext::module::sum_module",E,N,N],[12,R[140],E,E,50,N],[12,R[11],E,E,50,N],[12,R[213],E,E,50,N],[12,R[142],E,E,50,N],[11,"new",R[145],E,50,[[[R[129]],["arc"],["i32"],["vec",["arc"]],["arc",[R[129]]]],["self"]]],[11,"get_module_num",E,E,50,[[["self"],["usize"],["i32"]],["usize"]]],[11,"offset",E,E,50,[[["self"],["usize"],["i32"]],["usize"]]],[0,"rpn",E,E,N,N],[3,R[143],R[249],R[174],N,N],[12,R[140],E,E,42,N],[12,"min",E,E,42,N],[12,R[175],E,E,42,N],[12,"max",E,E,42,N],[3,"RPSpec",E,E,N,N],[12,"min",E,E,56,N],[12,R[175],E,E,56,N],[12,"max",E,E,56,N],[5,"coef_adem",E,E,N,[[["usize"],["i32"],[R[131]]],["bool"]]],[5,"coef_milnor",E,E,N,[[["usize"],[R[130]],["i32"]],["bool"]]],[17,"_IMPL_DESERIALIZE_FOR_RPSpec",E,E,N,N],[11,"new",R[145],E,42,[[[R[129]],[R[2],["i32"]],["i32"],["arc",[R[129]]],["bool"]],["self"]]],[11,R[147],E,E,42,[[[R[129]],["value"],["arc",[R[129]]]],[["box",["error"]],[R[4],["box"]]]]],[0,"homomorphism",E,E,N,N],[3,R[178],R[179],E,N,N],[12,"source",E,E,57,N],[12,"target",E,E,57,N],[12,"outputs",E,E,57,N],[12,"kernel",E,E,57,N],[12,R[177],E,E,57,N],[12,R[11],E,E,57,N],[12,R[29],E,E,57,N],[12,R[176],E,E,57,N],[3,R[183],E,E,N,N],[12,"source",E,E,58,N],[12,"target",E,E,58,N],[12,R[176],E,E,58,N],[3,R[188],E,R[189],N,N],[12,"source",E,E,59,N],[12,"target",E,E,59,N],[12,"map",E,E,59,N],[12,"kernel",E,E,59,N],[12,R[177],E,E,59,N],[3,R[184],E,E,N,N],[12,"lock",E,E,60,N],[12,"source",E,E,60,N],[12,"target",E,E,60,N],[12,R[176],E,E,60,N],[12,R[21],E,E,60,N],[12,R[185],E,E,60,N],[12,"kernels",E,E,60,N],[3,R[201],E,E,N,N],[12,"source",E,E,61,N],[12,"target",E,E,61,N],[12,"map",E,E,61,N],[3,R[199],E,E,N,N],[12,"source",E,E,62,N],[12,R[200],E,E,62,N],[3,R[192],E,E,N,N],[12,"f",E,E,63,N],[12,"s",E,E,63,N],[12,T,E,E,63,N],[3,R[193],E,E,N,N],[12,"f",E,E,64,N],[12,"s",E,E,64,N],[12,T,E,E,64,N],[3,R[196],E,E,N,N],[12,"f",E,E,65,N],[12,"s",E,E,65,N],[12,T,E,E,65,N],[3,R[197],E,E,N,N],[12,"f",E,E,66,N],[12,"s",E,E,66,N],[12,T,E,E,66,N],[0,"free_module_homomorphism",E,E,N,N],[3,R[178],"rust_ext::module::homomorphism::free_module_homomorphism",E,N,N],[12,"source",E,E,57,N],[12,"target",E,E,57,N],[12,"outputs",E,E,57,N],[12,"kernel",E,E,57,N],[12,R[177],E,E,57,N],[12,R[11],E,E,57,N],[12,R[29],E,E,57,N],[12,R[176],E,E,57,N],[11,"new",R[179],E,57,[[["arc"],["arc",[R[171]]],["i32"],[R[171]]],["self"]]],[11,R[176],E,E,57,[[["self"]],["i32"]]],[11,R[11],E,E,57,[[["self"]],["i32"]]],[11,"output",E,E,57,[[["self"],["usize"],["i32"]],[R[23]]]],[11,"extend_by_zero_safe",E,E,57,[[["self"],["i32"]]]],[11,R[180],E,E,57,[[["self"],[R[181]],["i32"]]]],[11,"add_generators_from_big_vector",E,E,57,[[["self"],[R[23]],["i32"],[R[181]]]]],[11,"add_generators_from_matrix_rows",E,E,57,[[["self"],["usize"],["i32"],[R[181]],["matrix"]]]],[11,"apply_to_generator",E,E,57,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,"apply_to_basis_element_with_table",E,E,57,[[["self"],["u32"],[R[23]],["i32"],[R[168]],["usize"]]]],[11,R[203],E,E,57,[[["self"],["i32"],["matrix"]]]],[11,"get_matrix_with_table",E,"Arguments * `degree` - The internal degree of the target…",57,[[["self"],[R[168]],["i32"],["matrix"]]]],[11,"lock",E,E,57,[[["self"]],[[R[181],["i32"]],["i32"]]]],[11,"set_kernel",E,E,57,[[["self"],["i32"],[R[22]],[R[181]]]]],[11,"set_quasi_inverse",E,E,57,[[["self"],[R[182]],["i32"],[R[181]]]]],[0,"generic_zero_homomorphism",E,E,N,N],[3,R[183],"rust_ext::module::homomorphism::generic_zero_homomorphism",E,N,N],[12,"source",E,E,58,N],[12,"target",E,E,58,N],[12,R[176],E,E,58,N],[11,"new",R[179],E,58,[[["arc"],["i32"],["arc"]],["self"]]],[0,"bounded_module_homomorphism",E,E,N,N],[3,R[184],"rust_ext::module::homomorphism::bounded_module_homomorphism",E,N,N],[12,"lock",E,E,60,N],[12,"source",E,E,60,N],[12,"target",E,E,60,N],[12,R[176],E,E,60,N],[12,R[21],E,E,60,N],[12,R[185],E,E,60,N],[12,"kernels",E,E,60,N],[11,"from",R[179],E,60,[[["f"]],["self"]]],[11,"replace_source",E,"This function replaces the source of the…",60,[[["arc"],[R[186]]],[[R[186]],[R[187]]]]],[11,"replace_target",E,"See `replace_source`",60,[[["arc"],[R[186]]],[[R[187]],[R[186]]]]],[0,"hom_pullback",E,E,N,N],[3,R[188],"rust_ext::module::homomorphism::hom_pullback",R[189],N,N],[12,"source",E,E,59,N],[12,"target",E,E,59,N],[12,"map",E,E,59,N],[12,"kernel",E,E,59,N],[12,R[177],E,E,59,N],[11,"new",R[179],E,59,[[["arc",[R[191]]],[R[190],[R[171]]],[R[191]],["arc",[R[190]]]],["self"]]],[0,"truncated_homomorphism",E,E,N,N],[3,R[192],"rust_ext::module::homomorphism::truncated_homomorphism",E,N,N],[12,"f",E,E,63,N],[12,"s",E,E,63,N],[12,T,E,E,63,N],[3,R[193],E,E,N,N],[12,"f",E,E,64,N],[12,"s",E,E,64,N],[12,T,E,E,64,N],[11,"new",R[179],E,63,[[["arc"],[R[194]],["arc",[R[194]]],["arc",[R[194]]],[R[194]]],["self"]]],[11,R[195],E,E,63,[[["self"]],["i32"]]],[11,"new",E,E,64,[[["arc"],["arc"],["arc",[R[194]]],[R[194]]],["self"]]],[11,R[195],E,E,64,[[["self"]],["i32"]]],[0,"quotient_homomorphism",E,E,N,N],[3,R[196],"rust_ext::module::homomorphism::quotient_homomorphism",E,N,N],[12,"f",E,E,65,N],[12,"s",E,E,65,N],[12,T,E,E,65,N],[3,R[197],E,E,N,N],[12,"f",E,E,66,N],[12,"s",E,E,66,N],[12,T,E,E,66,N],[11,"new",R[179],E,65,[[["arc"],[R[198]],["arc",[R[198]]],["arc",[R[198]]],[R[198]]],["self"]]],[11,"new",E,E,66,[[["arc"],["arc"],["arc",[R[198]]],[R[198]]],["self"]]],[0,"fp_module_homomorphism",E,E,N,N],[3,R[199],"rust_ext::module::homomorphism::fp_module_homomorphism",E,N,N],[12,"source",E,E,62,N],[12,R[200],E,E,62,N],[8,R[202],E,E,N,N],[10,R[152],E,E,67,[[["self"],["usize"],["i32"]],["usize"]]],[10,R[139],E,E,67,[[["self"]],["arc"]]],[0,"finite_module_homomorphism",R[179],E,N,N],[3,R[201],R[250],E,N,N],[12,"source",E,E,61,N],[12,"target",E,E,61,N],[12,"map",E,E,61,N],[4,"FMHI",E,E,N,N],[13,"FD",E,E,68,N],[13,"FP",E,E,68,N],[13,"RP",E,E,68,N],[8,R[202],R[179],E,N,N],[10,R[152],E,E,67,[[["self"],["usize"],["i32"]],["usize"]]],[10,R[139],E,E,67,[[["self"]],["arc"]]],[8,R[344],E,E,N,N],[16,"Source",E,E,69,N],[16,"Target",E,E,69,N],[18,"CUSTOM_QI",E,E,69,N],[10,"source",E,E,69,[[["self"]],["arc"]]],[10,"target",E,E,69,[[["self"]],["arc"]]],[10,R[176],E,E,69,[[["self"]],["i32"]]],[10,R[256],E,"Calling this function when `input_idx <…",69,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[10,"kernel",E,E,69,[[["self"],["i32"]],[R[22]]]],[10,R[177],E,E,69,[[["self"],["i32"]],[R[182]]]],[10,R[257],E,E,69,[[["self"],["i32"]]]],[11,"apply",E,E,69,[[["self"],["u32"],[R[23]],["i32"],[R[23]]]]],[11,"prime",E,E,69,[[["self"]],["u32"]]],[11,R[11],E,E,69,[[["self"]],["i32"]]],[11,"image",E,"Returns the image of the module homomorphism in degree…",69,[[["self"],["i32"]],[R[2]]]],[11,R[221],E,"A version of kernel_and_quasi_inverse that, in fact,…",69,[[["self"],["i32"]],[R[182]]]],[11,"kernel_and_quasi_inverse",E,E,69,[[["self"],["i32"]]]],[11,R[203],E,"The (sliced) dimensions of `matrix` must be equal to…",69,[[["self"],["i32"],["matrix"]]]],[11,R[258],E,E,69,[[["self"],[R[23]],["i32"],[R[23]]]]],[8,R[345],E,E,N,N],[10,R[260],E,E,70,[[["arc"],["i32"],["arc"]],["self"]]],[8,R[346],R[145],E,N,N],[10,R[29],E,"`max_degree` is the a degree such that if t >…",71,[[["self"]],["i32"]]],[11,R[204],E,E,71,[[["self"]],["usize"]]],[11,"to_fd_module",E,E,71,[[["self"]],[R[208]]]],[8,"Module",E,E,N,N],[10,R[140],E,E,72,[[["self"]],[[R[129]],["arc",[R[129]]]]]],[10,"name",E,E,72,[[["self"]],["str"]]],[10,R[11],E,E,72,[[["self"]],["i32"]]],[11,R[138],E,E,72,[[["self"],["i32"]]]],[10,R[101],E,E,72,[[["self"],["i32"]],["usize"]]],[10,R[296],E,E,72,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[10,R[205],E,E,72,[[["self"],["usize"],["i32"]],[R[34]]]],[11,"is_unit",E,E,72,[[["self"]],["bool"]]],[11,"prime",E,E,72,[[["self"]],["u32"]]],[11,R[297],E,"Whether act_on_basis_borrow is available.",72,[[["self"]],["bool"]]],[11,R[298],E,"Returns a borrow of the value of the corresponding action…",72,[[["self"],["usize"],["i32"]],[R[23]]]],[11,"act",E,E,72,[[["self"],["u32"],[R[23]],["i32"],["usize"],[R[23]]]]],[11,R[299],E,E,72,[[["self"],["u32"],[R[23]],["i32"],[R[23]]]]],[11,R[300],E,E,72,[[["self"],["i32"]],[R[34]]]],[11,R[206],E,E,72,[[["self"],[R[23]],["i32"]],[R[34]]]],[8,R[347],E,E,N,N],[10,R[210],E,E,73,[[[R[129]],["arc",[R[129]]],["i32"]],["self"]]],[11,R[147],E,E,53,[[[R[129]],["arc",[R[129]]],["value"]],[["box",["error"]],[R[4],["box"]]]]],[11,"into_real_projective_space",E,E,53,[[],[[R[2],[R[207]]],[R[207]]]]],[11,"into_fp_module",E,E,53,[[],[[R[308]],[R[2],[R[308]]]]]],[11,"into_fd_module",E,E,53,[[],[[R[2],[R[208]]],[R[208]]]]],[0,R[209],R[99],E,N,N],[3,R[217],R[216],E,N,N],[12,R[213],E,E,74,N],[12,R[210],E,E,74,N],[12,R[31],E,E,74,N],[3,R[218],E,E,N,N],[12,R[213],E,E,75,N],[12,R[210],E,E,75,N],[12,R[31],E,E,75,N],[12,R[212],E,E,75,N],[12,R[211],E,E,75,N],[3,R[219],E,E,N,N],[12,"lock",E,E,76,N],[12,"left_cc",E,E,76,N],[12,R[220],E,E,76,N],[12,R[213],E,E,76,N],[12,R[210],E,E,76,N],[12,R[31],E,E,76,N],[3,R[348],E,"`chain_maps` is required to be non-empty",N,N],[12,"s_shift",E,E,77,N],[12,R[211],E,E,77,N],[4,R[349],E,E,N,N],[13,"Homological",E,E,78,N],[13,"Cohomological",E,E,78,N],[0,"hom_complex",E,E,N,N],[3,R[350],R[251],E,N,N],[12,"lock",E,E,79,N],[12,R[214],E,E,79,N],[12,R[212],E,E,79,N],[12,R[213],E,E,79,N],[12,R[210],E,E,79,N],[12,R[31],E,E,79,N],[3,R[351],E,E,N,N],[12,R[214],E,E,80,N],[12,R[212],E,E,80,N],[12,"lock",E,E,80,N],[12,"source",E,E,80,N],[12,"target",E,E,80,N],[12,R[185],E,E,80,N],[6,"SHM",E,E,N,N],[11,"new",E,E,79,[[["arc"],[R[215]],["arc",[R[215]]]],["self"]]],[11,R[214],E,E,79,[[["self"]],["arc"]]],[11,R[212],E,E,79,[[["self"]],[[R[215]],["arc",[R[215]]]]]],[0,"finite_chain_complex",R[216],E,N,N],[3,R[217],"rust_ext::chain_complex::finite_chain_complex",E,N,N],[12,R[213],E,E,74,N],[12,R[210],E,E,74,N],[12,R[31],E,E,74,N],[3,R[218],E,E,N,N],[12,R[213],E,E,75,N],[12,R[210],E,E,75,N],[12,R[31],E,E,75,N],[12,R[212],E,E,75,N],[12,R[211],E,E,75,N],[11,R[29],R[216],E,74,[[["self"]],["i32"]]],[11,"pop",E,E,74,[[["self"]]]],[11,"ccdz",E,E,74,[[["arc"]],["self"]]],[0,"tensor_product_chain_complex",E,E,N,N],[3,R[219],R[222],E,N,N],[12,"lock",E,E,76,N],[12,"left_cc",E,E,76,N],[12,R[220],E,E,76,N],[12,R[213],E,E,76,N],[12,R[210],E,E,76,N],[12,R[31],E,E,76,N],[3,R[352],E,E,N,N],[12,"left_cc",E,E,81,N],[12,R[220],E,E,81,N],[12,"source_s",E,E,81,N],[12,"lock",E,E,81,N],[12,"source",E,E,81,N],[12,"target",E,E,81,N],[12,R[185],E,E,81,N],[6,"STM",E,E,N,N],[6,"TensorSquareCC",E,E,N,N],[11,"new",R[216],E,76,[[["arc"],["arc"]],["self"]]],[11,"left_cc",E,E,76,[[["self"]],["arc"]]],[11,R[220],E,E,76,[[["self"]],["arc"]]],[11,"swap",E,"This function sends a (x) b to b (x) a. This makes sense…",76,[[["self"],["u32"],[R[23]],["i32"],[R[23]]]]],[11,R[221],R[222],E,81,[[["self"],["i32"]]]],[8,"ResolutionComplex",R[216],E,N,N],[8,R[353],E,"A chain complex is defined to start in degree 0. The…",N,N],[16,"Module",E,E,82,N],[16,R[224],E,E,82,N],[11,"prime",E,E,82,[[["self"]],["u32"]]],[10,R[140],E,E,82,[[["self"]],[[R[129]],["arc",[R[129]]]]]],[10,R[11],E,E,82,[[["self"]],["i32"]]],[10,R[210],E,E,82,[[["self"]],["arc"]]],[10,"module",E,E,82,[[["self"],["u32"]],["arc"]]],[10,R[223],E,E,82,[[["self"],["u32"]],["arc"]]],[10,R[225],E,E,82,[[["self"],["u32"],["i32"]]]],[10,R[261],E,E,82,[[["self"],["u32"],["usize"],["i32"],["vec",["usize"]]]]],[10,R[262],E,E,82,[[["self"],["u32"],["i32"]],["vec"]]],[10,R[263],E,E,82,[[["self"],["u32"]],["i32"]]],[11,"compute_homology_through_bidegree",E,E,82,[[["self"],["u32"],["i32"]]]],[11,R[264],E,E,82,[[["self"],["u32"],["i32"]],["usize"]]],[11,R[226],E,E,82,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,"compute_homology",E,E,82,[[["self"],["u32"],["i32"]]]],[8,R[354],E,E,N,N],[16,"Module",E,E,83,N],[16,R[224],E,E,83,N],[11,"prime",E,E,83,[[["self"]],["u32"]]],[10,R[140],E,E,83,[[["self"]],[[R[129]],["arc",[R[129]]]]]],[10,R[11],E,E,83,[[["self"]],["i32"]]],[10,R[210],E,E,83,[[["self"]],["arc"]]],[10,"module",E,E,83,[[["self"],["u32"]],["arc"]]],[10,R[223],E,E,83,[[["self"],["u32"]],["arc"]]],[10,R[225],E,E,83,[[["self"],["u32"],["i32"]]]],[10,"set_cohomology_basis",E,E,83,[[["self"],["u32"],["usize"],["i32"],["vec",["usize"]]]]],[10,"cohomology_basis",E,E,83,[[["self"],["u32"],["i32"]],["vec"]]],[10,"max_cohomology_degree",E,E,83,[[["self"],["u32"]],["i32"]]],[11,"compute_cohomology_through_bidegree",E,E,83,[[["self"],["u32"],["i32"]]]],[11,"cohomology_dimension",E,E,83,[[["self"],["u32"],["i32"]],["usize"]]],[11,R[226],E,E,83,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,"compute_cohomology",E,E,83,[[["self"],["u32"],["i32"]]]],[8,R[355],E,"An augmented chain complex is a map of chain complexes C…",N,N],[16,"TargetComplex",E,E,84,N],[16,R[348],E,E,84,N],[10,"target",E,E,84,[[["self"]],["arc"]]],[10,R[265],E,E,84,[[["self"],["u32"]],["arc"]]],[8,R[356],E,"A bounded chain complex is a chain complex C for which C_s…",N,N],[10,"max_s",E,E,85,[[["self"]],["u32"]]],[0,R[58],R[99],E,N,N],[3,R[357],R[252],"ResolutionInner contains the data of the actual…",N,N],[12,"complex",E,E,86,N],[12,R[213],E,E,86,N],[12,R[210],E,E,86,N],[12,R[211],E,E,86,N],[12,R[31],E,E,86,N],[12,"kernels",E,E,86,N],[3,"Cocycle",E,E,N,N],[12,"s",E,E,87,N],[12,T,E,E,87,N],[12,"class",E,E,87,N],[12,"name",E,E,87,N],[3,"SelfMap",E,E,N,N],[12,"s",E,E,88,N],[12,T,E,E,88,N],[12,"name",E,E,88,N],[12,"map_data",E,E,88,N],[12,"map",E,E,88,N],[3,R[358],E,"Fields * `kernels` - For each internal degree, store the…",N,N],[12,"inner",E,E,89,N],[12,"next_s",E,E,89,N],[12,"next_t",E,E,89,N],[12,"add_class",E,E,89,N],[12,R[230],E,E,89,N],[12,"filtration_one_products",E,E,89,N],[12,R[227],E,E,89,N],[12,"unit_resolution_owner",E,E,89,N],[12,"product_names",E,E,89,N],[12,"product_list",E,E,89,N],[12,"chain_maps_to_unit_resolution",E,E,89,N],[12,"max_product_homological_degree",E,E,89,N],[12,"self_maps",E,E,89,N],[5,"ptr_eq",E,"Hack to compare two pointers of different types (in this…",N,[[["arc"],["arc"]],["bool"]]],[6,"AddClassFn",E,E,N,N],[6,"AddStructlineFn",E,E,N,N],[11,"new",E,E,86,[[["arc"]],["self"]]],[11,"extend_through_degree",E,"This function prepares the ResolutionInner object to…",86,[[["self"],["u32"],["i32"]]]],[11,"step_resolution",E,"Call our resolution $X$, and the chain complex to resolve…",86,[[["self"],["u32"],["i32"]]]],[11,"cocycle_string",E,E,86,[[["self"],["u32"],["usize"],["i32"]],[R[34]]]],[11,"complex",E,E,86,[[["self"]],["arc"]]],[11,"number_of_gens_in_bidegree",E,E,86,[[["self"],["u32"],["i32"]],["usize"]]],[11,"prime",E,E,86,[[["self"]],["u32"]]],[11,"new",E,E,89,[[["arc"],[R[2],[R[229]]],[R[228]],[R[2],[R[228]]],[R[229]]],["self"]]],[11,"new_with_inner",E,E,89,[[[R[233]],[R[2],[R[229]]],[R[228]],[R[2],[R[228]]],[R[229]]],["self"]]],[11,"resolve_through_bidegree",E,E,89,[[["self"],["u32"],["i32"]]]],[11,"resolve_through_degree",E,E,89,[[["self"],["i32"]]]],[11,"step_after",E,E,89,[[["self"],["u32"],["i32"]]]],[11,"compute_filtration_one_products",E,E,89,[[["self"],["u32"],["i32"]]]],[11,R[230],E,E,89,[[["self"],["u32"],["i32"],["vec",["u32"]],["vec",["vec"]],["str"],["bool"]]]],[11,R[231],E,E,89,[[["self"]],["i32"]]],[11,"max_computed_homological_degree",E,E,89,[[["self"]],["u32"]]],[11,"graded_dimension_string",E,E,89,[[["self"]],[R[34]]]],[11,"catch_up_products",E,"This function computes the products between the element…",89,[[["self"]]]],[11,R[232],E,"The return value is whether the product was actually…",89,[[["self"],["u32"],["i32"],["vec",["u32"]],["str"]],["bool"]]],[11,"construct_unit_resolution",E,E,89,[[["self"]]]],[11,"set_unit_resolution",E,E,89,[[["self"],[R[24],[R[58]]],["weak",[R[24]]]]]],[11,"compute_products",E,"Compute products whose result lie in degrees up to (s, t)",89,[[["self"],["u32"],["i32"]]]],[11,"compute_product_step",E,"Target = result of the product Source = multiplicand",89,[[["self"],["cocycle"],["u32"],["i32"]]]],[11,"construct_maps_to_unit",E,E,89,[[["self"],["u32"],["i32"]]]],[11,"extend_maps_to_unit",E,"This ensures the chain_maps_to_unit_resolution are defined…",89,[[["self"],["u32"],["i32"]]]],[11,"add_self_map",E,"The return value is whether the self map was actually…",89,[[["self"],["u32"],["matrix"],["i32"],["str"]],["bool"]]],[11,"compute_self_maps",E,"We compute the products by self maps where the result has…",89,[[["self"],["u32"],["i32"]]]],[11,R[140],E,E,89,[[["self"]],[[R[129]],["arc",[R[129]]]]]],[11,"prime",E,E,89,[[["self"]],["u32"]]],[11,"module",E,E,89,[[["self"],["u32"]],[[R[171]],["arc",[R[171]]]]]],[11,R[11],E,E,89,[[["self"]],["i32"]]],[11,R[223],E,E,89,[[["self"],["u32"]],[[R[190],[R[171]]],["arc",[R[190]]]]]],[0,"resolution_homomorphism",R[99],E,N,N],[3,R[359],R[253],E,N,N],[12,"name",E,E,90,N],[12,"source",E,E,90,N],[12,"target",E,E,90,N],[12,"maps",E,E,90,N],[12,"homological_degree_shift",E,E,90,N],[12,"internal_degree_shift",E,E,90,N],[6,"ResolutionHomomorphismToUnit",E,E,N,N],[11,"new",E,E,90,[[[R[233]],["u32"],["i32"],[R[34]],["weak",[R[233]]],["weak"]],["self"]]],[11,"get_map_ensure_length",E,E,90,[[["self"],["u32"]],[R[190]]]],[11,"get_map",E,E,90,[[["self"],["u32"]],[R[190]]]],[11,"into_chain_maps",E,E,90,[[],[["vec",[R[190]]],[R[190]]]]],[11,"extend",E,"Extend the resolution homomorphism such that it is defined…",90,[[["self"],["u32"],["i32"]]]],[11,"extend_step",E,E,90,[[["self"],["u32"],[R[2],["matrix"]],["i32"],["matrix"]]]],[11,"extend_step_helper",E,E,90,[[["self"],["u32"],[R[2],["matrix"]],["i32"],["matrix"]],["matrix"]]],[0,"cli_module_loaders",R[99],E,N,N],[5,"get_gens","rust_ext::cli_module_loaders",E,N,[[["i32"]],[["bivec",["vec"]],["box",["error"]],[R[4],["bivec","box"]]]]],[5,"gens_to_json",E,E,N,[[["bivec"]],["value"]]],[5,"get_expression_to_vector",E,E,N,[[["f"],["str"],[R[23]]]]],[5,"interactive_module_define",E,E,N,[[],[[R[4],[R[34],"box"]],[R[34]],["box",["error"]]]]],[5,"interactive_module_define_fdmodule",E,E,N,[[["value"],["u32"],["bool"]],[["box",["error"]],["value"],[R[4],["value","box"]]]]],[5,"get_relation",E,E,N,[[[R[171]],[R[130]],[R[131]],[R[234]]],[[R[34]],[R[4],[R[34]]]]]],[5,"interactive_module_define_fpmodule",E,E,N,[[["value"],["u32"],["bool"]],[["box",["error"]],["value"],[R[4],["value","box"]]]]],[0,"yoneda",R[99],E,N,N],[5,"rate_operation","rust_ext::yoneda",E,N,[[["i32"],["usize"],["arc"]],["i32"]]],[5,"rate_adem_operation",E,E,N,[[["i32"],["usize"],[R[131]]],["i32"]]],[5,"operation_drop",E,E,N,[[["i32"],["usize"],[R[131]]],["i32"]]],[5,"split_mut_borrow",E,E,N,[[["vec"],["usize"]]]],[5,"yoneda_representative_element",E,E,N,[[["u32"],["usize"],["i32"],["arc"]],[[R[236]],[R[235]],[R[235],[R[236]]],[R[237],[R[236],R[235],R[235]]]]]],[5,"yoneda_representative",E,"This function produces a quasi-isomorphic quotient of `cc`…",N,[[["chainmap",[R[190]]],[R[190]],["arc"]],[[R[236]],[R[235]],[R[235],[R[236]]],[R[237],[R[236],R[235],R[235]]]]]],[5,"yoneda_representative_with_strategy",E,E,N,[[["chainmap",[R[190]]],[R[190]],["f"],["arc"]],[[R[236]],[R[235]],[R[235],[R[236]]],[R[237],[R[236],R[235],R[235]]]]]],[5,"compute_kernel_image",E,"This function does the following computation:",N,[[["qm"],[R[2],["arc"]],["g"],["i32"],["arc"],[R[2],[R[22]]],[R[2]],[R[22]]]]],[6,"Yoneda",E,E,N,N],[17,"PENALTY_UNIT",E,E,N,N],[6,"CCC",R[99],E,N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[5],E,E,0,[[[U]],[R[4]]]],[11,R[6],E,E,0,[[],[R[4]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[R[20]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[5],E,E,1,[[[U]],[R[4]]]],[11,R[6],E,E,1,[[],[R[4]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[R[20]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[62],E,E,2,[[["self"]],[R[34]]]],[11,R[5],E,E,2,[[[U]],[R[4]]]],[11,R[6],E,E,2,[[],[R[4]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[R[20]]]],[11,R[14],R[238],E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[5],E,E,3,[[[U]],[R[4]]]],[11,R[6],E,E,3,[[],[R[4]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[R[20]]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[5],E,E,4,[[[U]],[R[4]]]],[11,R[6],E,E,4,[[],[R[4]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[R[20]]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[5],E,E,5,[[[U]],[R[4]]]],[11,R[6],E,E,5,[[],[R[4]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[R[20]]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[5],E,E,6,[[[U]],[R[4]]]],[11,R[6],E,E,6,[[],[R[4]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[R[20]]]],[11,R[14],E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[5],E,E,7,[[[U]],[R[4]]]],[11,R[6],E,E,7,[[],[R[4]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[R[20]]]],[11,R[14],E,E,8,[[["self"]],[T]]],[11,R[15],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[5],E,E,8,[[[U]],[R[4]]]],[11,R[6],E,E,8,[[],[R[4]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[R[20]]]],[11,"into",E,E,9,[[],[U]]],[11,R[243],E,E,9,[[],["i"]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[5],E,E,9,[[[U]],[R[4]]]],[11,R[6],E,E,9,[[],[R[4]]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[R[20]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[5],E,E,10,[[[U]],[R[4]]]],[11,R[6],E,E,10,[[],[R[4]]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[["self"]],[R[20]]]],[11,R[14],E,E,11,[[["self"]],[T]]],[11,R[15],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[62],E,E,11,[[["self"]],[R[34]]]],[11,R[5],E,E,11,[[[U]],[R[4]]]],[11,R[6],E,E,11,[[],[R[4]]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[["self"]],[R[20]]]],[11,R[14],R[239],E,13,[[["self"]],[T]]],[11,R[15],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[62],E,E,13,[[["self"]],[R[34]]]],[11,R[5],E,E,13,[[[U]],[R[4]]]],[11,R[6],E,E,13,[[],[R[4]]]],[11,R[7],E,E,13,[[["self"]],[T]]],[11,R[8],E,E,13,[[["self"]],[T]]],[11,R[9],E,E,13,[[["self"]],[R[20]]]],[11,R[14],E,E,14,[[["self"]],[T]]],[11,R[15],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[5],E,E,14,[[[U]],[R[4]]]],[11,R[6],E,E,14,[[],[R[4]]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[8],E,E,14,[[["self"]],[T]]],[11,R[9],E,E,14,[[["self"]],[R[20]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[5],E,E,15,[[[U]],[R[4]]]],[11,R[6],E,E,15,[[],[R[4]]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[8],E,E,15,[[["self"]],[T]]],[11,R[9],E,E,15,[[["self"]],[R[20]]]],[11,"into",R[240],E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[5],E,E,16,[[[U]],[R[4]]]],[11,R[6],E,E,16,[[],[R[4]]]],[11,R[7],E,E,16,[[["self"]],[T]]],[11,R[8],E,E,16,[[["self"]],[T]]],[11,R[9],E,E,16,[[["self"]],[R[20]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[5],E,E,17,[[[U]],[R[4]]]],[11,R[6],E,E,17,[[],[R[4]]]],[11,R[7],E,E,17,[[["self"]],[T]]],[11,R[8],E,E,17,[[["self"]],[T]]],[11,R[9],E,E,17,[[["self"]],[R[20]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[5],E,E,18,[[[U]],[R[4]]]],[11,R[6],E,E,18,[[],[R[4]]]],[11,R[7],E,E,18,[[["self"]],[T]]],[11,R[8],E,E,18,[[["self"]],[T]]],[11,R[9],E,E,18,[[["self"]],[R[20]]]],[11,"into",R[117],E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[5],E,E,19,[[[U]],[R[4]]]],[11,R[6],E,E,19,[[],[R[4]]]],[11,R[7],E,E,19,[[["self"]],[T]]],[11,R[8],E,E,19,[[["self"]],[T]]],[11,R[9],E,E,19,[[["self"]],[R[20]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[5],E,E,20,[[[U]],[R[4]]]],[11,R[6],E,E,20,[[],[R[4]]]],[11,R[7],E,E,20,[[["self"]],[T]]],[11,R[8],E,E,20,[[["self"]],[T]]],[11,R[9],E,E,20,[[["self"]],[R[20]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[62],E,E,21,[[["self"]],[R[34]]]],[11,R[5],E,E,21,[[[U]],[R[4]]]],[11,R[6],E,E,21,[[],[R[4]]]],[11,R[7],E,E,21,[[["self"]],[T]]],[11,R[8],E,E,21,[[["self"]],[T]]],[11,R[9],E,E,21,[[["self"]],[R[20]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[5],E,E,22,[[[U]],[R[4]]]],[11,R[6],E,E,22,[[],[R[4]]]],[11,R[7],E,E,22,[[["self"]],[T]]],[11,R[8],E,E,22,[[["self"]],[T]]],[11,R[9],E,E,22,[[["self"]],[R[20]]]],[11,"into",R[241],E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[5],E,E,23,[[[U]],[R[4]]]],[11,R[6],E,E,23,[[],[R[4]]]],[11,R[7],E,E,23,[[["self"]],[T]]],[11,R[8],E,E,23,[[["self"]],[T]]],[11,R[9],E,E,23,[[["self"]],[R[20]]]],[11,R[14],E,E,24,[[["self"]],[T]]],[11,R[15],E,E,24,[[["self"],[T]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[62],E,E,24,[[["self"]],[R[34]]]],[11,R[5],E,E,24,[[[U]],[R[4]]]],[11,R[6],E,E,24,[[],[R[4]]]],[11,R[7],E,E,24,[[["self"]],[T]]],[11,R[8],E,E,24,[[["self"]],[T]]],[11,R[9],E,E,24,[[["self"]],[R[20]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[5],E,E,25,[[[U]],[R[4]]]],[11,R[6],E,E,25,[[],[R[4]]]],[11,R[7],E,E,25,[[["self"]],[T]]],[11,R[8],E,E,25,[[["self"]],[T]]],[11,R[9],E,E,25,[[["self"]],[R[20]]]],[11,"into",R[242],E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[5],E,E,26,[[[U]],[R[4]]]],[11,R[6],E,E,26,[[],[R[4]]]],[11,R[7],E,E,26,[[["self"]],[T]]],[11,R[8],E,E,26,[[["self"]],[T]]],[11,R[9],E,E,26,[[["self"]],[R[20]]]],[11,R[14],E,E,27,[[["self"]],[T]]],[11,R[15],E,E,27,[[["self"],[T]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[5],E,E,27,[[[U]],[R[4]]]],[11,R[6],E,E,27,[[],[R[4]]]],[11,R[7],E,E,27,[[["self"]],[T]]],[11,R[8],E,E,27,[[["self"]],[T]]],[11,R[9],E,E,27,[[["self"]],[R[20]]]],[11,R[14],E,E,28,[[["self"]],[T]]],[11,R[15],E,E,28,[[["self"],[T]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[62],E,E,28,[[["self"]],[R[34]]]],[11,R[5],E,E,28,[[[U]],[R[4]]]],[11,R[6],E,E,28,[[],[R[4]]]],[11,R[7],E,E,28,[[["self"]],[T]]],[11,R[8],E,E,28,[[["self"]],[T]]],[11,R[9],E,E,28,[[["self"]],[R[20]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[5],E,E,29,[[[U]],[R[4]]]],[11,R[6],E,E,29,[[],[R[4]]]],[11,R[7],E,E,29,[[["self"]],[T]]],[11,R[8],E,E,29,[[["self"]],[T]]],[11,R[9],E,E,29,[[["self"]],[R[20]]]],[11,"into",E,E,30,[[],[U]]],[11,R[243],E,E,30,[[],["i"]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[5],E,E,30,[[[U]],[R[4]]]],[11,R[6],E,E,30,[[],[R[4]]]],[11,R[7],E,E,30,[[["self"]],[T]]],[11,R[8],E,E,30,[[["self"]],[T]]],[11,R[9],E,E,30,[[["self"]],[R[20]]]],[11,"into",R[244],E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[5],E,E,31,[[[U]],[R[4]]]],[11,R[6],E,E,31,[[],[R[4]]]],[11,R[7],E,E,31,[[["self"]],[T]]],[11,R[8],E,E,31,[[["self"]],[T]]],[11,R[9],E,E,31,[[["self"]],[R[20]]]],[11,"into",R[245],E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[62],E,E,34,[[["self"]],[R[34]]]],[11,R[5],E,E,34,[[[U]],[R[4]]]],[11,R[6],E,E,34,[[],[R[4]]]],[11,R[7],E,E,34,[[["self"]],[T]]],[11,R[8],E,E,34,[[["self"]],[T]]],[11,R[9],E,E,34,[[["self"]],[R[20]]]],[11,R[14],E,E,35,[[["self"]],[T]]],[11,R[15],E,E,35,[[["self"],[T]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[5],E,E,35,[[[U]],[R[4]]]],[11,R[6],E,E,35,[[],[R[4]]]],[11,R[7],E,E,35,[[["self"]],[T]]],[11,R[8],E,E,35,[[["self"]],[T]]],[11,R[9],E,E,35,[[["self"]],[R[20]]]],[11,R[14],E,E,36,[[["self"]],[T]]],[11,R[15],E,E,36,[[["self"],[T]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[5],E,E,36,[[[U]],[R[4]]]],[11,R[6],E,E,36,[[],[R[4]]]],[11,R[7],E,E,36,[[["self"]],[T]]],[11,R[8],E,E,36,[[["self"]],[T]]],[11,R[9],E,E,36,[[["self"]],[R[20]]]],[11,R[14],E,E,37,[[["self"]],[T]]],[11,R[15],E,E,37,[[["self"],[T]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[5],E,E,37,[[[U]],[R[4]]]],[11,R[6],E,E,37,[[],[R[4]]]],[11,R[7],E,E,37,[[["self"]],[T]]],[11,R[8],E,E,37,[[["self"]],[T]]],[11,R[9],E,E,37,[[["self"]],[R[20]]]],[11,R[14],E,E,38,[[["self"]],[T]]],[11,R[15],E,E,38,[[["self"],[T]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[5],E,E,38,[[[U]],[R[4]]]],[11,R[6],E,E,38,[[],[R[4]]]],[11,R[7],E,E,38,[[["self"]],[T]]],[11,R[8],E,E,38,[[["self"]],[T]]],[11,R[9],E,E,38,[[["self"]],[R[20]]]],[11,"into",R[246],E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[5],E,E,39,[[[U]],[R[4]]]],[11,R[6],E,E,39,[[],[R[4]]]],[11,R[7],E,E,39,[[["self"]],[T]]],[11,R[8],E,E,39,[[["self"]],[T]]],[11,R[9],E,E,39,[[["self"]],[R[20]]]],[11,"into",E,E,91,[[],[U]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[62],E,E,91,[[["self"]],[R[34]]]],[11,R[5],E,E,91,[[[U]],[R[4]]]],[11,R[6],E,E,91,[[],[R[4]]]],[11,R[7],E,E,91,[[["self"]],[T]]],[11,R[8],E,E,91,[[["self"]],[T]]],[11,R[9],E,E,91,[[["self"]],[R[20]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[62],E,E,40,[[["self"]],[R[34]]]],[11,R[5],E,E,40,[[[U]],[R[4]]]],[11,R[6],E,E,40,[[],[R[4]]]],[11,R[7],E,E,40,[[["self"]],[T]]],[11,R[8],E,E,40,[[["self"]],[T]]],[11,R[9],E,E,40,[[["self"]],[R[20]]]],[11,"into",R[145],E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[5],E,E,41,[[[U]],[R[4]]]],[11,R[6],E,E,41,[[],[R[4]]]],[11,R[7],E,E,41,[[["self"]],[T]]],[11,R[8],E,E,41,[[["self"]],[T]]],[11,R[9],E,E,41,[[["self"]],[R[20]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[5],E,E,42,[[[U]],[R[4]]]],[11,R[6],E,E,42,[[],[R[4]]]],[11,R[7],E,E,42,[[["self"]],[T]]],[11,R[8],E,E,42,[[["self"]],[T]]],[11,R[9],E,E,42,[[["self"]],[R[20]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[5],E,E,43,[[[U]],[R[4]]]],[11,R[6],E,E,43,[[],[R[4]]]],[11,R[7],E,E,43,[[["self"]],[T]]],[11,R[8],E,E,43,[[["self"]],[T]]],[11,R[9],E,E,43,[[["self"]],[R[20]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[5],E,E,44,[[[U]],[R[4]]]],[11,R[6],E,E,44,[[],[R[4]]]],[11,R[7],E,E,44,[[["self"]],[T]]],[11,R[8],E,E,44,[[["self"]],[T]]],[11,R[9],E,E,44,[[["self"]],[R[20]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[5],E,E,45,[[[U]],[R[4]]]],[11,R[6],E,E,45,[[],[R[4]]]],[11,R[7],E,E,45,[[["self"]],[T]]],[11,R[8],E,E,45,[[["self"]],[T]]],[11,R[9],E,E,45,[[["self"]],[R[20]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[5],E,E,46,[[[U]],[R[4]]]],[11,R[6],E,E,46,[[],[R[4]]]],[11,R[7],E,E,46,[[["self"]],[T]]],[11,R[8],E,E,46,[[["self"]],[T]]],[11,R[9],E,E,46,[[["self"]],[R[20]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[5],E,E,47,[[[U]],[R[4]]]],[11,R[6],E,E,47,[[],[R[4]]]],[11,R[7],E,E,47,[[["self"]],[T]]],[11,R[8],E,E,47,[[["self"]],[T]]],[11,R[9],E,E,47,[[["self"]],[R[20]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[5],E,E,48,[[[U]],[R[4]]]],[11,R[6],E,E,48,[[],[R[4]]]],[11,R[7],E,E,48,[[["self"]],[T]]],[11,R[8],E,E,48,[[["self"]],[T]]],[11,R[9],E,E,48,[[["self"]],[R[20]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[5],E,E,49,[[[U]],[R[4]]]],[11,R[6],E,E,49,[[],[R[4]]]],[11,R[7],E,E,49,[[["self"]],[T]]],[11,R[8],E,E,49,[[["self"]],[T]]],[11,R[9],E,E,49,[[["self"]],[R[20]]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[5],E,E,50,[[[U]],[R[4]]]],[11,R[6],E,E,50,[[],[R[4]]]],[11,R[7],E,E,50,[[["self"]],[T]]],[11,R[8],E,E,50,[[["self"]],[T]]],[11,R[9],E,E,50,[[["self"]],[R[20]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[62],E,E,51,[[["self"]],[R[34]]]],[11,R[5],E,E,51,[[[U]],[R[4]]]],[11,R[6],E,E,51,[[],[R[4]]]],[11,R[7],E,E,51,[[["self"]],[T]]],[11,R[8],E,E,51,[[["self"]],[T]]],[11,R[9],E,E,51,[[["self"]],[R[20]]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[62],E,E,52,[[["self"]],[R[34]]]],[11,R[5],E,E,52,[[[U]],[R[4]]]],[11,R[6],E,E,52,[[],[R[4]]]],[11,R[7],E,E,52,[[["self"]],[T]]],[11,R[8],E,E,52,[[["self"]],[T]]],[11,R[9],E,E,52,[[["self"]],[R[20]]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[5],E,E,53,[[[U]],[R[4]]]],[11,R[6],E,E,53,[[],[R[4]]]],[11,R[7],E,E,53,[[["self"]],[T]]],[11,R[8],E,E,53,[[["self"]],[T]]],[11,R[9],E,E,53,[[["self"]],[R[20]]]],[11,"into",R[247],E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[5],E,E,54,[[[U]],[R[4]]]],[11,R[6],E,E,54,[[],[R[4]]]],[11,R[7],E,E,54,[[["self"]],[T]]],[11,R[8],E,E,54,[[["self"]],[T]]],[11,R[9],E,E,54,[[["self"]],[R[20]]]],[11,"into",R[248],E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[5],E,E,55,[[[U]],[R[4]]]],[11,R[6],E,E,55,[[],[R[4]]]],[11,R[7],E,E,55,[[["self"]],[T]]],[11,R[8],E,E,55,[[["self"]],[T]]],[11,R[9],E,E,55,[[["self"]],[R[20]]]],[11,"into",R[249],E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[5],E,E,56,[[[U]],[R[4]]]],[11,R[6],E,E,56,[[],[R[4]]]],[11,R[7],E,E,56,[[["self"]],[T]]],[11,R[8],E,E,56,[[["self"]],[T]]],[11,R[9],E,E,56,[[["self"]],[R[20]]]],[11,"into",R[179],E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[5],E,E,57,[[[U]],[R[4]]]],[11,R[6],E,E,57,[[],[R[4]]]],[11,R[7],E,E,57,[[["self"]],[T]]],[11,R[8],E,E,57,[[["self"]],[T]]],[11,R[9],E,E,57,[[["self"]],[R[20]]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[5],E,E,58,[[[U]],[R[4]]]],[11,R[6],E,E,58,[[],[R[4]]]],[11,R[7],E,E,58,[[["self"]],[T]]],[11,R[8],E,E,58,[[["self"]],[T]]],[11,R[9],E,E,58,[[["self"]],[R[20]]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[5],E,E,59,[[[U]],[R[4]]]],[11,R[6],E,E,59,[[],[R[4]]]],[11,R[7],E,E,59,[[["self"]],[T]]],[11,R[8],E,E,59,[[["self"]],[T]]],[11,R[9],E,E,59,[[["self"]],[R[20]]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[5],E,E,60,[[[U]],[R[4]]]],[11,R[6],E,E,60,[[],[R[4]]]],[11,R[7],E,E,60,[[["self"]],[T]]],[11,R[8],E,E,60,[[["self"]],[T]]],[11,R[9],E,E,60,[[["self"]],[R[20]]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[5],E,E,61,[[[U]],[R[4]]]],[11,R[6],E,E,61,[[],[R[4]]]],[11,R[7],E,E,61,[[["self"]],[T]]],[11,R[8],E,E,61,[[["self"]],[T]]],[11,R[9],E,E,61,[[["self"]],[R[20]]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[5],E,E,62,[[[U]],[R[4]]]],[11,R[6],E,E,62,[[],[R[4]]]],[11,R[7],E,E,62,[[["self"]],[T]]],[11,R[8],E,E,62,[[["self"]],[T]]],[11,R[9],E,E,62,[[["self"]],[R[20]]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[5],E,E,63,[[[U]],[R[4]]]],[11,R[6],E,E,63,[[],[R[4]]]],[11,R[7],E,E,63,[[["self"]],[T]]],[11,R[8],E,E,63,[[["self"]],[T]]],[11,R[9],E,E,63,[[["self"]],[R[20]]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[5],E,E,64,[[[U]],[R[4]]]],[11,R[6],E,E,64,[[],[R[4]]]],[11,R[7],E,E,64,[[["self"]],[T]]],[11,R[8],E,E,64,[[["self"]],[T]]],[11,R[9],E,E,64,[[["self"]],[R[20]]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[5],E,E,65,[[[U]],[R[4]]]],[11,R[6],E,E,65,[[],[R[4]]]],[11,R[7],E,E,65,[[["self"]],[T]]],[11,R[8],E,E,65,[[["self"]],[T]]],[11,R[9],E,E,65,[[["self"]],[R[20]]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[5],E,E,66,[[[U]],[R[4]]]],[11,R[6],E,E,66,[[],[R[4]]]],[11,R[7],E,E,66,[[["self"]],[T]]],[11,R[8],E,E,66,[[["self"]],[T]]],[11,R[9],E,E,66,[[["self"]],[R[20]]]],[11,"into",R[250],E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[5],E,E,68,[[[U]],[R[4]]]],[11,R[6],E,E,68,[[],[R[4]]]],[11,R[7],E,E,68,[[["self"]],[T]]],[11,R[8],E,E,68,[[["self"]],[T]]],[11,R[9],E,E,68,[[["self"]],[R[20]]]],[11,"into",R[216],E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[5],E,E,74,[[[U]],[R[4]]]],[11,R[6],E,E,74,[[],[R[4]]]],[11,R[7],E,E,74,[[["self"]],[T]]],[11,R[8],E,E,74,[[["self"]],[T]]],[11,R[9],E,E,74,[[["self"]],[R[20]]]],[11,"into",E,E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[5],E,E,75,[[[U]],[R[4]]]],[11,R[6],E,E,75,[[],[R[4]]]],[11,R[7],E,E,75,[[["self"]],[T]]],[11,R[8],E,E,75,[[["self"]],[T]]],[11,R[9],E,E,75,[[["self"]],[R[20]]]],[11,"into",E,E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[5],E,E,76,[[[U]],[R[4]]]],[11,R[6],E,E,76,[[],[R[4]]]],[11,R[7],E,E,76,[[["self"]],[T]]],[11,R[8],E,E,76,[[["self"]],[T]]],[11,R[9],E,E,76,[[["self"]],[R[20]]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[5],E,E,77,[[[U]],[R[4]]]],[11,R[6],E,E,77,[[],[R[4]]]],[11,R[7],E,E,77,[[["self"]],[T]]],[11,R[8],E,E,77,[[["self"]],[T]]],[11,R[9],E,E,77,[[["self"]],[R[20]]]],[11,"into",E,E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[5],E,E,78,[[[U]],[R[4]]]],[11,R[6],E,E,78,[[],[R[4]]]],[11,R[7],E,E,78,[[["self"]],[T]]],[11,R[8],E,E,78,[[["self"]],[T]]],[11,R[9],E,E,78,[[["self"]],[R[20]]]],[11,"into",R[251],E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[5],E,E,79,[[[U]],[R[4]]]],[11,R[6],E,E,79,[[],[R[4]]]],[11,R[7],E,E,79,[[["self"]],[T]]],[11,R[8],E,E,79,[[["self"]],[T]]],[11,R[9],E,E,79,[[["self"]],[R[20]]]],[11,"into",E,E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[5],E,E,80,[[[U]],[R[4]]]],[11,R[6],E,E,80,[[],[R[4]]]],[11,R[7],E,E,80,[[["self"]],[T]]],[11,R[8],E,E,80,[[["self"]],[T]]],[11,R[9],E,E,80,[[["self"]],[R[20]]]],[11,"into",R[222],E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[5],E,E,81,[[[U]],[R[4]]]],[11,R[6],E,E,81,[[],[R[4]]]],[11,R[7],E,E,81,[[["self"]],[T]]],[11,R[8],E,E,81,[[["self"]],[T]]],[11,R[9],E,E,81,[[["self"]],[R[20]]]],[11,"into",R[252],E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[5],E,E,86,[[[U]],[R[4]]]],[11,R[6],E,E,86,[[],[R[4]]]],[11,R[7],E,E,86,[[["self"]],[T]]],[11,R[8],E,E,86,[[["self"]],[T]]],[11,R[9],E,E,86,[[["self"]],[R[20]]]],[11,R[14],E,E,87,[[["self"]],[T]]],[11,R[15],E,E,87,[[["self"],[T]]]],[11,"into",E,E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[5],E,E,87,[[[U]],[R[4]]]],[11,R[6],E,E,87,[[],[R[4]]]],[11,R[7],E,E,87,[[["self"]],[T]]],[11,R[8],E,E,87,[[["self"]],[T]]],[11,R[9],E,E,87,[[["self"]],[R[20]]]],[11,"into",E,E,88,[[],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[5],E,E,88,[[[U]],[R[4]]]],[11,R[6],E,E,88,[[],[R[4]]]],[11,R[7],E,E,88,[[["self"]],[T]]],[11,R[8],E,E,88,[[["self"]],[T]]],[11,R[9],E,E,88,[[["self"]],[R[20]]]],[11,"into",E,E,89,[[],[U]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[5],E,E,89,[[[U]],[R[4]]]],[11,R[6],E,E,89,[[],[R[4]]]],[11,R[7],E,E,89,[[["self"]],[T]]],[11,R[8],E,E,89,[[["self"]],[T]]],[11,R[9],E,E,89,[[["self"]],[R[20]]]],[11,"into",R[253],E,90,[[],[U]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[5],E,E,90,[[[U]],[R[4]]]],[11,R[6],E,E,90,[[],[R[4]]]],[11,R[7],E,E,90,[[["self"]],[T]]],[11,R[8],E,E,90,[[["self"]],[T]]],[11,R[9],E,E,90,[[["self"]],[R[20]]]],[11,R[254],R[241],E,25,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[255],E,E,25,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[255],R[242],E,29,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[254],E,E,29,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[255],R[244],E,31,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[254],E,E,31,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[254],R[117],E,22,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[255],E,E,22,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[152],R[145],E,44,[[["self"],["usize"],["i32"]],["usize"]]],[11,R[139],E,E,44,[[["self"]],["arc"]]],[11,R[152],E,E,53,[[["self"],["usize"],["i32"]],["usize"]]],[11,R[139],E,E,53,[[["self"]],["arc"]]],[11,"source",R[179],E,57,[[["self"]],["arc"]]],[11,"target",E,E,57,[[["self"]],["arc"]]],[11,R[176],E,E,57,[[["self"]],["i32"]]],[11,R[256],E,E,57,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,R[177],E,E,57,[[["self"],["i32"]],[R[182]]]],[11,"kernel",E,E,57,[[["self"],["i32"]],[R[22]]]],[11,R[203],E,E,57,[[["self"],["i32"],["matrix"]]]],[11,R[257],E,E,57,[[["self"],["i32"]]]],[11,"source",E,E,58,[[["self"]],["arc"]]],[11,"target",E,E,58,[[["self"]],["arc"]]],[11,R[176],E,E,58,[[["self"]],["i32"]]],[11,R[256],E,E,58,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,R[177],E,E,58,[[["self"],["i32"]],[R[182]]]],[11,"kernel",E,E,58,[[["self"],["i32"]],[R[22]]]],[11,R[257],E,E,58,[[["self"],["i32"]]]],[11,"source",E,E,60,[[["self"]],["arc"]]],[11,"target",E,E,60,[[["self"]],["arc"]]],[11,R[176],E,E,60,[[["self"]],["i32"]]],[11,R[256],E,E,60,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,R[177],E,E,60,[[["self"],["i32"]],[R[182]]]],[11,"kernel",E,E,60,[[["self"],["i32"]],[R[22]]]],[11,R[257],E,E,60,[[["self"],["i32"]]]],[11,"source",E,E,59,[[["self"]],["arc"]]],[11,"target",E,E,59,[[["self"]],["arc"]]],[11,R[176],E,E,59,[[["self"]],["i32"]]],[11,R[11],E,E,59,[[["self"]],["i32"]]],[11,R[256],E,E,59,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,R[257],E,E,59,[[["self"],["i32"]]]],[11,R[177],E,E,59,[[["self"],["i32"]],[R[182]]]],[11,"kernel",E,E,59,[[["self"],["i32"]],[R[22]]]],[11,"source",E,E,63,[[["self"]],["arc"]]],[11,"target",E,E,63,[[["self"]],["arc"]]],[11,R[176],E,E,63,[[["self"]],["i32"]]],[11,R[256],E,E,63,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,"kernel",E,E,63,[[["self"],["i32"]],[R[22]]]],[11,R[177],E,E,63,[[["self"],["i32"]],[R[182]]]],[11,R[257],E,E,63,[[["self"],["i32"]]]],[11,"source",E,E,64,[[["self"]],["arc"]]],[11,"target",E,E,64,[[["self"]],["arc"]]],[11,R[176],E,E,64,[[["self"]],["i32"]]],[11,R[256],E,E,64,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,"kernel",E,E,64,[[["self"],["i32"]],[R[22]]]],[11,R[177],E,E,64,[[["self"],["i32"]],[R[182]]]],[11,R[257],E,E,64,[[["self"],["i32"]]]],[11,"source",E,E,65,[[["self"]],["arc"]]],[11,"target",E,E,65,[[["self"]],["arc"]]],[11,R[176],E,E,65,[[["self"]],["i32"]]],[11,R[256],E,E,65,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,"kernel",E,E,65,[[["self"],["i32"]],[R[22]]]],[11,R[177],E,E,65,[[["self"],["i32"]],[R[182]]]],[11,R[257],E,E,65,[[["self"],["i32"]]]],[11,"source",E,E,66,[[["self"]],["arc"]]],[11,"target",E,E,66,[[["self"]],["arc"]]],[11,R[176],E,E,66,[[["self"]],["i32"]]],[11,R[256],E,E,66,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,"kernel",E,E,66,[[["self"],["i32"]],[R[22]]]],[11,R[177],E,E,66,[[["self"],["i32"]],[R[182]]]],[11,R[257],E,E,66,[[["self"],["i32"]]]],[11,"source",E,E,62,[[["self"]],["arc"]]],[11,"target",E,E,62,[[["self"]],["arc"]]],[11,R[176],E,E,62,[[["self"]],["i32"]]],[11,R[256],E,E,62,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,R[177],E,E,62,[[["self"],["i32"]],[R[182]]]],[11,"kernel",E,E,62,[[["self"],["i32"]],[R[22]]]],[11,R[257],E,E,62,[[["self"],["i32"]]]],[11,"source",E,E,61,[[["self"]],["arc"]]],[11,"target",E,E,61,[[["self"]],["arc"]]],[11,R[176],E,E,61,[[["self"]],["i32"]]],[11,R[256],E,E,61,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,R[177],E,E,61,[[["self"],["i32"]],[R[182]]]],[11,"kernel",E,E,61,[[["self"],["i32"]],[R[22]]]],[11,R[257],E,E,61,[[["self"],["i32"]]]],[11,"source",R[251],E,80,[[["self"]],["arc"]]],[11,"target",E,E,80,[[["self"]],["arc"]]],[11,R[176],E,E,80,[[["self"]],["i32"]]],[11,R[256],E,R[259],80,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,"kernel",E,E,80,[[["self"],["i32"]],[R[22]]]],[11,R[177],E,E,80,[[["self"],["i32"]],[R[182]]]],[11,R[257],E,E,80,[[["self"],["i32"]]]],[11,R[258],E,E,80,[[["self"],[R[23]],["i32"],[R[23]]]]],[11,"source",R[222],E,81,[[["self"]],["arc"]]],[11,"target",E,E,81,[[["self"]],["arc"]]],[11,R[176],E,E,81,[[["self"]],["i32"]]],[11,R[256],E,R[259],81,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,"kernel",E,E,81,[[["self"],["i32"]],[R[22]]]],[11,R[177],E,E,81,[[["self"],["i32"]],[R[182]]]],[11,R[257],E,E,81,[[["self"],["i32"]]]],[11,R[258],E,E,81,[[["self"],[R[23]],["i32"],[R[23]]]]],[11,R[260],R[179],E,58,[[["arc"],["i32"],["arc"]],["self"]]],[11,R[260],E,E,60,[[["arc"],["i32"],["arc"]],["self"]]],[11,R[260],E,E,62,[[["i32"],["arc"],["arc"]],["self"]]],[11,R[260],E,E,61,[[[R[236]],["arc"],["i32"],["arc",[R[236]]]],["self"]]],[11,R[29],R[145],E,41,[[["self"]],["i32"]]],[11,R[29],E,E,45,[[["self"]],["i32"]]],[11,R[29],E,E,46,[[["self"]],["i32"]]],[11,R[29],E,E,49,[[["self"]],["i32"]]],[11,R[29],E,E,50,[[["self"]],["i32"]]],[11,R[29],E,E,53,[[["self"]],["i32"]]],[11,R[210],E,E,41,[[[R[129]],["arc",[R[129]]],["i32"]],["self"]]],[11,R[210],E,E,44,[[[R[129]],["arc",[R[129]]],["i32"]],["self"]]],[11,R[210],E,E,49,[[[R[129]],["arc",[R[129]]],["i32"]],["self"]]],[11,R[210],E,E,50,[[[R[129]],["arc",[R[129]]],["i32"]],["self"]]],[11,R[210],E,E,42,[[[R[129]],["arc",[R[129]]],["i32"]],["self"]]],[11,R[210],E,E,53,[[[R[129]],["arc",[R[129]]],["i32"]],["self"]]],[11,R[140],R[216],E,74,[[["self"]],[[R[129]],["arc",[R[129]]]]]],[11,R[11],E,E,74,[[["self"]],["i32"]]],[11,R[210],E,E,74,[[["self"]],["arc"]]],[11,"module",E,E,74,[[["self"],["u32"]],["arc"]]],[11,R[223],E,E,74,[[["self"],["u32"]],["arc"]]],[11,R[225],E,E,74,[[["self"],["u32"],["i32"]]]],[11,R[261],E,E,74,[[["self"],["u32"],["usize"],["i32"],["vec",["usize"]]]]],[11,R[262],E,E,74,[[["self"],["u32"],["i32"]],["vec"]]],[11,R[263],E,E,74,[[["self"],["u32"]],["i32"]]],[11,R[140],E,E,75,[[["self"]],[[R[129]],["arc",[R[129]]]]]],[11,R[11],E,E,75,[[["self"]],["i32"]]],[11,R[210],E,E,75,[[["self"]],["arc"]]],[11,"module",E,E,75,[[["self"],["u32"]],["arc"]]],[11,R[223],E,E,75,[[["self"],["u32"]],["arc"]]],[11,R[225],E,E,75,[[["self"],["u32"],["i32"]]]],[11,R[261],E,E,75,[[["self"],["u32"],["usize"],["i32"],["vec",["usize"]]]]],[11,R[262],E,E,75,[[["self"],["u32"],["i32"]],["vec"]]],[11,R[263],E,E,75,[[["self"],["u32"]],["i32"]]],[11,R[140],E,E,76,[[["self"]],[[R[129]],["arc",[R[129]]]]]],[11,R[11],E,E,76,[[["self"]],["i32"]]],[11,R[210],E,E,76,[[["self"]],["arc"]]],[11,"module",E,E,76,[[["self"],["u32"]],["arc"]]],[11,R[223],E,E,76,[[["self"],["u32"]],["arc"]]],[11,R[225],E,E,76,[[["self"],["u32"],["i32"]]]],[11,R[261],E,E,76,[[["self"],["u32"],["usize"],["i32"],["vec",["usize"]]]]],[11,R[262],E,E,76,[[["self"],["u32"],["i32"]],["vec"]]],[11,R[263],E,E,76,[[["self"],["u32"]],["i32"]]],[11,R[140],R[252],E,86,[[["self"]],[[R[129]],["arc",[R[129]]]]]],[11,"module",E,E,86,[[["self"],["u32"]],["arc"]]],[11,R[210],E,E,86,[[["self"]],["arc"]]],[11,R[11],E,E,86,[[["self"]],["i32"]]],[11,R[261],E,E,86,[[["self"],["u32"],["usize"],["i32"],["vec",["usize"]]]]],[11,R[262],E,E,86,[[["self"],["u32"],["i32"]],["vec"]]],[11,R[264],E,E,86,[[["self"],["u32"],["i32"]],["usize"]]],[11,R[263],E,E,86,[[["self"],["u32"]],["i32"]]],[11,R[223],E,E,86,[[["self"],["u32"]],["arc"]]],[11,R[225],E,E,86,[[["self"],["u32"],["i32"]]]],[11,"target",R[216],E,75,[[["self"]],["arc"]]],[11,R[265],E,"This currently crashes if `s` is greater than the s degree…",75,[[["self"],["u32"]],["arc"]]],[11,"target",E,E,76,[[["self"]],["arc"]]],[11,R[265],E,E,76,[[["self"],["u32"]],["arc"]]],[11,"target",R[252],E,86,[[["self"]],["arc"]]],[11,R[265],E,E,86,[[["self"],["u32"]],["arc"]]],[11,"max_s",R[216],E,74,[[["self"]],["u32"]]],[11,"max_s",E,E,75,[[["self"]],["u32"]]],[11,R[266],R[238],E,11,[[["self"],["usize"]]]],[11,R[100],E,E,11,[[["self"]],[R[107]]]],[11,R[267],E,E,11,[[["self"]],[R[107]]]],[11,"prime",E,E,11,[[["self"]],["u32"]]],[11,R[101],E,E,11,[[["self"]],["usize"]]],[11,"offset",E,E,11,[[["self"]],["usize"]]],[11,R[268],E,E,11,[[["self"]],["usize"]]],[11,"slice",E,E,11,[[["self"]]]],[11,R[110],E,E,11,[[["self"],["usize"]]]],[11,R[269],E,E,11,[[["self"]]]],[11,R[111],E,E,11,[[["self"]]]],[11,R[112],E,E,11,[[["self"]]]],[11,"min_limb",E,E,11,[[["self"]],["usize"]]],[11,"max_limb",E,E,11,[[["self"]],["usize"]]],[11,"limbs",E,E,11,[[["self"]],["vec"]]],[11,R[270],E,E,11,[[["self"]],["vec"]]],[11,R[271],E,E,11,[[["self"],["usize"]],["u64"]]],[11,R[272],E,E,11,[[["self"]]]],[11,R[108],E,E,11,[[["self"]]]],[11,R[273],E,E,11,[[["self"],[R[23]]]]],[11,"assign",E,E,11,[[["self"],[R[23]]]]],[11,R[274],E,E,11,[[["self"]],["bool"]]],[11,"is_zero",E,E,11,[[["self"]],["bool"]]],[11,"entry",E,E,11,[[["self"],["usize"]],["u32"]]],[11,R[275],E,E,11,[[["self"],["u32"],["usize"]]]],[11,R[276],E,E,11,[[["self"],["u32"],["usize"]]]],[11,"unpack",E,E,11,[[["self"]]]],[11,R[277],E,E,11,[[["self"]],[["u32"],["vec",["u32"]]]]],[11,"pack",E,E,11,[[["self"]]]],[11,R[278],E,E,11,[[["self"],["u32"],["usize"],[R[23]]]]],[11,"add",E,E,11,[[["self"],["u32"],[R[23]]]]],[11,R[279],E,E,11,[[["self"],["u32"],[R[23]]]]],[11,R[280],E,E,11,[[["self"],["u32"],[R[23]]]]],[11,R[281],E,E,11,[[["self"],["u32"],[R[23]]]]],[11,"scale",E,E,11,[[["self"],["u32"]]]],[11,R[266],E,E,5,[[["self"],["usize"]]]],[11,"prime",E,E,5,[[["self"]],["u32"]]],[11,R[100],E,E,5,[[["self"]],[R[107]]]],[11,R[267],E,E,5,[[["self"]],[R[107]]]],[11,R[266],E,E,6,[[["self"],["usize"]]]],[11,"prime",E,E,6,[[["self"]],["u32"]]],[11,R[100],E,E,6,[[["self"]],[R[107]]]],[11,R[267],E,E,6,[[["self"]],[R[107]]]],[11,R[266],E,E,7,[[["self"],["usize"]]]],[11,"prime",E,E,7,[[["self"]],["u32"]]],[11,R[100],E,E,7,[[["self"]],[R[107]]]],[11,R[267],E,E,7,[[["self"]],[R[107]]]],[11,R[266],E,E,8,[[["self"],["usize"]]]],[11,"prime",E,E,8,[[["self"]],["u32"]]],[11,R[100],E,E,8,[[["self"]],[R[107]]]],[11,R[267],E,E,8,[[["self"]],[R[107]]]],[11,R[282],R[241],E,25,[[["self"]],["str"]]],[11,"prime",E,E,25,[[["self"]],["u32"]]],[11,"name",E,E,25,[[["self"]],["str"]]],[11,R[283],E,E,25,[[["self"]],["vec"]]],[11,R[138],E,E,25,[[["self"],["i32"]]]],[11,R[101],E,E,25,[[["self"],["i32"]],["usize"]]],[11,R[284],E,E,25,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,R[285],E,E,25,[[["self"],["value"]]]],[11,R[286],E,E,25,[[["self"],["str"]],[[R[132],["str"]],["str"]]]],[11,R[287],E,E,25,[[["self"],["usize"],["i32"]],["value"]]],[11,R[205],E,E,25,[[["self"],["usize"],["i32"]],[R[34]]]],[11,R[139],E,E,25,[[["self"],["i32"]],[["vec",["usize"]],["usize"]]]],[11,R[288],E,E,25,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[289],E,"We return Adem relations $b^2 = 0$, $P^i P^j = \\cdots$ for…",25,[[["self"],["i32"]],[["vec",["vec"]],["vec"]]]],[11,R[282],R[242],E,29,[[["self"]],["str"]]],[11,"prime",E,E,29,[[["self"]],["u32"]]],[11,"name",E,E,29,[[["self"]],["str"]]],[11,R[283],E,E,29,[[["self"]],["vec"]]],[11,R[138],E,E,29,[[["self"],["i32"]]]],[11,R[101],E,E,29,[[["self"],["i32"]],["usize"]]],[11,R[284],E,E,29,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,R[285],E,E,29,[[["self"],["value"]]]],[11,R[287],E,E,29,[[["self"],["usize"],["i32"]],["value"]]],[11,R[286],E,E,29,[[["self"],["str"]],[[R[132],["str"]],["str"]]]],[11,R[205],E,E,29,[[["self"],["usize"],["i32"]],[R[34]]]],[11,R[139],E,"We pick our generators to be Q_0 and all the P(...). This…",29,[[["self"],["i32"]],[["vec",["usize"]],["usize"]]]],[11,R[288],E,E,29,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[289],E,E,29,[[["self"],["i32"]],[["vec",["vec"]],["vec"]]]],[11,R[282],R[244],E,31,[[["self"]],["str"]]],[11,"prime",E,E,31,[[["self"]],["u32"]]],[11,"name",E,E,31,[[["self"]],["str"]]],[11,R[138],E,E,31,[[["self"],["i32"]]]],[11,R[101],E,R[290],31,[[["self"],["i32"]],["usize"]]],[11,R[284],E,E,31,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,R[283],E,E,31,[[["self"]],["vec"]]],[11,R[285],E,R[291],31,[[["self"],["value"]]]],[11,R[287],E,E,31,[[["self"],["usize"],["i32"]],["value"]]],[11,R[205],E,R[292],31,[[["self"],["usize"],["i32"]],[R[34]]]],[11,R[206],E,E,31,[[["self"],[R[23]],["i32"]],[R[34]]]],[11,R[139],E,E,31,[[["self"],["i32"]],[["vec",["usize"]],["usize"]]]],[11,R[288],E,E,31,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[289],E,E,31,[[["self"],["i32"]],[["vec",["vec"]],["vec"]]]],[11,R[282],R[117],E,22,[[["self"]],["str"]]],[11,"prime",E,E,22,[[["self"]],["u32"]]],[11,"name",E,E,22,[[["self"]],["str"]]],[11,R[138],E,E,22,[[["self"],["i32"]]]],[11,R[101],E,E,22,[[["self"],["i32"]],["usize"]]],[11,R[284],E,E,22,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,R[293],E,E,22,[[["self"],["u32"],[R[23]],["i32"],["usize"],[R[23]]]]],[11,R[294],E,E,22,[[["self"],["u32"],[R[23]],["i32"],["usize"],[R[23]]]]],[11,R[295],E,E,22,[[["self"],["u32"],[R[23]],["i32"],[R[23]]]]],[11,R[283],E,E,22,[[["self"]],["vec"]]],[11,R[285],E,E,22,[[["self"],["value"]]]],[11,R[287],E,E,22,[[["self"],["usize"],["i32"]],["value"]]],[11,R[286],E,E,22,[[["self"],["str"]],[[R[132],["str"]],["str"]]]],[11,R[205],E,E,22,[[["self"],["usize"],["i32"]],[R[34]]]],[11,R[206],E,E,22,[[["self"],[R[23]],["i32"]],[R[34]]]],[11,R[139],E,E,22,[[["self"],["i32"]],[["vec",["usize"]],["usize"]]]],[11,R[288],E,E,22,[[["self"],["usize"],["i32"]],["vec"]]],[11,R[289],E,E,22,[[["self"],["i32"]],[["vec",["vec"]],["vec"]]]],[11,"name",R[145],E,41,[[["self"]],["str"]]],[11,R[140],E,E,41,[[["self"]],[[R[129]],["arc",[R[129]]]]]],[11,R[11],E,E,41,[[["self"]],["i32"]]],[11,R[138],E,E,41,[[["self"],["i32"]]]],[11,R[101],E,E,41,[[["self"],["i32"]],["usize"]]],[11,R[205],E,E,41,[[["self"],["usize"],["i32"]],[R[34]]]],[11,"is_unit",E,E,41,[[["self"]],["bool"]]],[11,R[296],E,E,41,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,R[297],E,E,41,[[["self"]],["bool"]]],[11,R[298],E,E,41,[[["self"],["usize"],["i32"]],[R[23]]]],[11,R[140],E,E,44,[[["self"]],[[R[129]],["arc",[R[129]]]]]],[11,R[11],E,E,44,[[["self"]],["i32"]]],[11,"name",E,E,44,[[["self"]],["str"]]],[11,R[138],E,E,44,[[["self"],["i32"]]]],[11,R[101],E,E,44,[[["self"],["i32"]],["usize"]]],[11,R[296],E,E,44,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,R[205],E,E,44,[[["self"],["usize"],["i32"]],[R[34]]]],[11,R[140],E,E,45,[[["self"]],[[R[129]],["arc",[R[129]]]]]],[11,"name",E,E,45,[[["self"]],["str"]]],[11,R[11],E,E,45,[[["self"]],["i32"]]],[11,R[138],E,E,45,[[["self"],["i32"]]]],[11,R[101],E,E,45,[[["self"],["i32"]],["usize"]]],[11,R[296],E,E,45,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,R[205],E,E,45,[[["self"],["usize"],["i32"]],[R[34]]]],[11,R[140],E,E,46,[[["self"]],[[R[129]],["arc",[R[129]]]]]],[11,"name",E,E,46,[[["self"]],["str"]]],[11,R[11],E,E,46,[[["self"]],["i32"]]],[11,R[138],E,E,46,[[["self"],["i32"]]]],[11,R[101],E,E,46,[[["self"],["i32"]],["usize"]]],[11,R[296],E,E,46,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,R[205],E,E,46,[[["self"],["usize"],["i32"]],[R[34]]]],[11,"name",E,E,47,[[["self"]],["str"]]],[11,R[140],E,E,47,[[["self"]],[[R[129]],["arc",[R[129]]]]]],[11,R[11],E,E,47,[[["self"]],["i32"]]],[11,R[101],E,E,47,[[["self"],["i32"]],["usize"]]],[11,R[205],E,E,47,[[["self"],["usize"],["i32"]],[R[34]]]],[11,R[296],E,E,47,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,R[140],E,E,43,[[["self"]],[[R[129]],["arc",[R[129]]]]]],[11,"name",E,E,43,[[["self"]],["str"]]],[11,R[11],E,E,43,[[["self"]],["i32"]]],[11,R[138],E,E,43,[[["self"],["i32"]]]],[11,R[101],E,E,43,[[["self"],["i32"]],["usize"]]],[11,R[296],E,E,43,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,R[205],E,E,43,[[["self"],["usize"],["i32"]],[R[34]]]],[11,R[140],E,E,49,[[["self"]],[[R[129]],["arc",[R[129]]]]]],[11,"name",E,E,49,[[["self"]],["str"]]],[11,R[11],E,E,49,[[["self"]],["i32"]]],[11,R[138],E,E,49,[[["self"],["i32"]]]],[11,R[101],E,E,49,[[["self"],["i32"]],["usize"]]],[11,R[296],E,E,49,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,"act",E,E,49,[[["self"],["u32"],[R[23]],["i32"],["usize"],[R[23]]]]],[11,R[205],E,"TODO: Implement",49,[[["self"],["usize"],["i32"]],[R[34]]]],[11,R[140],E,E,50,[[["self"]],[[R[129]],["arc",[R[129]]]]]],[11,"name",E,E,50,[[["self"]],["str"]]],[11,R[11],E,E,50,[[["self"]],["i32"]]],[11,R[138],E,E,50,[[["self"],["i32"]]]],[11,R[101],E,E,50,[[["self"],["i32"]],["usize"]]],[11,R[296],E,E,50,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,R[205],E,E,50,[[["self"],["usize"],["i32"]],[R[34]]]],[11,"name",E,E,42,[[["self"]],["str"]]],[11,R[140],E,E,42,[[["self"]],[[R[129]],["arc",[R[129]]]]]],[11,R[11],E,E,42,[[["self"]],["i32"]]],[11,R[101],E,E,42,[[["self"],["i32"]],["usize"]]],[11,R[205],E,E,42,[[["self"],["usize"],["i32"]],[R[34]]]],[11,R[296],E,E,42,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,R[140],E,E,53,[[["self"]],[[R[129]],["arc",[R[129]]]]]],[11,"name",E,E,53,[[["self"]],["str"]]],[11,R[11],E,E,53,[[["self"]],["i32"]]],[11,R[138],E,E,53,[[["self"],["i32"]]]],[11,R[101],E,E,53,[[["self"],["i32"]],["usize"]]],[11,R[296],E,E,53,[[["self"],["u32"],[R[23]],["i32"],["usize"]]]],[11,R[205],E,E,53,[[["self"],["usize"],["i32"]],[R[34]]]],[11,"is_unit",E,E,53,[[["self"]],["bool"]]],[11,"prime",E,E,53,[[["self"]],["u32"]]],[11,R[297],E,E,53,[[["self"]],["bool"]]],[11,R[298],E,E,53,[[["self"],["usize"],["i32"]],[R[23]]]],[11,"act",E,E,53,[[["self"],["u32"],[R[23]],["i32"],["usize"],[R[23]]]]],[11,R[299],E,E,53,[[["self"],["u32"],[R[23]],["i32"],[R[23]]]]],[11,R[300],E,E,53,[[["self"],["i32"]],[R[34]]]],[11,R[206],E,E,53,[[["self"],[R[23]],["i32"]],[R[34]]]],[11,R[301],R[239],E,13,[[["self"]]]],[11,R[301],R[145],E,53,[[["self"]]]],[11,"default",R[242],E,27,[[],["qpart"]]],[11,"clone",R[238],E,3,[[["self"]],[R[302]]]],[11,"clone",E,E,11,[[["self"]],[R[23]]]],[11,"clone",E,E,4,[[["self"]],[R[107]]]],[11,"clone",E,E,5,[[["self"]],[R[304]]]],[11,"clone",E,E,6,[[["self"]],[R[305]]]],[11,"clone",E,E,7,[[["self"]],[R[306]]]],[11,"clone",E,E,8,[[["self"]],[R[307]]]],[11,"clone",R[239],E,13,[[["self"]],["matrix"]]],[11,"clone",E,E,14,[[["self"]],[R[22]]]],[11,"clone",R[241],E,24,[[["self"]],[R[115]]]],[11,"clone",R[242],E,27,[[["self"]],["qpart"]]],[11,"clone",E,E,28,[[["self"]],[R[124]]]],[11,"clone",R[245],E,35,[[["self"]],[R[303]]]],[11,"clone",E,E,36,[[["self"]],[R[134]]]],[11,"clone",E,E,37,[[["self"]],[R[135]]]],[11,"clone",E,E,38,[[["self"]],[R[133]]]],[11,"clone",R[252],E,87,[[["self"]],["cocycle"]]],[11,"eq",R[238],E,11,[[["self"]],["bool"]]],[11,"eq",R[239],E,13,[[["self"],["matrix"]],["bool"]]],[11,"ne",E,E,13,[[["self"],["matrix"]],["bool"]]],[11,"eq",R[241],E,24,[[["self"]],["bool"]]],[11,"eq",R[242],E,28,[[["self"]],["bool"]]],[11,"eq",R[145],E,41,[[["self"]],["bool"]]],[11,"eq",E,E,44,[[["self"]],["bool"]]],[11,"eq",E,E,42,[[["self"]],["bool"]]],[11,"eq",E,E,53,[[["self"],[R[236]]],["bool"]]],[11,"ne",E,E,53,[[["self"],[R[236]]],["bool"]]],[11,"from",R[238],E,11,[[[R[304]]],[R[23]]]],[11,"from",E,E,11,[[[R[305]]],[R[23]]]],[11,"from",E,E,11,[[[R[306]]],[R[23]]]],[11,"from",E,E,11,[[[R[307]]],[R[23]]]],[11,"from",R[117],E,22,[[[R[131]]],[R[129]]]],[11,"from",E,E,22,[[[R[130]]],[R[129]]]],[11,"from",E,E,22,[[["field"]],[R[129]]]],[11,"from",R[179],E,61,[[[R[236]],[R[187],[R[236]]]],["self"]]],[11,"from",E,E,61,[[[R[236]],["fpmodulehomomorphism",[R[236]]]],["self"]]],[11,"from",R[145],E,53,[[[R[208]]],[R[236]]]],[11,"from",E,E,53,[[[R[308]]],[R[236]]]],[11,"from",E,E,53,[[[R[207]]],[R[236]]]],[11,"from",R[216],E,74,[[[R[237]]],[R[215]]]],[11,"next",R[238],E,9,[[["self"]],[R[2]]]],[11,"next",R[242],E,30,[[["self"]],[R[2]]]],[11,R[16],R[239],E,13,[[["self"]]]],[11,"hash",R[241],E,24,[[["self"],["h"]]]],[11,"hash",R[242],E,28,[[["self"],["h"]]]],[11,"deref",R[239],E,13,[[["self"]]]],[11,"deref",R[241],E,23,[[["self"]],["vec"]]],[11,"index",R[239],E,13,[[["self"],["usize"]]]],[11,R[17],E,E,13,[[["self"],["usize"]]]],[11,"fmt",R[238],E,11,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,4,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,5,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,6,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,7,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,8,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,10,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",R[239],E,13,[[["self"],[R[18]]],[[R[4],["error"]],["error"]]]],[11,"fmt",E,E,14,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,15,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",R[240],E,16,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,17,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,18,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",R[241],E,24,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",R[242],E,28,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",R[117],E,19,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,20,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,21,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",R[245],E,35,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,36,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,37,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,38,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,34,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",R[246],E,91,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,40,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",R[248],E,55,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",R[249],E,56,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",R[145],E,51,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,52,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",R[99],E,2,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",R[238],E,11,[[["self"],[R[18]]],[[R[4],["error"]],["error"]]]],[11,"fmt",R[239],E,13,[[["self"],[R[18]]],[[R[4],["error"]],["error"]]]],[11,"fmt",R[241],E,24,[[["self"],[R[18]]],[[R[4],["error"]],["error"]]]],[11,"fmt",R[242],E,28,[[["self"],[R[18]]],[[R[4],["error"]],["error"]]]],[11,"fmt",R[117],E,21,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",R[245],E,34,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",R[246],E,91,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,40,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",R[145],E,51,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",E,E,52,[[["self"],[R[18]]],[R[4]]]],[11,"fmt",R[99],E,2,[[["self"],[R[18]]],[R[4]]]],[11,R[5],R[238],E,5,[[[R[23]]],[R[4]]]],[11,R[5],E,E,6,[[[R[23]]],[R[4]]]],[11,R[5],E,E,7,[[[R[23]]],[R[4]]]],[11,R[5],E,E,8,[[[R[23]]],[R[4]]]],[11,R[5],R[241],E,25,[[[R[129]]],[R[4]]]],[11,R[5],R[242],E,29,[[[R[129]]],[R[4]]]],[11,R[5],R[244],E,31,[[[R[129]]],[R[4]]]],[11,R[5],R[145],E,41,[[[R[236]]],[R[4]]]],[11,R[5],E,E,44,[[[R[236]]],[R[4]]]],[11,R[5],E,E,42,[[[R[236]]],[R[4]]]],[11,R[309],R[117],E,21,[[["self"]],["str"]]],[11,R[309],R[245],E,34,[[["self"]],["str"]]],[11,R[309],R[246],E,91,[[["self"]],["str"]]],[11,R[309],E,E,40,[[["self"]],["str"]]],[11,R[309],R[145],E,51,[[["self"]],["str"]]],[11,R[309],E,E,52,[[["self"]],["str"]]],[11,R[309],R[99],E,2,[[["self"]],["str"]]],[11,R[88],R[238],E,11,[[["self"],["s"]],[R[4]]]],[11,R[89],E,E,11,[[["d"]],[R[4]]]],[11,R[89],R[117],E,19,[[["__d"]],[R[4]]]],[11,R[89],E,E,20,[[["__d"]],[R[4]]]],[11,R[89],R[249],E,56,[[["__d"]],[R[4]]]],[11,"save",R[238],E,11,[[["self"]],[R[4]]]],[11,"save",R[239],E,13,[[["self"]],[R[4]]]],[11,"save",E,E,14,[[["self"]],[R[4]]]],[11,"save",R[145],E,47,[[["self"]],[R[4]]]],[11,"save",R[179],E,57,[[["self"]],[R[4]]]],[11,"save",R[252],E,86,[[["self"]],[R[4]]]],[11,"save",E,E,89,[[["self"]],[R[4]]]],[11,"load",R[238],E,11,[[["u32"]],[R[4]]]],[11,"load",R[239],E,13,[[["u32"]],[R[4]]]],[11,"load",E,E,14,[[["u32"]],[R[4]]]],[11,"load",R[145],E,47,[[],[R[4]]]],[11,"load",R[179],E,57,[[],[R[4]]]],[11,"load",R[252],E,86,[[],[R[4]]]],[11,"load",E,E,89,[[],[R[4]]]],[11,"initialize",R[241],E,23,[[["self"]]]]],"p":[[3,"Config"],[3,R[310]],[3,R[311]],[3,R[312]],[3,R[313]],[3,R[102]],[3,R[103]],[3,R[104]],[3,R[105]],[3,R[314]],[3,R[315]],[4,"FpVector"],[8,R[316]],[3,"Matrix"],[3,"Subspace"],[3,R[317]],[3,R[318]],[3,R[319]],[3,R[320]],[3,R[321]],[3,R[322]],[3,R[323]],[4,R[324]],[3,R[116]],[3,R[325]],[3,R[114]],[3,R[326]],[3,"QPart"],[3,R[327]],[3,R[119]],[3,R[328]],[3,"Field"],[8,"Algebra"],[8,R[329]],[3,R[330]],[4,R[331]],[4,R[332]],[4,R[333]],[4,R[334]],[3,R[335]],[3,R[336]],[3,R[337]],[3,R[143]],[3,R[170]],[3,R[338]],[3,R[153]],[3,R[156]],[3,R[165]],[3,R[162]],[3,R[172]],[3,R[173]],[3,R[339]],[3,R[340]],[4,R[341]],[3,R[342]],[3,R[343]],[3,"RPSpec"],[3,R[178]],[3,R[183]],[3,R[188]],[3,R[184]],[3,R[201]],[3,R[199]],[3,R[192]],[3,R[193]],[3,R[196]],[3,R[197]],[8,R[202]],[4,"FMHI"],[8,R[344]],[8,R[345]],[8,R[346]],[8,"Module"],[8,R[347]],[3,R[217]],[3,R[218]],[3,R[219]],[3,R[348]],[4,R[349]],[3,R[350]],[3,R[351]],[3,R[352]],[8,R[353]],[8,R[354]],[8,R[355]],[8,R[356]],[3,R[357]],[3,"Cocycle"],[3,"SelfMap"],[3,R[358]],[3,R[359]],[3,R[360]]]};
searchIndex["saveload"]={"doc":"This crate provides a simple interface for saving and…","i":[[0,"default_impl","saveload",E,N,N],[8,"Save",E,E,N,N],[10,"save",E,"Example ``` # use saveload::{Save, Load}; # use…",0,[[["self"]],[R[4]]]],[8,"Load",E,E,N,N],[16,"AuxData",E,"The type of the auxiliary data needed for loading.",1,N],[10,"load",E,"The auxiliary data is a borrow. This is useful for…",1,[[],[R[4]]]]],"p":[[8,"Save"],[8,"Load"]]};
searchIndex["thread_token"]={"doc":E,"i":[[3,R[10],"thread_token","A `TokenBucket` is a bucket containing a fixed number of…",N,N],[12,"max_threads",E,E,0,N],[12,"running_threads",E,E,0,N],[12,"condvar",E,E,0,N],[3,"Token",E,"A `Token` is what `TokenBucket::take_token` returns. The…",N,N],[12,"bucket",E,E,1,N],[11,"new",E,"Constructs a new `TokenBucket` with a fixed number of…",0,[[["usize"]],["self"]]],[11,"take_token",E,"Attempts to take a token from the bucket. This will block…",0,[[["self"]],[R[3]]]],[11,"recv_or_release",E,R[1],0,[[[R[2]],["self"],[R[3]]],[R[3]]]],[11,"recv2_or_release",E,R[1],0,[[[R[2]],["self"],[R[3]]],[R[3]]]],[11,"release_token",E,E,0,[[["self"]]]],[11,"release",E,"This function does not do anything. It simply takes…",1,[[]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[5],E,E,0,[[[U]],[R[4]]]],[11,R[6],E,E,0,[[],[R[4]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[R[20]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[5],E,E,1,[[[U]],[R[4]]]],[11,R[6],E,E,1,[[],[R[4]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[R[20]]]],[11,"drop",E,E,1,[[["self"]]]]],"p":[[3,R[10]],[3,"Token"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);