var searchIndex={};
searchIndex["bivec"] = {"doc":"","i":[[3,"BiVec","bivec","A BiVec is like a Vec, except we allow indices to be…",null,null],[12,"data","","",0,null],[12,"min_degree","","",0,null],[11,"new","","",0,[[["i32"]],["self"]]],[11,"from_vec","","",0,[[["vec"],["i32"]],["self"]]],[11,"with_capacity","","",0,[[["i32"]],["self"]]],[11,"min_degree","","",0,[[["self"]],["i32"]]],[11,"max_degree","","This returns the largest degree in the bivector. This is…",0,[[["self"]],["i32"]]],[11,"len","","This returns the \"length\" of the bivector, defined to be…",0,[[["self"]],["i32"]]],[11,"is_empty","","",0,[[["self"]],["bool"]]],[11,"push","","",0,[[["self"],["t"]]]],[11,"get","","",0,[[["self"],["i32"]],[["option"],["t"]]]],[11,"last","","",0,[[["self"]],[["option"],["t"]]]],[11,"iter","","",0,[[["self"]],["iter"]]],[11,"iter_mut","","",0,[[["self"]],["itermut"]]],[11,"iter_enum","","",0,[[["self"]]]],[11,"extend_with","","Extends the bivec such that `max_degree()` is at least…",0,[[["self"],["f"],["i32"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["bivec"]]],[11,"eq","","",0,[[["self"],["bivec"]],["bool"]]],[11,"ne","","",0,[[["self"],["bivec"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"index","","",0,[[["self"],["i32"]],["t"]]],[11,"index_mut","","",0,[[["self"],["i32"]],["t"]]],[11,"serialize","","",0,[[["s"],["self"]],["result"]]],[11,"deserialize","","",0,[[["d"]],["result"]]],[11,"save","","",0,[[["self"]],["result"]]],[11,"load","","",0,[[],["result"]]]],"p":[[3,"BiVec"]]};
searchIndex["compressor"] = {"doc":"","i":[[5,"ms_to_string","compressor","",null,[[["i64"]],["string"]]],[5,"main","","",null,[[]]],[17,"NUM_THREAD","","",null,null]],"p":[]};
searchIndex["ext_websocket"] = {"doc":"","i":[[0,"sseq","ext_websocket","",null,null],[3,"Differential","ext_websocket::sseq","",null,null],[12,"matrix","","",0,null],[12,"source_dim","","",0,null],[12,"target_dim","","",0,null],[12,"column_to_pivots_row","","",0,null],[12,"error","","",0,null],[3,"Product","","Fields * `matrices[x][y]` : This encodes the matrix of the…",null,null],[12,"name","","",1,null],[12,"x","","",1,null],[12,"y","","",1,null],[12,"left","","",1,null],[12,"user","","",1,null],[12,"permanent","","",1,null],[12,"differential","","",1,null],[12,"matrices","","",1,null],[3,"ProductItem","","",null,null],[12,"name","","",2,null],[12,"mult_x","","",2,null],[12,"mult_y","","",2,null],[12,"matrices","","",2,null],[3,"Sseq","","Here are some blanket assumptions we make about the order…",null,null],[12,"p","","",3,null],[12,"name","","",3,null],[12,"min_x","","",3,null],[12,"min_y","","",3,null],[12,"block_refresh","","",3,null],[12,"sender","","",3,null],[12,"page_list","","",3,null],[12,"product_name_to_index","","",3,null],[12,"products","","",3,null],[12,"classes","","",3,null],[12,"class_names","","",3,null],[12,"differentials","","",3,null],[12,"permanent_classes","","",3,null],[12,"zeros","","",3,null],[12,"page_classes","","",3,null],[4,"ClassState","","",null,null],[13,"Error","","",4,null],[13,"Done","","",4,null],[13,"InProgress","","",4,null],[5,"sseq_profile","","",null,[[["i32"]]]],[5,"sseq_profile_i","","",null,[[["i32"]]]],[5,"express_basis","","Given a vector `elt`, a subspace `zeros` of the total…",null,[[["subspace"],["fpvector"],["option",["subspace"]]],[["vec",["u32"]],["u32"]]]],[17,"MIN_PAGE","","",null,null],[17,"INFINITY","","",null,null],[17,"_IMPL_SERIALIZE_FOR_ClassState","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_ClassState","","",null,null],[17,"_IMPL_SERIALIZE_FOR_ProductItem","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_ProductItem","","",null,null],[11,"new","","",0,[[["validprime"],["usize"]],["self"]]],[11,"set_to_zero","","",0,[[["self"]]]],[11,"add","","",0,[[["self"],["fpvector"],["option",["fpvector"]]]]],[11,"get_source_target_pairs","","",0,[[["self"]],["vec"]]],[11,"reduce_target","","Given a subspace of the target space, project the target…",0,[[["self"],["subspace"]]]],[11,"evaluate","","This evaluates the differential on `source`, adding the…",0,[[["fpvector"],["self"],["fpvector"]]]],[11,"prime","","",0,[[["self"]],["validprime"]]],[11,"new","","",3,[[["sseqchoice"],["i32"],["sender"],["validprime"],["option",["sender"]]],["self"]]],[11,"clear","","This clears out all the user actions. This is intended to…",3,[[["self"]]]],[11,"refresh_all","","",3,[[["self"]]]],[11,"add_page","","Adds a page to the page list, which is the list of pages…",3,[[["self"],["i32"]]]],[11,"allocate_differential_matrix","","Initializes `differentials[x][y][r]`. It sets the…",3,[[["self"],["i32"]]]],[11,"allocate_zeros_subspace","","",3,[[["bivec"],["i32"],["self"]]]],[11,"multiply","","Given a class `class` at `(x, y)` and a Product object…",3,[[["product"],["i32"],["fpvector"],["self"]],["option"]]],[11,"leibniz","","Apply the Leibniz rule to obtain new differentials. The…",3,[[["fpvector"],["i32"],["usize"],["fpvector"],["self"],["option",["fpvector"]]],["option"]]],[11,"compute_edges_inner","","",3,[[["rwlock",["bivec"]],["i32"],["sender"],["arc",["rwlock"]],["arc",["rwlock"]],["arc",["rwlock"]],["rwlock",["bivec"]],["sseqchoice"],["validprime"],["rwlock",["vec"]]]]],[11,"compute_edges","","Computes products whose source is at (x, y).",3,[[["self"],["i32"]]]],[11,"compute_next_page_no_d","","Compute the classes in next page assuming there is no…",3,[[["validprime"],["subspace"]]]],[11,"compute_next_page_with_d","","Compute the classes in next page assuming there might be a…",3,[[["self"],["i32"]]]],[11,"compute_classes","","Arguments * `refresh_edge` - Whether to automatically call…",3,[[["bool"],["self"],["i32"]]]],[11,"send_class_data","","",3,[[["self"],["i32"]]]],[11,"send","","",3,[[["message"],["self"]]]],[11,"product_defined","","",3,[[["product"],["self"],["i32"]],["bool"]]],[11,"class_defined","","",3,[[["self"],["i32"]],["bool"]]],[11,"get_page","","",3,[[["bivec"],["i32"]],["t"]]],[11,"get_differentials_hitting","","Get a list of r for which there is a d_r differential…",3,[[["self"],["i32"]],[["vec",["i32"]],["i32"]]]],[11,"set_class","","This function should only be called when everything to the…",3,[[["self"],["usize"],["i32"]]]],[11,"set_class_name","","",3,[[["usize"],["i32"],["string"],["self"]]]],[11,"add_differential","","Add a differential starting at (x, y). This mutates the…",3,[[["fpvector"],["i32"],["self"],["fpvector"]]]],[11,"add_differential_propagate","","This function recursively propagates differentials. If…",3,[[["usize"],["i32"],["self"],["fpvector"],["option"]]]],[11,"add_permanent_class","","",3,[[["self"],["fpvector"],["i32"]]]],[11,"add_product_type","","Add a product to the list of products, but don't add any…",3,[[["str"],["i32"],["self"],["bool"]]]],[11,"add_product_differential","","",3,[[["self"],["string"]]]],[11,"repropagate_product","","",3,[[["self"],["usize"]]]],[11,"add_product","","",3,[[["bool"],["i32"],["self"],["string"]]]],[0,"actions","ext_websocket","",null,null],[3,"Message","ext_websocket::actions","",null,null],[12,"recipients","","",5,null],[12,"sseq","","",5,null],[12,"action","","",5,null],[3,"AddDifferential","","",null,null],[12,"x","","",6,null],[12,"y","","",6,null],[12,"r","","",6,null],[12,"source","","",6,null],[12,"target","","",6,null],[3,"AddProductType","","",null,null],[12,"x","","",7,null],[12,"y","","",7,null],[12,"class","","",7,null],[12,"name","","",7,null],[12,"permanent","","",7,null],[3,"AddPermanentClass","","",null,null],[12,"x","","",8,null],[12,"y","","",8,null],[12,"class","","",8,null],[3,"SetClassName","","",null,null],[12,"x","","",9,null],[12,"y","","",9,null],[12,"idx","","",9,null],[12,"name","","",9,null],[3,"Clear","","",null,null],[3,"BlockRefresh","","This blocks the sseq object from recomputing classes and…",null,null],[12,"block","","",10,null],[3,"AddClass","","",null,null],[12,"x","","",11,null],[12,"y","","",11,null],[12,"num","","",11,null],[3,"AddProduct","","",null,null],[12,"mult_x","","",12,null],[12,"mult_y","","",12,null],[12,"source_x","","",12,null],[12,"source_y","","",12,null],[12,"name","","",12,null],[12,"product","","",12,null],[12,"left","","",12,null],[3,"AddProductDifferential","","",null,null],[12,"source","","",13,null],[12,"target","","",13,null],[3,"Resolving","","",null,null],[12,"p","","",14,null],[12,"min_degree","","",14,null],[12,"max_degree","","",14,null],[12,"is_unit","","",14,null],[3,"Complete","","",null,null],[3,"Construct","","",null,null],[12,"module_name","","",15,null],[12,"algebra_name","","",15,null],[3,"ConstructJson","","",null,null],[12,"data","","",16,null],[12,"algebra_name","","",16,null],[3,"Resolve","","",null,null],[12,"max_degree","","",17,null],[3,"SetStructline","","",null,null],[12,"x","","",18,null],[12,"y","","",18,null],[12,"structlines","","",18,null],[3,"SetDifferential","","",null,null],[12,"x","","",19,null],[12,"y","","",19,null],[12,"true_differentials","","",19,null],[12,"differentials","","",19,null],[3,"SetClass","","",null,null],[12,"x","","",20,null],[12,"y","","",20,null],[12,"state","","",20,null],[12,"permanents","","",20,null],[12,"classes","","",20,null],[12,"decompositions","","",20,null],[12,"class_names","","",20,null],[3,"SetPageList","","",null,null],[12,"page_list","","",21,null],[3,"QueryTable","","",null,null],[12,"s","","",22,null],[12,"t","","",22,null],[3,"QueryTableResult","","",null,null],[12,"s","","",23,null],[12,"t","","",23,null],[12,"string","","",23,null],[3,"QueryCocycleString","","",null,null],[12,"s","","",24,null],[12,"t","","",24,null],[12,"idx","","",24,null],[3,"QueryCocycleStringResult","","",null,null],[12,"s","","",25,null],[12,"t","","",25,null],[12,"idx","","",25,null],[12,"string","","",25,null],[4,"Recipient","","",null,null],[13,"Sseq","","",26,null],[13,"Resolver","","",26,null],[4,"SseqChoice","","",null,null],[13,"Main","","",27,null],[13,"Unit","","",27,null],[4,"Action","","This is just a list of everything that implements…",null,null],[13,"AddProductDifferential","","",28,null],[13,"AddProductType","","",28,null],[13,"AddPermanentClass","","",28,null],[13,"AddDifferential","","",28,null],[13,"SetClassName","","",28,null],[13,"Clear","","",28,null],[13,"BlockRefresh","","",28,null],[13,"AddProduct","","",28,null],[13,"AddClass","","",28,null],[13,"Resolving","","",28,null],[13,"Complete","","",28,null],[13,"Construct","","",28,null],[13,"ConstructJson","","",28,null],[13,"Resolve","","",28,null],[13,"SetStructline","","",28,null],[13,"SetDifferential","","",28,null],[13,"SetClass","","",28,null],[13,"SetPageList","","",28,null],[13,"QueryTable","","",28,null],[13,"QueryTableResult","","",28,null],[13,"QueryCocycleString","","",28,null],[13,"QueryCocycleStringResult","","",28,null],[17,"_IMPL_SERIALIZE_FOR_Message","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Message","","",null,null],[17,"_IMPL_SERIALIZE_FOR_Recipient","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Recipient","","",null,null],[17,"_IMPL_SERIALIZE_FOR_SseqChoice","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_SseqChoice","","",null,null],[17,"_IMPL_SERIALIZE_FOR_Action","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Action","","",null,null],[17,"_IMPL_SERIALIZE_FOR_AddDifferential","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_AddDifferential","","",null,null],[17,"_IMPL_SERIALIZE_FOR_AddProductType","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_AddProductType","","",null,null],[17,"_IMPL_SERIALIZE_FOR_AddPermanentClass","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_AddPermanentClass","","",null,null],[17,"_IMPL_SERIALIZE_FOR_SetClassName","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_SetClassName","","",null,null],[17,"_IMPL_SERIALIZE_FOR_Clear","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Clear","","",null,null],[17,"_IMPL_SERIALIZE_FOR_BlockRefresh","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_BlockRefresh","","",null,null],[17,"_IMPL_SERIALIZE_FOR_AddClass","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_AddClass","","",null,null],[17,"_IMPL_SERIALIZE_FOR_AddProduct","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_AddProduct","","",null,null],[17,"_IMPL_SERIALIZE_FOR_AddProductDifferential","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_AddProductDifferential","","",null,null],[17,"_IMPL_SERIALIZE_FOR_Resolving","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Resolving","","",null,null],[17,"_IMPL_SERIALIZE_FOR_Complete","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Complete","","",null,null],[17,"_IMPL_SERIALIZE_FOR_Construct","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Construct","","",null,null],[17,"_IMPL_SERIALIZE_FOR_ConstructJson","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_ConstructJson","","",null,null],[17,"_IMPL_SERIALIZE_FOR_Resolve","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Resolve","","",null,null],[17,"_IMPL_SERIALIZE_FOR_SetStructline","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_SetStructline","","",null,null],[17,"_IMPL_SERIALIZE_FOR_SetDifferential","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_SetDifferential","","",null,null],[17,"_IMPL_SERIALIZE_FOR_SetClass","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_SetClass","","",null,null],[17,"_IMPL_SERIALIZE_FOR_SetPageList","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_SetPageList","","",null,null],[17,"_IMPL_SERIALIZE_FOR_QueryTable","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_QueryTable","","",null,null],[17,"_IMPL_SERIALIZE_FOR_QueryTableResult","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_QueryTableResult","","",null,null],[17,"_IMPL_SERIALIZE_FOR_QueryCocycleString","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_QueryCocycleString","","",null,null],[17,"_IMPL_SERIALIZE_FOR_QueryCocycleStringResult","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_QueryCocycleStringResult","","",null,null],[8,"ActionT","","The name `Action` is sort-of a misnomer. It is the content…",null,null],[11,"act_sseq","","",29,[[["sseq"],["self"]],[["option",["message"]],["message"]]]],[11,"act_resolution","","",29,[[["self"],["arc"]],[["option",["message"]],["message"]]]],[11,"to_string","","",29,[[["self"]],["string"]]],[0,"managers","ext_websocket","",null,null],[3,"ResolutionManager","ext_websocket::managers","ResolutionManager is a struct that manipulates an…",null,null],[12,"sender","","",30,null],[12,"is_unit","","",30,null],[12,"resolution","","",30,null],[12,"unit_resolution","","",30,null],[3,"SseqManager","","This is more-or-less the same as the ResolutionManager,…",null,null],[12,"sender","","",31,null],[12,"sseq","","",31,null],[12,"unit_sseq","","",31,null],[11,"new","","Constructs a ResolutionManager object.",30,[[["sender"]],["self"]]],[11,"process_message","","Reads a message and performs the actions as instructed.",30,[[["message"],["self"]],[["result",["box"]],["box",["error"]]]]],[11,"construct_json","","Resolves a module defined by a json object. The result is…",30,[[["constructjson"],["self"]],[["result",["box"]],["box",["error"]]]]],[11,"construct","","Resolves a module specified by `json`. The result is…",30,[[["self"],["construct"]],[["result",["box"]],["box",["error"]]]]],[11,"process_bundle","","",30,[[["self"],["algebraicobjectsbundle"]]]],[11,"resolve","","",30,[[["sseqchoice"],["self"],["resolve"]],[["result",["box"]],["box",["error"]]]]],[11,"setup_callback","","",30,[[["resolution"],["self"],["sseqchoice"]]]],[11,"new","","Constructs a SseqManager object.",31,[[["sender"]],["self"]]],[11,"is_user","","Return Whether this was a user action. If it is a user…",31,[[["action"]],["bool"]]],[11,"process_message","","",31,[[["message"],["self"]],[["box",["error"]],["result",["bool","box"]],["bool"]]]],[11,"get_sseq","","",31,[[["self"],["sseqchoice"]],[["option",["sseq"]],["sseq"]]]],[11,"resolving","","",31,[[["message"],["self"]],[["result",["box"]],["box",["error"]]]]],[11,"relay","","",31,[[["message"],["self"]],[["result",["box"]],["box",["error"]]]]],[6,"Sender","ext_websocket","",null,null],[11,"from","ext_websocket::sseq","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","ext_websocket::actions","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"vzip","","",32,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"vzip","","",33,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"vzip","","",25,[[],["v"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"vzip","","",26,[[],["v"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"vzip","","",27,[[],["v"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"from","ext_websocket::managers","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"vzip","","",30,[[],["v"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"vzip","","",31,[[],["v"]]],[11,"act_sseq","ext_websocket::actions","",28,[[["sseq"],["self"]],[["option",["message"]],["message"]]]],[11,"act_resolution","","",28,[[["self"],["arc"]],[["option",["message"]],["message"]]]],[11,"to_string","","",28,[[["self"]],["string"]]],[11,"act_sseq","","",6,[[["sseq"],["self"]],[["option",["message"]],["message"]]]],[11,"act_sseq","","",7,[[["sseq"],["self"]],[["option",["message"]],["message"]]]],[11,"act_resolution","","",7,[[["self"],["arc"]],[["option",["message"]],["message"]]]],[11,"act_sseq","","",8,[[["sseq"],["self"]],[["option",["message"]],["message"]]]],[11,"act_sseq","","",9,[[["sseq"],["self"]],[["option",["message"]],["message"]]]],[11,"act_sseq","","",32,[[["sseq"],["self"]],[["option",["message"]],["message"]]]],[11,"act_sseq","","",10,[[["sseq"],["self"]],[["option",["message"]],["message"]]]],[11,"act_sseq","","",11,[[["sseq"],["self"]],[["option",["message"]],["message"]]]],[11,"act_sseq","","",12,[[["sseq"],["self"]],[["option",["message"]],["message"]]]],[11,"act_sseq","","",13,[[["sseq"],["self"]],[["option",["message"]],["message"]]]],[11,"act_resolution","","",13,[[["self"],["arc"]],[["option",["message"]],["message"]]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"act_resolution","","",22,[[["self"],["arc"]],[["option",["message"]],["message"]]]],[11,"act_resolution","","",24,[[["self"],["arc"]],[["option",["message"]],["message"]]]],[11,"from","","",28,[[["addproductdifferential"]],["action"]]],[11,"from","","",28,[[["addproducttype"]],["action"]]],[11,"from","","",28,[[["addpermanentclass"]],["action"]]],[11,"from","","",28,[[["adddifferential"]],["action"]]],[11,"from","","",28,[[["setclassname"]],["action"]]],[11,"from","","",28,[[["clear"]],["action"]]],[11,"from","","",28,[[["blockrefresh"]],["action"]]],[11,"from","","",28,[[["addproduct"]],["action"]]],[11,"from","","",28,[[["addclass"]],["action"]]],[11,"from","","",28,[[["resolving"]],["action"]]],[11,"from","","",28,[[["complete"]],["action"]]],[11,"from","","",28,[[["construct"]],["action"]]],[11,"from","","",28,[[["constructjson"]],["action"]]],[11,"from","","",28,[[["resolve"]],["action"]]],[11,"from","","",28,[[["setstructline"]],["action"]]],[11,"from","","",28,[[["setdifferential"]],["action"]]],[11,"from","","",28,[[["setclass"]],["action"]]],[11,"from","","",28,[[["setpagelist"]],["action"]]],[11,"from","","",28,[[["querytable"]],["action"]]],[11,"from","","",28,[[["querytableresult"]],["action"]]],[11,"from","","",28,[[["querycocyclestring"]],["action"]]],[11,"from","","",28,[[["querycocyclestringresult"]],["action"]]],[11,"clone","ext_websocket::sseq","",4,[[["self"]],["classstate"]]],[11,"clone","","",2,[[["self"]],["productitem"]]],[11,"clone","ext_websocket::actions","",5,[[["self"]],["message"]]],[11,"clone","","",26,[[["self"]],["recipient"]]],[11,"clone","","",27,[[["self"]],["sseqchoice"]]],[11,"clone","","",28,[[["self"]],["action"]]],[11,"clone","","",6,[[["self"]],["adddifferential"]]],[11,"clone","","",7,[[["self"]],["addproducttype"]]],[11,"clone","","",8,[[["self"]],["addpermanentclass"]]],[11,"clone","","",9,[[["self"]],["setclassname"]]],[11,"clone","","",32,[[["self"]],["clear"]]],[11,"clone","","",10,[[["self"]],["blockrefresh"]]],[11,"clone","","",11,[[["self"]],["addclass"]]],[11,"clone","","",12,[[["self"]],["addproduct"]]],[11,"clone","","",13,[[["self"]],["addproductdifferential"]]],[11,"clone","","",14,[[["self"]],["resolving"]]],[11,"clone","","",33,[[["self"]],["complete"]]],[11,"clone","","",15,[[["self"]],["construct"]]],[11,"clone","","",16,[[["self"]],["constructjson"]]],[11,"clone","","",17,[[["self"]],["resolve"]]],[11,"clone","","",18,[[["self"]],["setstructline"]]],[11,"clone","","",19,[[["self"]],["setdifferential"]]],[11,"clone","","",20,[[["self"]],["setclass"]]],[11,"clone","","",21,[[["self"]],["setpagelist"]]],[11,"clone","","",22,[[["self"]],["querytable"]]],[11,"clone","","",23,[[["self"]],["querytableresult"]]],[11,"clone","","",24,[[["self"]],["querycocyclestring"]]],[11,"clone","","",25,[[["self"]],["querycocyclestringresult"]]],[11,"eq","","",26,[[["recipient"],["self"]],["bool"]]],[11,"eq","","",27,[[["sseqchoice"],["self"]],["bool"]]],[11,"fmt","ext_websocket::sseq","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","ext_websocket::actions","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"try_into","","",28,[[],[["result",["addproductdifferential"]],["addproductdifferential"]]]],[11,"try_into","","",28,[[],[["result",["addproducttype"]],["addproducttype"]]]],[11,"try_into","","",28,[[],[["result",["addpermanentclass"]],["addpermanentclass"]]]],[11,"try_into","","",28,[[],[["adddifferential"],["result",["adddifferential"]]]]],[11,"try_into","","",28,[[],[["setclassname"],["result",["setclassname"]]]]],[11,"try_into","","",28,[[],[["result",["clear"]],["clear"]]]],[11,"try_into","","",28,[[],[["result",["blockrefresh"]],["blockrefresh"]]]],[11,"try_into","","",28,[[],[["addproduct"],["result",["addproduct"]]]]],[11,"try_into","","",28,[[],[["result",["addclass"]],["addclass"]]]],[11,"try_into","","",28,[[],[["result",["resolving"]],["resolving"]]]],[11,"try_into","","",28,[[],[["complete"],["result",["complete"]]]]],[11,"try_into","","",28,[[],[["result",["construct"]],["construct"]]]],[11,"try_into","","",28,[[],[["constructjson"],["result",["constructjson"]]]]],[11,"try_into","","",28,[[],[["result",["resolve"]],["resolve"]]]],[11,"try_into","","",28,[[],[["result",["setstructline"]],["setstructline"]]]],[11,"try_into","","",28,[[],[["result",["setdifferential"]],["setdifferential"]]]],[11,"try_into","","",28,[[],[["result",["setclass"]],["setclass"]]]],[11,"try_into","","",28,[[],[["result",["setpagelist"]],["setpagelist"]]]],[11,"try_into","","",28,[[],[["result",["querytable"]],["querytable"]]]],[11,"try_into","","",28,[[],[["result",["querytableresult"]],["querytableresult"]]]],[11,"try_into","","",28,[[],[["result",["querycocyclestring"]],["querycocyclestring"]]]],[11,"try_into","","",28,[[],[["result",["querycocyclestringresult"]],["querycocyclestringresult"]]]],[11,"serialize","ext_websocket::sseq","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",2,[[["self"],["__s"]],["result"]]],[11,"serialize","ext_websocket::actions","",5,[[["self"],["__s"]],["result"]]],[11,"serialize","","",26,[[["self"],["__s"]],["result"]]],[11,"serialize","","",27,[[["self"],["__s"]],["result"]]],[11,"serialize","","",28,[[["self"],["__s"]],["result"]]],[11,"serialize","","",6,[[["self"],["__s"]],["result"]]],[11,"serialize","","",7,[[["self"],["__s"]],["result"]]],[11,"serialize","","",8,[[["self"],["__s"]],["result"]]],[11,"serialize","","",9,[[["self"],["__s"]],["result"]]],[11,"serialize","","",32,[[["self"],["__s"]],["result"]]],[11,"serialize","","",10,[[["self"],["__s"]],["result"]]],[11,"serialize","","",11,[[["self"],["__s"]],["result"]]],[11,"serialize","","",12,[[["self"],["__s"]],["result"]]],[11,"serialize","","",13,[[["self"],["__s"]],["result"]]],[11,"serialize","","",14,[[["self"],["__s"]],["result"]]],[11,"serialize","","",33,[[["self"],["__s"]],["result"]]],[11,"serialize","","",15,[[["self"],["__s"]],["result"]]],[11,"serialize","","",16,[[["self"],["__s"]],["result"]]],[11,"serialize","","",17,[[["self"],["__s"]],["result"]]],[11,"serialize","","",18,[[["self"],["__s"]],["result"]]],[11,"serialize","","",19,[[["self"],["__s"]],["result"]]],[11,"serialize","","",20,[[["self"],["__s"]],["result"]]],[11,"serialize","","",21,[[["self"],["__s"]],["result"]]],[11,"serialize","","",22,[[["self"],["__s"]],["result"]]],[11,"serialize","","",23,[[["self"],["__s"]],["result"]]],[11,"serialize","","",24,[[["self"],["__s"]],["result"]]],[11,"serialize","","",25,[[["self"],["__s"]],["result"]]],[11,"deserialize","ext_websocket::sseq","",4,[[["__d"]],["result"]]],[11,"deserialize","","",2,[[["__d"]],["result"]]],[11,"deserialize","ext_websocket::actions","",5,[[["__d"]],["result"]]],[11,"deserialize","","",26,[[["__d"]],["result"]]],[11,"deserialize","","",27,[[["__d"]],["result"]]],[11,"deserialize","","",28,[[["__d"]],["result"]]],[11,"deserialize","","",6,[[["__d"]],["result"]]],[11,"deserialize","","",7,[[["__d"]],["result"]]],[11,"deserialize","","",8,[[["__d"]],["result"]]],[11,"deserialize","","",9,[[["__d"]],["result"]]],[11,"deserialize","","",32,[[["__d"]],["result"]]],[11,"deserialize","","",10,[[["__d"]],["result"]]],[11,"deserialize","","",11,[[["__d"]],["result"]]],[11,"deserialize","","",12,[[["__d"]],["result"]]],[11,"deserialize","","",13,[[["__d"]],["result"]]],[11,"deserialize","","",14,[[["__d"]],["result"]]],[11,"deserialize","","",33,[[["__d"]],["result"]]],[11,"deserialize","","",15,[[["__d"]],["result"]]],[11,"deserialize","","",16,[[["__d"]],["result"]]],[11,"deserialize","","",17,[[["__d"]],["result"]]],[11,"deserialize","","",18,[[["__d"]],["result"]]],[11,"deserialize","","",19,[[["__d"]],["result"]]],[11,"deserialize","","",20,[[["__d"]],["result"]]],[11,"deserialize","","",21,[[["__d"]],["result"]]],[11,"deserialize","","",22,[[["__d"]],["result"]]],[11,"deserialize","","",23,[[["__d"]],["result"]]],[11,"deserialize","","",24,[[["__d"]],["result"]]],[11,"deserialize","","",25,[[["__d"]],["result"]]]],"p":[[3,"Differential"],[3,"Product"],[3,"ProductItem"],[3,"Sseq"],[4,"ClassState"],[3,"Message"],[3,"AddDifferential"],[3,"AddProductType"],[3,"AddPermanentClass"],[3,"SetClassName"],[3,"BlockRefresh"],[3,"AddClass"],[3,"AddProduct"],[3,"AddProductDifferential"],[3,"Resolving"],[3,"Construct"],[3,"ConstructJson"],[3,"Resolve"],[3,"SetStructline"],[3,"SetDifferential"],[3,"SetClass"],[3,"SetPageList"],[3,"QueryTable"],[3,"QueryTableResult"],[3,"QueryCocycleString"],[3,"QueryCocycleStringResult"],[4,"Recipient"],[4,"SseqChoice"],[4,"Action"],[8,"ActionT"],[3,"ResolutionManager"],[3,"SseqManager"],[3,"Clear"],[3,"Complete"]]};
searchIndex["fp"] = {"doc":"","i":[[0,"prime","fp","",null,null],[3,"ValidPrime","fp::prime","",null,null],[12,"p","","",0,null],[5,"is_valid_prime","","",null,[[["u32"]],["bool"]]],[5,"inverse","","",null,[[["validprime"],["u32"]],["u32"]]],[5,"minus_one_to_the_n","","",null,[[["u32"]],["u32"]]],[5,"direct_binomial","","This uses a lookup table for n choose k when n and k are…",null,[[["validprime"],["u32"]],["u32"]]],[5,"integer_power","","Computes b^e.",null,[[["u32"]],["u32"]]],[5,"power_mod","","Compute b^e mod p.",null,[[["u32"]],["u32"]]],[5,"logp","","",null,[[["u32"]],["u32"]]],[5,"multinomial2","","",null,[[],["u32"]]],[5,"binomial2","","",null,[[["i32"]],["u32"]]],[5,"multinomial_odd","","",null,[[["validprime"]],["u32"]]],[5,"binomial_odd","","",null,[[["validprime"],["i32"]],["u32"]]],[5,"multinomial","","This computes the multinomial coefficient $\\binom{n}{l_1…",null,[[["validprime"]],["u32"]]],[5,"binomial","","",null,[[["validprime"],["i32"]],["u32"]]],[7,"INVERSE_TABLE","","",null,null],[7,"BINOMIAL_TABLE","","",null,null],[17,"NUM_PRIMES","","",null,null],[17,"MAX_PRIME","","",null,null],[17,"NOT_A_PRIME","","",null,null],[17,"MAX_MULTINOMIAL_LEN","","",null,null],[17,"PRIME_TO_INDEX_MAP","","",null,null],[11,"new","","",0,[[["u32"]],["self"]]],[11,"try_new","","",0,[[["u32"]],["option"]]],[0,"vector","fp","An `FpVector` is a vector with entries in Fp. We use this…",null,null],[3,"LimbBitIndexPair","fp::vector","",null,null],[12,"limb","","",1,null],[12,"bit_index","","",1,null],[3,"VectorContainer","","",null,null],[12,"dimension","","",2,null],[12,"slice_start","","",2,null],[12,"slice_end","","",2,null],[12,"limbs","","",2,null],[3,"FpVector2","","",null,null],[12,"vector_container","","",3,null],[3,"FpVector3","","",null,null],[12,"vector_container","","",4,null],[3,"FpVector5","","",null,null],[12,"vector_container","","",5,null],[3,"FpVectorGeneric","","",null,null],[12,"p","","",6,null],[12,"vector_container","","",6,null],[3,"FpVectorIterator","","",null,null],[12,"limbs","","",7,null],[12,"bit_length","","",7,null],[12,"bit_mask","","",7,null],[12,"entries_per_64_bits_m_1","","",7,null],[12,"limb_index","","",7,null],[12,"entries_left","","",7,null],[12,"cur_limb","","",7,null],[12,"counter","","",7,null],[3,"FpVectorSlice","","",null,null],[12,"old_slice","","",8,null],[12,"inner","","",8,null],[3,"FpVectorMask","","An FpVectorMask encodes a subset of the basis elements of…",null,null],[12,"p","","",9,null],[12,"dimension","","",9,null],[12,"masks","","",9,null],[4,"FpVector","","",null,null],[13,"FpVector2","","",10,null],[13,"FpVector3","","",10,null],[13,"FpVector5","","",10,null],[13,"FpVectorGeneric","","",10,null],[5,"bit_length","","",null,[[["validprime"]],["usize"]]],[5,"bitmask","","",null,[[["validprime"]],["u64"]]],[5,"entries_per_64_bits","","",null,[[["validprime"]],["usize"]]],[5,"initialize_limb_bit_index_table","","",null,[[["validprime"]]]],[5,"limb_bit_index_pair","","",null,[[["validprime"],["usize"]],["limbbitindexpair"]]],[7,"BIT_LENGHTS","","",null,null],[7,"BITMASKS","","",null,null],[7,"ENTRIES_PER_64_BITS","","",null,null],[7,"LIMB_BIT_INDEX_TABLE","","This table tells us which limb and which bitfield of that…",null,null],[7,"LIMB_BIT_INDEX_ONCE_TABLE","","",null,null],[17,"MAX_DIMENSION","","",null,null],[8,"FpVectorT","","",null,null],[10,"reduce_limbs","","",11,[[["self"],["usize"]]]],[10,"vector_container","","",11,[[["self"]],["vectorcontainer"]]],[10,"vector_container_mut","","",11,[[["self"]],["vectorcontainer"]]],[10,"prime","","",11,[[["self"]],["validprime"]]],[11,"dimension","","",11,[[["self"]],["usize"]]],[11,"offset","","",11,[[["self"]],["usize"]]],[11,"min_index","","",11,[[["self"]],["usize"]]],[11,"slice","","",11,[[["self"]]]],[11,"set_slice","","",11,[[["self"],["usize"]]]],[11,"restore_slice","","",11,[[["self"]]]],[11,"clear_slice","","",11,[[["self"]]]],[11,"into_slice","","Drops every element in the fp_vector that is not in the…",11,[[["self"]]]],[11,"min_limb","","",11,[[["self"]],["usize"]]],[11,"max_limb","","",11,[[["self"]],["usize"]]],[11,"limbs","","",11,[[["self"]],["vec"]]],[11,"limbs_mut","","",11,[[["self"]],["vec"]]],[11,"limb_mask","","",11,[[["self"],["usize"]],["u64"]]],[11,"set_to_zero_pure","","",11,[[["self"]]]],[11,"set_to_zero","","",11,[[["self"]]]],[11,"shift_assign","","",11,[[["self"],["fpvector"]]]],[11,"assign","","",11,[[["self"],["fpvector"]]]],[11,"is_zero_pure","","",11,[[["self"]],["bool"]]],[11,"is_zero","","",11,[[["self"]],["bool"]]],[11,"entry","","",11,[[["self"],["usize"]],["u32"]]],[11,"set_entry","","",11,[[["self"],["usize"],["u32"]]]],[11,"add_basis_element","","",11,[[["self"],["usize"],["u32"]]]],[11,"unpack","","Unpacks an FpVector onto an array slice. note that the…",11,[[["self"]]]],[11,"to_vector","","",11,[[["self"]],[["vec",["u32"]],["u32"]]]],[11,"pack","","",11,[[["self"]]]],[11,"add_tensor","","`coeff` need not be reduced mod p. Adds v otimes w to self.",11,[[["u32"],["usize"],["fpvector"],["self"]]]],[11,"add","","Adds `c` * `other` to `self`. `other` must have the same…",11,[[["self"],["fpvector"],["u32"]]]],[11,"shift_add","","",11,[[["self"],["fpvector"],["u32"]]]],[11,"shift_right_add","","",11,[[["self"],["fpvector"],["u32"]]]],[11,"shift_left_add","","",11,[[["self"],["fpvector"],["u32"]]]],[11,"scale","","",11,[[["self"],["u32"]]]],[11,"new","","",10,[[["validprime"],["usize"]],["fpvector"]]],[11,"from_vec","","",10,[[["validprime"]],["fpvector"]]],[11,"add_limb","","",10,[[["validprime"],["u32"],["u64"]],["u64"]]],[11,"number_of_limbs","","",10,[[["validprime"],["usize"]],["usize"]]],[11,"padded_dimension","","",10,[[["validprime"],["usize"]],["usize"]]],[11,"scratch_vector","","",10,[[["validprime"],["usize"]],["self"]]],[11,"set_scratch_vector_size","","",10,[[["usize"]],["self"]]],[11,"iter","","",10,[[["self"]],["fpvectoriterator"]]],[11,"pack_limb","","",10,[[["usize"],["validprime"],["vec"]],["usize"]]],[11,"unpack_limb","","",10,[[["usize"],["validprime"]],["usize"]]],[11,"borrow_slice","","",10,[[["self"],["usize"]],["fpvectorslice"]]],[11,"new","","",7,[[["fpvector"]],["fpvectoriterator"]]],[11,"skip_n","","",7,[[["self"],["usize"]]]],[11,"new","","",9,[[["validprime"],["usize"]],["self"]]],[11,"set_zero","","",9,[[["self"]]]],[11,"set_mask","","If `on` is true, we add the `i`th basis element to the…",9,[[["self"],["usize"],["bool"]]]],[11,"apply","","This projects `target` onto the subspace spanned by the…",9,[[["fpvector"],["self"]]]],[0,"matrix","fp","",null,null],[3,"Matrix","fp::matrix","A matrix! In particular, a matrix with values in F_p. The…",null,null],[12,"p","","",12,null],[12,"rows","","",12,null],[12,"columns","","",12,null],[12,"slice_row_start","","",12,null],[12,"slice_row_end","","",12,null],[12,"slice_col_start","","",12,null],[12,"slice_col_end","","",12,null],[12,"vectors","","",12,null],[3,"Subspace","","A subspace of a vector space. # Fields * `matrix` - A…",null,null],[12,"matrix","","",13,null],[12,"column_to_pivot_row","","",13,null],[3,"QuasiInverse","","Given a matrix M, a quasi-inverse Q is a map from the…",null,null],[12,"image","","",14,null],[12,"preimage","","",14,null],[3,"AugmentedMatrix3","","This models an augmented matrix.",null,null],[12,"end","","",15,null],[12,"start","","",15,null],[12,"inner","","",15,null],[3,"AugmentedMatrix2","","This models an augmented matrix.",null,null],[12,"end","","",16,null],[12,"start","","",16,null],[12,"inner","","",16,null],[3,"MatrixSlice","","",null,null],[12,"0","","",17,null],[11,"new","","Produces a new matrix over F_p with the specified number…",12,[[["validprime"],["usize"]],["matrix"]]],[11,"from_rows","","Produces a matrix from a list of rows. If `vectors.len()…",12,[[["usize"],["fpvector"],["validprime"],["vec",["fpvector"]]],["self"]]],[11,"from_vec","","Produces a Matrix from an `&[Vec<u32>]` object. If the…",12,[[["validprime"]],["matrix"]]],[11,"to_vec","","",12,[[["self"]],[["vec",["vec"]],["vec",["u32"]]]]],[11,"augmented_from_vec","","Produces a padded augmented matrix from an `&[Vec<u32>]`…",12,[[["validprime"]]]],[11,"set_identity","","",12,[[["self"],["usize"]]]],[11,"prime","","",12,[[["self"]],["validprime"]]],[11,"rows","","Gets the number of rows in the matrix.",12,[[["self"]],["usize"]]],[11,"columns","","Gets the number of columns in the matrix.",12,[[["self"]],["usize"]]],[11,"set_slice","","Sets the slice on the matrix. Restricts to the submatrix…",12,[[["self"],["usize"]]]],[11,"clear_slice","","Un-slice the matrix.",12,[[["self"]]]],[11,"set_row_slice","","",12,[[["self"],["usize"]]]],[11,"clear_row_slice","","",12,[[["self"]]]],[11,"into_slice","","",12,[[],["self"]]],[11,"into_vec","","",12,[[],[["vec",["fpvector"]],["fpvector"]]]],[11,"iter","","",12,[[["self"]],[["fpvector"],["iter",["fpvector"]]]]],[11,"iter_mut","","",12,[[["self"]],[["itermut",["fpvector"]],["fpvector"]]]],[11,"swap_rows","","",12,[[["self"],["usize"]]]],[11,"row_op","","",12,[[["self"],["usize"],["u32"]]]],[11,"row_reduce","","Perform row reduction to reduce it to reduced row echelon…",12,[[["self"],["vec"]]]],[11,"row_reduce_offset","","",12,[[["self"],["vec"],["usize"]]]],[11,"find_pivots_permutation","","This is very similar to row_reduce, except we only need to…",12,[[["self"],["iterator"]],[["vec",["usize"]],["usize"]]]],[11,"row_reduce_permutation","","",12,[[["self"],["vec"],["t"]]]],[11,"new","","",13,[[["validprime"],["usize"]],["self"]]],[11,"subquotient","","Given a chain of subspaces `subspace` < `space` <…",13,[[["usize"],["option",["subspace"]],["subspace"]],[["vec",["usize"]],["usize"]]]],[11,"entire_space","","",13,[[["validprime"],["usize"]],["self"]]],[11,"add_vector","","This adds a vector to the subspace. This function assumes…",13,[[["self"],["fpvector"]]]],[11,"add_vectors","","",13,[[["self"]]]],[11,"add_basis_elements","","",13,[[["self"]]]],[11,"reduce","","Projects a vector to a complement of the subspace. The…",13,[[["fpvector"],["self"]]]],[11,"shift_reduce","","A version of `reduce` that doesn't require the vectors to…",13,[[["fpvector"],["self"]]]],[11,"row_reduce","","",13,[[["self"]]]],[11,"contains","","",13,[[["fpvector"],["self"]],["bool"]]],[11,"dimension","","",13,[[["self"]],["usize"]]],[11,"basis","","Returns a basis of the subspace.",13,[[["self"]]]],[11,"set_to_zero","","Sets the subspace to be the zero subspace.",13,[[["self"]]]],[11,"set_to_entire","","Sets the subspace to be the entire subspace.",13,[[["self"]]]],[11,"prime","","",14,[[["self"]],["validprime"]]],[11,"apply","","Apply the quasi-inverse to an input vector and add a…",14,[[["fpvector"],["u32"],["fpvector"],["self"]]]],[11,"set_to_zero","","",12,[[["self"]]]],[11,"find_first_row_in_block","","",12,[[["usize"],["self"]],["usize"]]],[11,"compute_kernel","","Computes the kernel from an augmented matrix in rref. To…",12,[[["self"],["usize"]],["subspace"]]],[11,"compute_quasi_inverse","","Computes the quasi-inverse of a matrix given a rref of…",12,[[["usize"],["self"]],["quasiinverse"]]],[11,"compute_quasi_inverses","","This function computes quasi-inverses for matrices A, B…",12,[[["usize"],["self"]]]],[11,"get_image","","",12,[[["self"],["usize"]],["subspace"]]],[11,"extend_to_surjection","","Given a matrix M in rref, add rows to make the matrix…",12,[[["self"],["usize"]],[["vec",["usize"]],["usize"]]]],[11,"extend_image_to_desired_image","","Given a matrix in rref, say [A|B|C], where B lies between…",12,[[["usize"],["subspace"],["self"]],[["vec",["usize"]],["usize"]]]],[11,"extend_image","","Extends the image of a matrix to either the whole…",12,[[["usize"],["option"],["self"]],[["vec",["usize"]],["usize"]]]],[11,"apply","","Applies a matrix to a vector.",12,[[["fpvector"],["u32"],["fpvector"],["self"]]]],[11,"new","","",15,[[["validprime"],["usize"]],["self"]]],[11,"segment","","",15,[[["self"],["usize"]],["matrixslice"]]],[11,"row_segment","","",15,[[["self"],["usize"]],["fpvectorslice"]]],[11,"into_matrix","","",15,[[],["matrix"]]],[11,"new","","",16,[[["validprime"],["usize"]],["self"]]],[11,"segment","","",16,[[["self"],["usize"]],["matrixslice"]]],[11,"row_segment","","",16,[[["self"],["usize"]],["fpvectorslice"]]],[11,"into_matrix","","",16,[[],["matrix"]]],[11,"compute_quasi_inverse","","",16,[[["self"]],["quasiinverse"]]],[11,"compute_kernel","","",16,[[["self"]],["subspace"]]],[11,"compute_quasi_inverses","","",15,[[["self"]]]],[11,"from","fp::prime","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","fp::vector","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","fp::matrix","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"reduce_limbs","fp::vector","",10,[[["self"],["usize"]]]],[11,"vector_container","","",10,[[["self"]],["vectorcontainer"]]],[11,"vector_container_mut","","",10,[[["self"]],["vectorcontainer"]]],[11,"prime","","",10,[[["self"]],["validprime"]]],[11,"dimension","","",10,[[["self"]],["usize"]]],[11,"offset","","",10,[[["self"]],["usize"]]],[11,"min_index","","",10,[[["self"]],["usize"]]],[11,"slice","","",10,[[["self"]]]],[11,"set_slice","","",10,[[["self"],["usize"]]]],[11,"restore_slice","","",10,[[["self"]]]],[11,"clear_slice","","",10,[[["self"]]]],[11,"into_slice","","",10,[[["self"]]]],[11,"min_limb","","",10,[[["self"]],["usize"]]],[11,"max_limb","","",10,[[["self"]],["usize"]]],[11,"limbs","","",10,[[["self"]],["vec"]]],[11,"limbs_mut","","",10,[[["self"]],["vec"]]],[11,"limb_mask","","",10,[[["self"],["usize"]],["u64"]]],[11,"set_to_zero_pure","","",10,[[["self"]]]],[11,"set_to_zero","","",10,[[["self"]]]],[11,"shift_assign","","",10,[[["self"],["fpvector"]]]],[11,"assign","","",10,[[["self"],["fpvector"]]]],[11,"is_zero_pure","","",10,[[["self"]],["bool"]]],[11,"is_zero","","",10,[[["self"]],["bool"]]],[11,"entry","","",10,[[["self"],["usize"]],["u32"]]],[11,"set_entry","","",10,[[["self"],["usize"],["u32"]]]],[11,"add_basis_element","","",10,[[["self"],["usize"],["u32"]]]],[11,"unpack","","",10,[[["self"]]]],[11,"to_vector","","",10,[[["self"]],[["vec",["u32"]],["u32"]]]],[11,"pack","","",10,[[["self"]]]],[11,"add_tensor","","",10,[[["u32"],["usize"],["fpvector"],["self"]]]],[11,"add","","",10,[[["self"],["fpvector"],["u32"]]]],[11,"shift_add","","",10,[[["self"],["fpvector"],["u32"]]]],[11,"shift_right_add","","",10,[[["self"],["fpvector"],["u32"]]]],[11,"shift_left_add","","",10,[[["self"],["fpvector"],["u32"]]]],[11,"scale","","",10,[[["self"],["u32"]]]],[11,"reduce_limbs","","",3,[[["self"],["usize"]]]],[11,"prime","","",3,[[["self"]],["validprime"]]],[11,"vector_container","","",3,[[["self"]],["vectorcontainer"]]],[11,"vector_container_mut","","",3,[[["self"]],["vectorcontainer"]]],[11,"add_basis_element","","",3,[[["self"],["usize"],["u32"]]]],[11,"reduce_limbs","","",4,[[["self"],["usize"]]]],[11,"prime","","",4,[[["self"]],["validprime"]]],[11,"vector_container","","",4,[[["self"]],["vectorcontainer"]]],[11,"vector_container_mut","","",4,[[["self"]],["vectorcontainer"]]],[11,"reduce_limbs","","",5,[[["self"],["usize"]]]],[11,"prime","","",5,[[["self"]],["validprime"]]],[11,"vector_container","","",5,[[["self"]],["vectorcontainer"]]],[11,"vector_container_mut","","",5,[[["self"]],["vectorcontainer"]]],[11,"reduce_limbs","","",6,[[["self"],["usize"]]]],[11,"prime","","",6,[[["self"]],["validprime"]]],[11,"vector_container","","",6,[[["self"]],["vectorcontainer"]]],[11,"vector_container_mut","","",6,[[["self"]],["vectorcontainer"]]],[11,"drop","","",8,[[["self"]]]],[11,"drop","fp::matrix","",17,[[["self"]]]],[11,"from","fp::vector","",10,[[["fpvector2"]],["fpvector"]]],[11,"from","","",10,[[["fpvector3"]],["fpvector"]]],[11,"from","","",10,[[["fpvector5"]],["fpvector"]]],[11,"from","","",10,[[["fpvectorgeneric"]],["fpvector"]]],[11,"next","","",7,[[["self"]],["option"]]],[11,"clone","fp::prime","",0,[[["self"]],["validprime"]]],[11,"clone","fp::vector","",1,[[["self"]],["limbbitindexpair"]]],[11,"clone","","",10,[[["self"]],["fpvector"]]],[11,"clone","","",2,[[["self"]],["vectorcontainer"]]],[11,"clone","","",3,[[["self"]],["fpvector2"]]],[11,"clone","","",4,[[["self"]],["fpvector3"]]],[11,"clone","","",5,[[["self"]],["fpvector5"]]],[11,"clone","","",6,[[["self"]],["fpvectorgeneric"]]],[11,"clone","fp::matrix","",12,[[["self"]],["matrix"]]],[11,"clone","","",13,[[["self"]],["subspace"]]],[11,"eq","fp::prime","",0,[[["validprime"],["self"]],["bool"]]],[11,"ne","","",0,[[["validprime"],["self"]],["bool"]]],[11,"eq","fp::vector","",10,[[["self"]],["bool"]]],[11,"eq","fp::matrix","",12,[[["self"],["matrix"]],["bool"]]],[11,"ne","","",12,[[["self"],["matrix"]],["bool"]]],[11,"deref","fp::prime","",0,[[["self"]]]],[11,"deref","fp::vector","",8,[[["self"]],["fpvector"]]],[11,"deref","fp::matrix","",12,[[["self"]]]],[11,"deref","","",15,[[["self"]],["matrix"]]],[11,"deref","","",16,[[["self"]],["matrix"]]],[11,"deref","","",17,[[["self"]],["matrix"]]],[11,"deref_mut","fp::vector","",8,[[["self"]],["fpvector"]]],[11,"deref_mut","fp::matrix","",12,[[["self"]]]],[11,"deref_mut","","",15,[[["self"]],["matrix"]]],[11,"deref_mut","","",16,[[["self"]],["matrix"]]],[11,"deref_mut","","",17,[[["self"]],["matrix"]]],[11,"fmt","fp::prime","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","fp::vector","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","fp::matrix","",12,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","fp::prime","",0,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","fp::vector","",10,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","fp::matrix","",12,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"index","","",12,[[["self"],["usize"]]]],[11,"index_mut","","",12,[[["self"],["usize"]]]],[11,"try_into","fp::vector","",10,[[],[["result",["fpvector2"]],["fpvector2"]]]],[11,"try_into","","",10,[[],[["result",["fpvector3"]],["fpvector3"]]]],[11,"try_into","","",10,[[],[["result",["fpvector5"]],["fpvector5"]]]],[11,"try_into","","",10,[[],[["result",["fpvectorgeneric"]],["fpvectorgeneric"]]]],[11,"serialize","fp::prime","",0,[[["s"],["self"]],["result"]]],[11,"serialize","fp::vector","",10,[[["s"],["self"]],["result"]]],[11,"deserialize","fp::prime","",0,[[["d"]],["result"]]],[11,"deserialize","fp::vector","",10,[[["d"]],["result"]]],[11,"save","","",10,[[["self"]],["result"]]],[11,"save","fp::matrix","",12,[[["self"]],["result"]]],[11,"save","","",13,[[["self"]],["result"]]],[11,"load","fp::vector","",10,[[["validprime"]],["result"]]],[11,"load","fp::matrix","",12,[[["validprime"]],["result"]]],[11,"load","","",13,[[["validprime"]],["result"]]]],"p":[[3,"ValidPrime"],[3,"LimbBitIndexPair"],[3,"VectorContainer"],[3,"FpVector2"],[3,"FpVector3"],[3,"FpVector5"],[3,"FpVectorGeneric"],[3,"FpVectorIterator"],[3,"FpVectorSlice"],[3,"FpVectorMask"],[4,"FpVector"],[8,"FpVectorT"],[3,"Matrix"],[3,"Subspace"],[3,"QuasiInverse"],[3,"AugmentedMatrix3"],[3,"AugmentedMatrix2"],[3,"MatrixSlice"]]};
searchIndex["once"] = {"doc":"","i":[[3,"OnceVec","once","",null,null],[12,"data","","",0,null],[3,"OnceBiVec","","",null,null],[12,"data","","",1,null],[12,"min_degree","","",1,null],[17,"USIZE_LEN","","",null,null],[11,"into_vec","","",0,[[],["vec"]]],[11,"from_vec","","",0,[[["vec"]],["self"]]],[11,"new","","",0,[[],["self"]]],[11,"with_capacity","","",0,[[["usize"]],["self"]]],[11,"len","","",0,[[["self"]],["usize"]]],[11,"is_empty","","",0,[[["self"]],["bool"]]],[11,"get","","",0,[[["self"],["usize"]],[["option"],["t"]]]],[11,"last","","",0,[[["self"]],[["option"],["t"]]]],[11,"reserve","","",0,[[["self"],["usize"]]]],[11,"reserve_exact","","",0,[[["self"],["usize"]]]],[11,"push","","",0,[[["self"],["t"]]]],[11,"iter","","",0,[[["self"]]]],[11,"new","","",1,[[["i32"]],["self"]]],[11,"from_vec","","",1,[[["vec"],["i32"]],["self"]]],[11,"with_capacity","","",1,[[["i32"]],["self"]]],[11,"min_degree","","",1,[[["self"]],["i32"]]],[11,"max_degree","","This returns the largest degree in the bivector. This is…",1,[[["self"]],["i32"]]],[11,"len","","This returns the \"length\" of the bivector, defined to be…",1,[[["self"]],["i32"]]],[11,"is_empty","","",1,[[["self"]],["bool"]]],[11,"push","","",1,[[["self"],["t"]]]],[11,"get","","",1,[[["self"],["i32"]],[["option"],["t"]]]],[11,"last","","",1,[[["self"]],[["option"],["t"]]]],[11,"iter","","",1,[[["self"]]]],[11,"iter_enum","","",1,[[["self"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"into_iter","","",0,[[]]],[11,"default","","",0,[[],["self"]]],[11,"eq","","",0,[[["oncevec"],["self"]],["bool"]]],[11,"eq","","",1,[[["oncebivec"],["self"]],["bool"]]],[11,"ne","","",1,[[["oncebivec"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"index","","",0,[[["self"],["usize"]],["t"]]],[11,"index","","",0,[[["u32"],["self"]],["t"]]],[11,"index","","",1,[[["self"],["i32"]],["t"]]],[11,"index_mut","","",0,[[["self"],["usize"]],["t"]]],[11,"index_mut","","",0,[[["self"],["u32"]],["t"]]],[11,"index_mut","","",1,[[["self"],["i32"]],["t"]]],[11,"save","","",0,[[["self"]],["result"]]],[11,"save","","",1,[[["self"]],["result"]]],[11,"load","","",0,[[],["result"]]],[11,"load","","",1,[[],["result"]]]],"p":[[3,"OnceVec"],[3,"OnceBiVec"]]};
searchIndex["query"] = {"doc":"","i":[[5,"query","query","",null,[[["str"],["f"]],["display"]]],[5,"query_with_default","","",null,[[["str"],["display"],["f"]],["display"]]],[5,"query_with_default_no_default_indicated","","",null,[[["str"],["display"],["f"]],["display"]]],[5,"query_yes_no","","",null,[[["str"]],["bool"]]]],"p":[]};
searchIndex["rust_ext"] = {"doc":"","i":[[3,"Config","rust_ext","",null,null],[12,"module_paths","","",0,null],[12,"module_file_name","","",0,null],[12,"algebra_name","","",0,null],[12,"max_degree","","",0,null],[3,"AlgebraicObjectsBundle","","",null,null],[12,"chain_complex","","",1,null],[12,"resolution","","",1,null],[3,"ModuleFileNotFoundError","","",null,null],[12,"name","","",2,null],[5,"construct","","",null,[[["config"]],[["result",["algebraicobjectsbundle","box"]],["algebraicobjectsbundle"],["box",["error"]]]]],[5,"construct_from_json","","",null,[[["value"],["string"]],[["result",["algebraicobjectsbundle","box"]],["algebraicobjectsbundle"],["box",["error"]]]]],[5,"run_define_module","","",null,[[],[["result",["string","box"]],["box",["error"]],["string"]]]],[5,"run_resolve","","",null,[[["config"]],[["result",["string","box"]],["box",["error"]],["string"]]]],[5,"run_yoneda","","",null,[[["config"]],[["result",["string","box"]],["box",["error"]],["string"]]]],[5,"run_steenrod","","",null,[[],[["result",["string","box"]],["box",["error"]],["string"]]]],[5,"run_test","","",null,[[],[["result",["box"]],["box",["error"]]]]],[5,"load_module_from_file","","",null,[[["config"]],[["result",["string","box"]],["box",["error"]],["string"]]]],[0,"combinatorics","","",null,null],[5,"adem_relation_coefficient","rust_ext::combinatorics","",null,[[["u32"],["validprime"]],["u32"]]],[5,"inadmissible_pairs","","",null,[[["i32"],["validprime"],["bool"]],["vec"]]],[5,"tau_degrees","","",null,[[["validprime"]]]],[5,"xi_degrees","","",null,[[["validprime"]]]],[7,"XI_DEGREES","","",null,null],[7,"TAU_DEGREES","","",null,null],[17,"MAX_XI_TAU","","",null,null],[0,"block_structure","rust_ext","",null,null],[3,"GeneratorBasisEltPair","rust_ext::block_structure","",null,null],[12,"generator_degree","","",3,null],[12,"generator_index","","",3,null],[12,"basis_index","","",3,null],[3,"BlockStructure","","",null,null],[12,"total_dimension","","",4,null],[12,"basis_element_to_block_idx","","",4,null],[12,"block_starts","","",4,null],[3,"BlockStart","","",null,null],[12,"block_start_index","","",5,null],[12,"block_size","","",5,null],[11,"new","","",4,[[["bivec"]],["self"]]],[11,"generator_to_block","","",4,[[["usize"],["self"],["i32"]],["blockstart"]]],[11,"generator_basis_elt_to_index","","",4,[[["usize"],["i32"],["self"]],["usize"]]],[11,"index_to_generator_basis_elt","","",4,[[["self"],["usize"]],["generatorbasiseltpair"]]],[11,"add_block","","",4,[[["u32"],["fpvector"],["i32"],["usize"],["fpvector"],["self"]]]],[0,"algebra","rust_ext","",null,null],[3,"MilnorProfileOption","rust_ext::algebra","",null,null],[12,"truncated","","",6,null],[12,"q_part","","",6,null],[12,"p_part","","",6,null],[3,"AlgebraSpec","","",null,null],[12,"p","","",7,null],[12,"algebra","","",7,null],[12,"profile","","",7,null],[3,"InvalidAlgebraError","","",null,null],[12,"name","","",8,null],[4,"AlgebraAny","","",null,null],[13,"AdemAlgebra","","",9,null],[13,"MilnorAlgebra","","",9,null],[13,"Field","","",9,null],[0,"adem_algebra","","",null,null],[3,"BOCKSTEIN_TABLE","rust_ext::algebra::adem_algebra","",null,null],[12,"__private_field","","",10,null],[3,"AdemBasisElement","","The format of the AdemBasisElement is as follows. To…",null,null],[12,"degree","","",11,null],[12,"excess","","",11,null],[12,"bocksteins","","",11,null],[12,"ps","","",11,null],[3,"AdemAlgebra","","",null,null],[12,"p","","",12,null],[12,"name","","",12,null],[12,"generic","","",12,null],[12,"unstable","","",12,null],[12,"next_degree","","",12,null],[12,"even_basis_table","","",12,null],[12,"basis_table","","",12,null],[12,"basis_element_to_index_map","","",12,null],[12,"multiplication_table","","",12,null],[12,"sort_order","","",12,null],[5,"adem_basis_element_excess_sort_order","","",null,[[["adembasiselement"]],["ordering"]]],[5,"adem_basis_element_length_sort_order","","",null,[[["adembasiselement"]],["ordering"]]],[5,"shift_vec","","",null,[[["isize"],["vec"]]]],[11,"new","","",12,[[["validprime"],["bool"]],["self"]]],[11,"generate_basis_even","","",12,[[["self"],["i32"]]]],[11,"generate_basis_even_degreen","","",12,[[["self"],["i32"]]]],[11,"generate_basis2","","",12,[[["self"],["i32"]]]],[11,"generate_basis_generic","","",12,[[["self"],["i32"]]]],[11,"generate_basis_generic_degreen","","",12,[[["self"],["i32"]]]],[11,"generate_basis_element_to_index_map","","",12,[[["self"],["i32"]]]],[11,"basis_element_from_index","","",12,[[["usize"],["self"],["i32"]],["adembasiselement"]]],[11,"try_basis_element_to_index","","",12,[[["self"],["adembasiselement"]],[["option",["usize"]],["usize"]]]],[11,"basis_element_to_index","","",12,[[["self"],["adembasiselement"]],["usize"]]],[11,"tail_of_basis_element_to_index","","",12,[[["adembasiselement"],["u32"],["self"]],["usize"]]],[11,"generate_multiplication_table_2","","",12,[[["self"],["i32"]]]],[11,"generate_multiplication_table_2_step","","",12,[[["usize"],["i32"],["self"]],["fpvector"]]],[11,"generate_multiplication_table_generic","","",12,[[["self"],["i32"]]]],[11,"generate_multiplication_table_generic_step","","This function expresses $Sq^x$ (current) in terms of the…",12,[[["usize"],["i32"],["self"]],["fpvector"]]],[11,"multiply","","",12,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"make_mono_admissible","","",12,[[["adembasiselement"],["u32"],["fpvector"],["i32"],["self"]]]],[11,"make_mono_admissible_2","","Reduce a Steenrod monomial at the prime 2. # Arguments: *…",12,[[["adembasiselement"],["fpvector"],["i32"],["self"],["bool"]]]],[11,"make_mono_admissible_generic","","",12,[[["adembasiselement"],["u32"],["fpvector"],["i32"],["self"],["bool"]]]],[11,"decompose_basis_element_2","","",12,[[["usize"],["self"],["i32"]],["vec"]]],[11,"decompose_basis_element_generic","","",12,[[["usize"],["self"],["i32"]],["vec"]]],[11,"beps_pn","","",12,[[["u32"],["self"]]]],[0,"milnor_algebra","rust_ext::algebra","",null,null],[3,"MilnorProfile","rust_ext::algebra::milnor_algebra","",null,null],[12,"truncated","","",13,null],[12,"q_part","","",13,null],[12,"p_part","","",13,null],[3,"QPart","","",null,null],[12,"degree","","",14,null],[12,"q_part","","",14,null],[3,"MilnorBasisElement","","",null,null],[12,"q_part","","",15,null],[12,"p_part","","",15,null],[12,"degree","","",15,null],[3,"MilnorAlgebra","","",null,null],[12,"profile","","",16,null],[12,"name","","",16,null],[12,"next_degree","","",16,null],[12,"p","","",16,null],[12,"generic","","",16,null],[12,"ppart_table","","",16,null],[12,"qpart_table","","",16,null],[12,"basis_table","","",16,null],[12,"basis_element_to_index_map","","",16,null],[3,"Matrix2D","","",null,null],[12,"cols","","",17,null],[12,"inner","","",17,null],[3,"PPartMultiplier","","",null,null],[12,"p","","",18,null],[12,"M","","",18,null],[12,"r","","",18,null],[12,"rows","","",18,null],[12,"cols","","",18,null],[12,"diag_num","","",18,null],[12,"init","","",18,null],[12,"diagonal","","",18,null],[5,"from_p","","",null,[[["vec",["u32"]],["u32"],["i32"]],["milnorbasiselement"]]],[6,"PPart","","",null,null],[17,"ZERO_QPART","","",null,null],[11,"new","","",16,[[["validprime"]],["self"]]],[11,"basis_element_from_index","","",16,[[["usize"],["self"],["i32"]],["milnorbasiselement"]]],[11,"try_basis_element_to_index","","",16,[[["milnorbasiselement"],["self"]],[["option",["usize"]],["usize"]]]],[11,"basis_element_to_index","","",16,[[["milnorbasiselement"],["self"]],["usize"]]],[11,"compute_ppart","","",16,[[["self"],["i32"]]]],[11,"compute_qpart","","",16,[[["self"],["i32"]]]],[11,"generate_basis_generic","","",16,[[["self"],["i32"]]]],[11,"generate_basis_2","","",16,[[["self"],["i32"]]]],[11,"try_beps_pn","","",16,[[["u32"],["self"]],["option"]]],[11,"beps_pn","","",16,[[["u32"],["self"]]]],[11,"multiply_qpart","","",16,[[["milnorbasiselement"],["self"],["u32"]],["vec"]]],[11,"multiply","","",16,[[["u32"],["fpvector"],["milnorbasiselement"],["self"]]]],[11,"new","","",17,[[["usize"]],["self"]]],[11,"prime","","",18,[[["self"]],["validprime"]]],[11,"new","","",18,[[["validprime"],["vec"]],["ppartmultiplier"]]],[11,"update","","",18,[[["self"]],["bool"]]],[11,"next","","",18,[[["self"],["milnorbasiselement"]],[["u32"],["option",["u32"]]]]],[11,"decompose_basis_element_qpart","","",16,[[["usize"],["self"],["i32"]],["vec"]]],[11,"decompose_basis_element_ppart","","",16,[[["usize"],["self"],["i32"]],["vec"]]],[11,"increment_p_part","","Returns `true` if the new element is not within the bounds",16,[[["vec"]],["bool"]]],[0,"field","rust_ext::algebra","",null,null],[3,"Field","rust_ext::algebra::field","",null,null],[12,"prime","","",19,null],[11,"new","","",19,[[["validprime"]],["self"]]],[17,"_IMPL_DESERIALIZE_FOR_MilnorProfileOption","rust_ext::algebra","",null,null],[17,"_IMPL_DESERIALIZE_FOR_AlgebraSpec","","",null,null],[8,"Algebra","","A graded algebra over F_p, finite dimensional in each…",null,null],[10,"algebra_type","","The \"type\" of the algebra, which is \"adem\" or \"milnor\".…",20,[[["self"]],["str"]]],[10,"prime","","Returns the prime the algebra is over.",20,[[["self"]],["validprime"]]],[11,"name","","",20,[[["self"]],["str"]]],[10,"compute_basis","","Computes the list of basis elements up to and including…",20,[[["self"],["i32"]]]],[10,"dimension","","Gets the dimension of the algebra in degree `degree`.",20,[[["self"],["i32"]],["usize"]]],[10,"multiply_basis_elements","","Computes the product `r * s` of the two basis elements,…",20,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"multiply_basis_element_by_element","","",20,[[["u32"],["fpvector"],["i32"],["usize"],["fpvector"],["self"]]]],[11,"multiply_element_by_basis_element","","",20,[[["u32"],["fpvector"],["i32"],["usize"],["fpvector"],["self"]]]],[11,"multiply_element_by_element","","",20,[[["u32"],["fpvector"],["i32"],["fpvector"],["self"]]]],[11,"default_filtration_one_products","","A filtration one element in Ext(k, k) is the same as an…",20,[[["self"]],["vec"]]],[11,"json_to_basis","","Converts a JSON object into a basis element. The way basis…",20,[[["value"],["self"]]]],[11,"json_from_basis","","",20,[[["usize"],["self"],["i32"]],["value"]]],[11,"string_to_basis","","",20,[[["str"],["self"]],[["str"],["iresult",["str"]]]]],[11,"basis_element_to_string","","Converts a basis element into a string for display.",20,[[["usize"],["self"],["i32"]],["string"]]],[11,"element_to_string","","Converts an element into a string for display.",20,[[["fpvector"],["self"],["i32"]],["string"]]],[11,"generators","","Given a degree `degree`, the function returns a list of…",20,[[["self"],["i32"]],[["vec",["usize"]],["usize"]]]],[11,"decompose_basis_element","","Given a non-generator basis element of the algebra,…",20,[[["usize"],["self"],["i32"]],["vec"]]],[11,"relations_to_check","","Get any relations that the algebra wants checked to ensure…",20,[[["self"],["i32"]],[["vec"],["vec",["vec"]]]]],[8,"Bialgebra","","",null,null],[10,"decompose","","This function decomposes an element of the algebra as a…",21,[[["usize"],["self"],["i32"]],["vec"]]],[10,"coproduct","","Expresses Delta(x) as sum_j (A_{ij} (x) B_{ij}). Here x…",21,[[["usize"],["self"],["i32"]],["vec"]]],[11,"from_json","","",9,[[["value"],["string"]],[["algebraany"],["box",["error"]],["result",["algebraany","box"]]]]],[0,"change_of_basis","rust_ext","",null,null],[5,"adem_to_milnor_on_basis","rust_ext::change_of_basis","",null,[[["ademalgebra"],["milnoralgebra"],["fpvector"],["u32"],["i32"],["usize"]]]],[5,"adem_to_milnor","","",null,[[["ademalgebra"],["milnoralgebra"],["fpvector"],["u32"],["i32"],["fpvector"]]]],[5,"milnor_to_adem_on_basis","","",null,[[["ademalgebra"],["milnoralgebra"],["fpvector"],["u32"],["i32"],["usize"]]]],[5,"milnor_to_adem_on_basis_2","","",null,[[["ademalgebra"],["milnoralgebra"],["fpvector"],["u32"],["i32"],["usize"]]]],[5,"milnor_to_adem_on_basis_generic","","",null,[[["ademalgebra"],["milnoralgebra"],["fpvector"],["u32"],["i32"],["usize"]]]],[5,"milnor_to_adem","","",null,[[["ademalgebra"],["milnoralgebra"],["fpvector"],["u32"],["i32"],["fpvector"]]]],[5,"adem_q","","",null,[[["ademalgebra"],["milnoralgebra"],["fpvector"],["u32"]]]],[5,"adem_plist","","",null,[[["ademalgebra"],["milnoralgebra"],["fpvector"],["u32"],["i32"],["vec",["u32"]]]]],[0,"steenrod_parser","rust_ext","",null,null],[3,"ParseError","rust_ext::steenrod_parser","",null,null],[12,"info","","",22,null],[4,"AlgebraBasisElt","","",null,null],[13,"AList","","",23,null],[13,"PList","","",23,null],[13,"P","","",23,null],[13,"Q","","",23,null],[4,"AlgebraParseNode","","",null,null],[13,"Product","","",24,null],[13,"Sum","","",24,null],[13,"BasisElt","","",24,null],[13,"Scalar","","",24,null],[4,"ModuleParseNode","","",null,null],[13,"Act","","",25,null],[13,"Sum","","",25,null],[13,"ModuleBasisElt","","",25,null],[4,"BocksteinOrSq","","",null,null],[13,"Bockstein","","",26,null],[13,"Sq","","",26,null],[5,"digits","","",null,[[["str"]],[["str"],["iresult",["str","u32"]],["u32"]]]],[5,"comma_separated_integer_list","","",null,[[["str"]],[["str"],["vec",["u32"]],["iresult",["str","vec"]]]]],[5,"comma_separated_sequence","","",null,[[["str"]],[["str"],["vec",["u32"]],["iresult",["str","vec"]]]]],[5,"space_separated_integer_list","","",null,[[["str"]],[["str"],["vec",["u32"]],["iresult",["str","vec"]]]]],[5,"space_separated_sequence","","",null,[[["str"]],[["str"],["vec",["u32"]],["iresult",["str","vec"]]]]],[5,"bockstein_b","","",null,[[["str"]],[["str"],["bocksteinorsq"],["iresult",["str","bocksteinorsq"]]]]],[5,"sq_digits","","",null,[[["str"]],[["str"],["bocksteinorsq"],["iresult",["str","bocksteinorsq"]]]]],[5,"space_separated_bockstein_or_sq_list","","",null,[[["str"]],[["str"],["vec",["bocksteinorsq"]],["iresult",["str","vec"]]]]],[5,"space_separated_bockstein_or_sq_sequence","","",null,[[["str"]],[["str"],["vec",["bocksteinorsq"]],["iresult",["str","vec"]]]]],[5,"algebra_generator","","",null,[[["str"]],[["str"],["algebraparsenode"],["iresult",["str","algebraparsenode"]]]]],[5,"scalar","","",null,[[["str"]],[["str"],["algebraparsenode"],["iresult",["str","algebraparsenode"]]]]],[5,"algebra_parens","","",null,[[["str"]],[["str"],["algebraparsenode"],["iresult",["str","algebraparsenode"]]]]],[5,"algebra_factor","","",null,[[["str"]],[["str"],["algebraparsenode"],["iresult",["str","algebraparsenode"]]]]],[5,"algebra_term","","",null,[[["str"]],[["str"],["algebraparsenode"],["iresult",["str","algebraparsenode"]]]]],[5,"algebra_expr","","",null,[[["str"]],[["str"],["algebraparsenode"],["iresult",["str","algebraparsenode"]]]]],[5,"module_generator","","",null,[[["str"]],[["iresult",["str","moduleparsenode"]],["str"],["moduleparsenode"]]]],[5,"module_parens","","",null,[[["str"]],[["iresult",["str","moduleparsenode"]],["str"],["moduleparsenode"]]]],[5,"module_factor","","",null,[[["str"]],[["iresult",["str","moduleparsenode"]],["str"],["moduleparsenode"]]]],[5,"module_term","","",null,[[["str"]],[["iresult",["str","moduleparsenode"]],["str"],["moduleparsenode"]]]],[5,"module_expr","","",null,[[["str"]],[["iresult",["str","moduleparsenode"]],["str"],["moduleparsenode"]]]],[5,"parse_algebra","","",null,[[["str"]],[["result",["algebraparsenode","box"]],["algebraparsenode"],["box",["error"]]]]],[5,"parse_module","","",null,[[["str"]],[["moduleparsenode"],["box",["error"]],["result",["moduleparsenode","box"]]]]],[0,"steenrod_evaluator","rust_ext","",null,null],[3,"SteenrodCalculator","rust_ext::steenrod_evaluator","",null,null],[12,"adem_algebra","","",27,null],[12,"milnor_algebra","","",27,null],[3,"DegreeError","","",null,null],[3,"UnknownBasisElementError","","",null,null],[12,"name","","",28,null],[5,"evaluate_algebra_adem","","",null,[[["ademalgebra"],["milnoralgebra"],["str"]],[["box",["error"]],["result",["box"]]]]],[5,"evaluate_algebra_milnor","","",null,[[["ademalgebra"],["milnoralgebra"],["str"]],[["box",["error"]],["result",["box"]]]]],[5,"evaluate_algebra_tree","","",null,[[["ademalgebra"],["milnoralgebra"],["algebraparsenode"]],[["box",["error"]],["result",["box"]]]]],[5,"evaluate_algebra_tree_helper","","",null,[[["ademalgebra"],["milnoralgebra"],["option",["i32"]],["i32"],["algebraparsenode"]],[["box",["error"]],["result",["box"]]]]],[5,"evaluate_basis_element","","",null,[[["ademalgebra"],["milnoralgebra"],["option",["i32"]],["i32"],["algebrabasiselt"]],[["box",["error"]],["result",["box"]]]]],[5,"evaluate_module","","",null,[[["ademalgebra"],["milnoralgebra"],["str"],["m"],["hashmap"]],[["box",["error"]],["result",["box"]]]]],[5,"evaluate_module_tree","","",null,[[["ademalgebra"],["milnoralgebra"],["m"],["moduleparsenode"],["hashmap"]],[["box",["error"]],["result",["box"]]]]],[5,"evaluate_module_tree_helper","","",null,[[["ademalgebra"],["milnoralgebra"],["option",["i32"]],["m"],["i32"],["moduleparsenode"],["hashmap"]],[["box",["error"]],["result",["box"]]]]],[5,"evaluate_module_basis_element","","",null,[[["ademalgebra"],["milnoralgebra"],["option",["i32"]],["m"],["i32"],["string"],["hashmap"]],[["box",["error"]],["result",["box"]]]]],[5,"bockstein_or_sq_to_adem_basis_elt","","",null,[[["i32"],["bocksteinorsq"]],["adembasiselement"]]],[5,"evaluate_p_or_b_list","","",null,[[["ademalgebra"]]]],[11,"new","","",27,[[["validprime"]],["self"]]],[11,"compute_basis","","",27,[[["self"],["i32"]]]],[11,"evaluate_adem_to_string","","",27,[[["str"],["self"]],[["result",["string","box"]],["box",["error"]],["string"]]]],[11,"evaluate_milnor_to_string","","",27,[[["str"],["self"]],[["result",["string","box"]],["box",["error"]],["string"]]]],[11,"evaluate_adem","","",27,[[["str"],["self"]],[["box",["error"]],["result",["box"]]]]],[11,"evaluate_milnor","","",27,[[["str"],["self"]],[["box",["error"]],["result",["box"]]]]],[0,"module","rust_ext","",null,null],[3,"FDModule","rust_ext::module","",null,null],[12,"algebra","","",29,null],[12,"name","","",29,null],[12,"graded_dimension","","",29,null],[12,"gen_names","","",29,null],[12,"actions","","",29,null],[3,"RealProjectiveSpace","","This is $\\mathbb{RP}_{\\mathrm{min}}^{\\mathrm{max}}$. The…",null,null],[12,"algebra","","",30,null],[12,"min","","",30,null],[12,"clear_bottom","","",30,null],[12,"max","","",30,null],[3,"HomModule","","",null,null],[12,"algebra","","",31,null],[12,"source","","",31,null],[12,"target","","",31,null],[12,"block_structures","","",31,null],[3,"FPModule","","",null,null],[12,"name","","",32,null],[12,"min_degree","","",32,null],[12,"generators","","",32,null],[12,"relations","","",32,null],[12,"map","","",32,null],[12,"index_table","","",32,null],[3,"TruncatedModule","","A module M where we quotient out everything above degree…",null,null],[12,"module","","",33,null],[12,"truncation","","",33,null],[3,"QuotientModule","","Given a module `module`, this is the quotient of `module`…",null,null],[12,"module","","",34,null],[12,"subspaces","","",34,null],[12,"basis_list","","",34,null],[3,"FreeModule","","",null,null],[12,"algebra","","",35,null],[12,"name","","",35,null],[12,"min_degree","","",35,null],[12,"lock","","",35,null],[12,"gen_names","","",35,null],[12,"gen_deg_idx_to_internal_idx","","",35,null],[12,"table","","",35,null],[3,"FreeModuleTableEntry","","",null,null],[12,"num_gens","","",36,null],[12,"basis_element_to_opgen","","",36,null],[12,"generator_to_index","","",36,null],[3,"TensorModule","","",null,null],[12,"left","","",37,null],[12,"right","","",37,null],[12,"block_structures","","",37,null],[3,"SumModule","","",null,null],[12,"algebra","","",38,null],[12,"min_degree","","",38,null],[12,"modules","","",38,null],[12,"block_structures","","",38,null],[3,"UnknownModuleTypeError","","",null,null],[12,"module_type","","",39,null],[3,"ModuleFailedRelationError","","",null,null],[12,"relation","","",40,null],[12,"value","","",40,null],[4,"FiniteModule","","",null,null],[13,"FDModule","","",41,null],[13,"FPModule","","",41,null],[13,"RealProjectiveSpace","","",41,null],[0,"finite_dimensional_module","","",null,null],[3,"FiniteDimensionalModule","rust_ext::module::finite_dimensional_module","",null,null],[12,"algebra","","",29,null],[12,"name","","",29,null],[12,"graded_dimension","","",29,null],[12,"gen_names","","",29,null],[12,"actions","","",29,null],[11,"test_equal","rust_ext::module","",29,[[["self"]],[["result",["string"]],["string"]]]],[11,"new","","",29,[[["algebraany"],["arc",["algebraany"]],["string"],["bivec",["usize"]],["usize"]],["self"]]],[11,"set_basis_element_name","","",29,[[["usize"],["i32"],["string"],["self"]]]],[11,"module_gens_from_json","","",29,[[["value"]]]],[11,"allocate_actions","","",29,[[["arc"],["bivec"]],[["bivec",["vec"]],["bivec",["bivec"]]]]],[11,"set_action_vector","","",29,[[["usize"],["i32"],["self"],["fpvector"]]]],[11,"set_action","","",29,[[["u32"],["usize"],["i32"],["self"],["vec",["u32"]]]]],[11,"action","","This function will panic if you call it with input such…",29,[[["usize"],["i32"],["self"]],["fpvector"]]],[11,"action_mut","","This function will panic if you call it with input such…",29,[[["usize"],["i32"],["self"]],["fpvector"]]],[11,"from_json","","",29,[[["algebraany"],["arc",["algebraany"]],["value"]],["self"]]],[11,"parse_action","","",29,[[["str"],["self"],["hashmap"]]]],[11,"parse_element","","",29,[[["str"]],[["str"],["iresult",["str"]]]]],[11,"check_validity","","",29,[[["self"],["i32"]],[["result",["box"]],["box",["error"]]]]],[11,"extend_actions","","",29,[[["self"],["i32"]]]],[11,"minimal_actions_to_json","","",29,[[["self"]],["value"]]],[11,"to_minimal_json","","",29,[[["self"]],["value"]]],[11,"actions_to_json","","",29,[[["self"]],["value"]]],[0,"finitely_presented_module","","",null,null],[3,"FPMIndexTable","rust_ext::module::finitely_presented_module","",null,null],[12,"gen_idx_to_fp_idx","","",42,null],[12,"fp_idx_to_gen_idx","","",42,null],[3,"FinitelyPresentedModule","","",null,null],[12,"name","","",32,null],[12,"min_degree","","",32,null],[12,"generators","","",32,null],[12,"relations","","",32,null],[12,"map","","",32,null],[12,"index_table","","",32,null],[11,"new","rust_ext::module","",32,[[["algebraany"],["arc",["algebraany"]],["string"],["i32"]],["self"]]],[11,"add_generators","","",32,[[["string"],["i32"],["vec",["string"]],["self"]]]],[11,"add_relations","","",32,[[["matrix"],["self"],["i32"]]]],[11,"module_gens_from_json","","",32,[[["value"]]]],[11,"from_json","","",32,[[["algebraany"],["arc",["algebraany"]],["value"]],["self"]]],[11,"relations_to_json","","",32,[[["self"]],["value"]]],[11,"gen_idx_to_fp_idx","","",32,[[["usize"],["self"],["i32"]],["isize"]]],[11,"fp_idx_to_gen_idx","","",32,[[["usize"],["self"],["i32"]],["usize"]]],[0,"truncated_module","","",null,null],[3,"TruncatedModule","rust_ext::module::truncated_module","A module M where we quotient out everything above degree…",null,null],[12,"module","","",33,null],[12,"truncation","","",33,null],[11,"new","rust_ext::module","",33,[[["arc"],["i32"]],["self"]]],[0,"quotient_module","","",null,null],[3,"QuotientModule","rust_ext::module::quotient_module","Given a module `module`, this is the quotient of `module`…",null,null],[12,"module","","",34,null],[12,"subspaces","","",34,null],[12,"basis_list","","",34,null],[11,"new","rust_ext::module","",34,[[["arc"]],["self"]]],[11,"quotient","","",34,[[["self"],["fpvector"],["i32"]]]],[11,"quotient_basis_elements","","",34,[[["self"],["i32"]]]],[11,"quotient_vectors","","",34,[[["vec",["fpvector"]],["i32"],["self"],["fpvector"]]]],[11,"flush","","",34,[[["self"],["i32"]]]],[11,"quotient_all","","",34,[[["self"],["i32"]]]],[11,"act_on_original_basis","","",34,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"reduce","","",34,[[["fpvector"],["self"],["i32"]]]],[11,"old_basis_to_new","","",34,[[["fpvector"],["i32"],["fpvector"],["self"]]]],[0,"free_module","","",null,null],[3,"OperationGeneratorPair","rust_ext::module::free_module","",null,null],[12,"operation_degree","","",43,null],[12,"operation_index","","",43,null],[12,"generator_degree","","",43,null],[12,"generator_index","","",43,null],[3,"FreeModuleTableEntry","","",null,null],[12,"num_gens","","",36,null],[12,"basis_element_to_opgen","","",36,null],[12,"generator_to_index","","",36,null],[3,"FreeModule","","",null,null],[12,"algebra","","",35,null],[12,"name","","",35,null],[12,"min_degree","","",35,null],[12,"lock","","",35,null],[12,"gen_names","","",35,null],[12,"gen_deg_idx_to_internal_idx","","",35,null],[12,"table","","",35,null],[3,"AdmissibleMatrix","","",null,null],[12,"cols","","",44,null],[12,"rows","","",44,null],[12,"matrix","","",44,null],[12,"totals","","",44,null],[12,"col_sums","","",44,null],[12,"masks","","",44,null],[11,"new","rust_ext::module","",35,[[["algebraany"],["arc",["algebraany"]],["string"],["i32"]],["self"]]],[11,"lock","","",35,[[["self"]],["mutexguard"]]],[11,"max_computed_degree","","",35,[[["self"]],["i32"]]],[11,"number_of_gens_in_degree","","",35,[[["self"],["i32"]],["usize"]]],[11,"construct_table","","",35,[[["self"],["i32"]],["freemoduletableentry"]]],[11,"dimension_with_table","","",35,[[["freemoduletableentry"]],["usize"]]],[11,"add_generators","","",35,[[["mutexguard"],["usize"],["i32"],["freemoduletableentry"],["option",["vec"]],["self"],["vec",["string"]]]]],[11,"add_generators_to_table","","",35,[[["usize"],["freemoduletableentry"],["i32"],["self"]]]],[11,"generator_offset","","",35,[[["usize"],["self"],["i32"]],["usize"]]],[11,"operation_generator_to_index","","",35,[[["usize"],["i32"],["self"]],["usize"]]],[11,"operation_generator_pair_to_idx","","",35,[[["self"],["operationgeneratorpair"]],["usize"]]],[11,"index_to_op_gen","","",35,[[["usize"],["self"],["i32"]],["operationgeneratorpair"]]],[11,"element_to_json","","",35,[[["fpvector"],["self"],["i32"]],["value"]]],[11,"add_generators_immediate","","",35,[[["option",["vec"]],["usize"],["i32"],["vec",["string"]],["self"]]]],[11,"add_num_generators","","",35,[[["mutexguard"],["usize"],["i32"],["option",["vec"]],["vec",["string"]],["self"]]]],[11,"extend_by_zero","","",35,[[["self"],["i32"]]]],[11,"get_degrees_with_gens","","",35,[[["self"],["i32"]],[["vec",["i32"]],["i32"]]]],[11,"standard_act","","",35,[[["u32"],["fpvector"],["i32"],["usize"],["fpvector"],["self"]]]],[11,"custom_milnor_act","","For the Milnor algebra, there is a faster algorithm for…",35,[[["milnoralgebra"],["u32"],["fpvector"],["i32"],["usize"],["fpvector"],["self"]]]],[11,"new","rust_ext::module::free_module","",44,[[],["self"]]],[11,"next","","",44,[[["self"]],["bool"]]],[0,"hom_module","rust_ext::module","",null,null],[3,"HomModule","rust_ext::module::hom_module","",null,null],[12,"algebra","","",31,null],[12,"source","","",31,null],[12,"target","","",31,null],[12,"block_structures","","",31,null],[11,"new","rust_ext::module","",31,[[["freemodule"],["arc"],["arc",["freemodule"]]],["self"]]],[11,"source","","",31,[[["self"]],[["freemodule"],["arc",["freemodule"]]]]],[11,"target","","",31,[[["self"]],["arc"]]],[11,"element_to_homomorphism","","",31,[[["fpvector"],["self"],["i32"]],["freemodulehomomorphism"]]],[11,"evaluate_basis_map_on_element","","",31,[[["u32"],["fpvector"],["i32"],["usize"],["fpvector"],["self"]]]],[0,"tensor_module","","",null,null],[3,"TensorModule","rust_ext::module::tensor_module","",null,null],[12,"left","","",37,null],[12,"right","","",37,null],[12,"block_structures","","",37,null],[11,"new","rust_ext::module","",37,[[["arc"],["arc"]],["self"]]],[11,"seek_module_num","","",37,[[["usize"],["self"],["i32"]],["i32"]]],[11,"offset","","",37,[[["self"],["i32"]],["usize"]]],[11,"act_helper","","",37,[[["u32"],["fpvector"],["i32"],["usize"],["fpvector"],["self"]]]],[0,"sum_module","","",null,null],[3,"SumModule","rust_ext::module::sum_module","",null,null],[12,"algebra","","",38,null],[12,"min_degree","","",38,null],[12,"modules","","",38,null],[12,"block_structures","","",38,null],[11,"new","rust_ext::module","",38,[[["algebraany"],["arc",["algebraany"]],["vec",["arc"]],["arc"],["i32"]],["self"]]],[11,"get_module_num","","",38,[[["usize"],["self"],["i32"]],["usize"]]],[11,"offset","","",38,[[["usize"],["self"],["i32"]],["usize"]]],[0,"rpn","","",null,null],[3,"RealProjectiveSpace","rust_ext::module::rpn","This is $\\mathbb{RP}_{\\mathrm{min}}^{\\mathrm{max}}$. The…",null,null],[12,"algebra","","",30,null],[12,"min","","",30,null],[12,"clear_bottom","","",30,null],[12,"max","","",30,null],[3,"RPSpec","","",null,null],[12,"min","","",45,null],[12,"clear_bottom","","",45,null],[12,"max","","",45,null],[5,"coef_adem","","",null,[[["ademalgebra"],["usize"],["i32"]],["bool"]]],[5,"coef_milnor","","",null,[[["milnoralgebra"],["usize"],["i32"]],["bool"]]],[17,"_IMPL_DESERIALIZE_FOR_RPSpec","","",null,null],[11,"new","rust_ext::module","",30,[[["algebraany"],["arc",["algebraany"]],["option",["i32"]],["i32"],["bool"]],["self"]]],[11,"from_json","","",30,[[["algebraany"],["arc",["algebraany"]],["value"]],[["box",["error"]],["result",["box"]]]]],[0,"homomorphism","","",null,null],[3,"FreeModuleHomomorphism","rust_ext::module::homomorphism","",null,null],[12,"source","","",46,null],[12,"target","","",46,null],[12,"outputs","","",46,null],[12,"kernel","","",46,null],[12,"quasi_inverse","","",46,null],[12,"min_degree","","",46,null],[12,"lock","","",46,null],[12,"degree_shift","","",46,null],[3,"GenericZeroHomomorphism","","",null,null],[12,"source","","",47,null],[12,"target","","",47,null],[12,"degree_shift","","",47,null],[3,"HomPullback","","Given a map `map`: A -> B and `source` = Hom(B, X),…",null,null],[12,"source","","",48,null],[12,"target","","",48,null],[12,"map","","",48,null],[12,"kernel","","",48,null],[12,"quasi_inverse","","",48,null],[3,"BoundedModuleHomomorphism","","",null,null],[12,"lock","","",49,null],[12,"source","","",49,null],[12,"target","","",49,null],[12,"degree_shift","","",49,null],[12,"matrices","","",49,null],[12,"quasi_inverses","","",49,null],[12,"kernels","","",49,null],[3,"FiniteModuleHomomorphism","","",null,null],[12,"source","","",50,null],[12,"target","","",50,null],[12,"map","","",50,null],[3,"FPModuleHomomorphism","","",null,null],[12,"source","","",51,null],[12,"underlying_map","","",51,null],[3,"TruncatedHomomorphism","","",null,null],[12,"f","","",52,null],[12,"s","","",52,null],[12,"t","","",52,null],[3,"TruncatedHomomorphismSource","","",null,null],[12,"f","","",53,null],[12,"s","","",53,null],[12,"t","","",53,null],[3,"QuotientHomomorphism","","",null,null],[12,"f","","",54,null],[12,"s","","",54,null],[12,"t","","",54,null],[3,"QuotientHomomorphismSource","","",null,null],[12,"f","","",55,null],[12,"s","","",55,null],[12,"t","","",55,null],[0,"free_module_homomorphism","","",null,null],[3,"FreeModuleHomomorphism","rust_ext::module::homomorphism::free_module_homomorphism","",null,null],[12,"source","","",46,null],[12,"target","","",46,null],[12,"outputs","","",46,null],[12,"kernel","","",46,null],[12,"quasi_inverse","","",46,null],[12,"min_degree","","",46,null],[12,"lock","","",46,null],[12,"degree_shift","","",46,null],[11,"new","rust_ext::module::homomorphism","",46,[[["arc"],["arc",["freemodule"]],["i32"],["freemodule"]],["self"]]],[11,"degree_shift","","",46,[[["self"]],["i32"]]],[11,"min_degree","","",46,[[["self"]],["i32"]]],[11,"next_degree","","",46,[[["self"]],["i32"]]],[11,"output","","",46,[[["usize"],["self"],["i32"]],["fpvector"]]],[11,"extend_by_zero_safe","","",46,[[["self"],["i32"]]]],[11,"extend_by_zero","","",46,[[["mutexguard"],["self"],["i32"]]]],[11,"add_generators_from_big_vector","","",46,[[["mutexguard"],["fpvector"],["i32"],["self"]]]],[11,"add_generators_from_matrix_rows","","",46,[[["mutexguard"],["i32"],["matrix"],["self"]]]],[11,"apply_to_generator","","",46,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"apply_to_basis_element_with_table","","",46,[[["u32"],["fpvector"],["i32"],["freemoduletableentry"],["usize"],["self"]]]],[11,"get_matrix","","",46,[[["i32"],["self"],["matrix"]]]],[11,"get_matrix_with_table","","Arguments * `degree` - The internal degree of the target…",46,[[["freemoduletableentry"],["matrix"],["i32"],["self"]]]],[11,"lock","","",46,[[["self"]],["mutexguard"]]],[11,"set_kernel","","",46,[[["subspace"],["mutexguard"],["i32"],["self"]]]],[11,"set_quasi_inverse","","",46,[[["mutexguard"],["i32"],["self"],["quasiinverse"]]]],[11,"check_mutex","","",46,[[["mutexguard"],["self"]]]],[0,"generic_zero_homomorphism","","",null,null],[3,"GenericZeroHomomorphism","rust_ext::module::homomorphism::generic_zero_homomorphism","",null,null],[12,"source","","",47,null],[12,"target","","",47,null],[12,"degree_shift","","",47,null],[11,"new","rust_ext::module::homomorphism","",47,[[["arc"],["arc"],["i32"]],["self"]]],[0,"bounded_module_homomorphism","","",null,null],[3,"BoundedModuleHomomorphism","rust_ext::module::homomorphism::bounded_module_homomorphism","",null,null],[12,"lock","","",49,null],[12,"source","","",49,null],[12,"target","","",49,null],[12,"degree_shift","","",49,null],[12,"matrices","","",49,null],[12,"quasi_inverses","","",49,null],[12,"kernels","","",49,null],[11,"from","rust_ext::module::homomorphism","",49,[[["f"]],["self"]]],[11,"replace_source","","This function replaces the source of the…",49,[[["arc"],["boundedmodule"]],[["boundedmodule"],["boundedmodulehomomorphism"]]]],[11,"replace_target","","See `replace_source`",49,[[["arc"],["boundedmodule"]],[["boundedmodule"],["boundedmodulehomomorphism"]]]],[0,"hom_pullback","","",null,null],[3,"HomPullback","rust_ext::module::homomorphism::hom_pullback","Given a map `map`: A -> B and `source` = Hom(B, X),…",null,null],[12,"source","","",48,null],[12,"target","","",48,null],[12,"map","","",48,null],[12,"kernel","","",48,null],[12,"quasi_inverse","","",48,null],[11,"new","rust_ext::module::homomorphism","",48,[[["arc",["hommodule"]],["hommodule"],["arc",["freemodulehomomorphism"]],["freemodulehomomorphism",["freemodule"]]],["self"]]],[0,"truncated_homomorphism","","",null,null],[3,"TruncatedHomomorphism","rust_ext::module::homomorphism::truncated_homomorphism","",null,null],[12,"f","","",52,null],[12,"s","","",52,null],[12,"t","","",52,null],[3,"TruncatedHomomorphismSource","","",null,null],[12,"f","","",53,null],[12,"s","","",53,null],[12,"t","","",53,null],[11,"new","rust_ext::module::homomorphism","",52,[[["arc",["truncatedmodule"]],["truncatedmodule"],["truncatedmodule"],["arc"],["arc",["truncatedmodule"]]],["self"]]],[11,"truncated_degree","","",52,[[["self"]],["i32"]]],[11,"new","","",53,[[["arc",["truncatedmodule"]],["truncatedmodule"],["arc"],["arc"]],["self"]]],[11,"truncated_degree","","",53,[[["self"]],["i32"]]],[0,"quotient_homomorphism","","",null,null],[3,"QuotientHomomorphism","rust_ext::module::homomorphism::quotient_homomorphism","",null,null],[12,"f","","",54,null],[12,"s","","",54,null],[12,"t","","",54,null],[3,"QuotientHomomorphismSource","","",null,null],[12,"f","","",55,null],[12,"s","","",55,null],[12,"t","","",55,null],[11,"new","rust_ext::module::homomorphism","",54,[[["quotientmodule"],["arc",["quotientmodule"]],["arc"],["arc",["quotientmodule"]],["quotientmodule"]],["self"]]],[11,"new","","",55,[[["quotientmodule"],["arc"],["arc",["quotientmodule"]],["arc"]],["self"]]],[0,"fp_module_homomorphism","","",null,null],[3,"FPModuleHomomorphism","rust_ext::module::homomorphism::fp_module_homomorphism","",null,null],[12,"source","","",51,null],[12,"underlying_map","","",51,null],[8,"FPModuleT","","",null,null],[10,"fp_idx_to_gen_idx","","",56,[[["usize"],["self"],["i32"]],["usize"]]],[10,"generators","","",56,[[["self"]],["arc"]]],[0,"finite_module_homomorphism","rust_ext::module::homomorphism","",null,null],[3,"FiniteModuleHomomorphism","rust_ext::module::homomorphism::finite_module_homomorphism","",null,null],[12,"source","","",50,null],[12,"target","","",50,null],[12,"map","","",50,null],[4,"FMHI","","",null,null],[13,"FD","","",57,null],[13,"FP","","",57,null],[13,"RP","","",57,null],[8,"FPModuleT","rust_ext::module::homomorphism","",null,null],[10,"fp_idx_to_gen_idx","","",56,[[["usize"],["self"],["i32"]],["usize"]]],[10,"generators","","",56,[[["self"]],["arc"]]],[8,"ModuleHomomorphism","","",null,null],[16,"Source","","",58,null],[16,"Target","","",58,null],[18,"CUSTOM_QI","","",58,null],[10,"source","","",58,[[["self"]],["arc"]]],[10,"target","","",58,[[["self"]],["arc"]]],[10,"degree_shift","","",58,[[["self"]],["i32"]]],[10,"apply_to_basis_element","","Calling this function when `input_idx <…",58,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[10,"kernel","","",58,[[["self"],["i32"]],["subspace"]]],[10,"quasi_inverse","","",58,[[["self"],["i32"]],["quasiinverse"]]],[10,"compute_kernels_and_quasi_inverses_through_degree","","",58,[[["self"],["i32"]]]],[11,"apply","","",58,[[["u32"],["fpvector"],["i32"],["fpvector"],["self"]]]],[11,"prime","","",58,[[["self"]],["validprime"]]],[11,"min_degree","","",58,[[["self"]],["i32"]]],[11,"image","","Returns the image of the module homomorphism in degree…",58,[[["self"],["i32"]],["option"]]],[11,"calculate_quasi_inverse","","A version of kernel_and_quasi_inverse that, in fact,…",58,[[["self"],["i32"]],["quasiinverse"]]],[11,"kernel_and_quasi_inverse","","",58,[[["self"],["i32"]]]],[11,"get_matrix","","The (sliced) dimensions of `matrix` must be equal to…",58,[[["i32"],["self"],["matrix"]]]],[11,"apply_quasi_inverse","","",58,[[["fpvector"],["i32"],["fpvector"],["self"]]]],[8,"ZeroHomomorphism","","",null,null],[10,"zero_homomorphism","","",59,[[["arc"],["arc"],["i32"]],["self"]]],[8,"BoundedModule","rust_ext::module","",null,null],[10,"max_degree","","`max_degree` is the a degree such that if t >…",60,[[["self"]],["i32"]]],[11,"total_dimension","","",60,[[["self"]],["usize"]]],[11,"to_fd_module","","",60,[[["self"]],["fdmodule"]]],[8,"Module","","",null,null],[10,"algebra","","",61,[[["self"]],[["algebraany"],["arc",["algebraany"]]]]],[10,"name","","",61,[[["self"]],["str"]]],[10,"min_degree","","",61,[[["self"]],["i32"]]],[11,"compute_basis","","",61,[[["self"],["i32"]]]],[10,"dimension","","",61,[[["self"],["i32"]],["usize"]]],[10,"act_on_basis","","",61,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[10,"basis_element_to_string","","",61,[[["usize"],["self"],["i32"]],["string"]]],[11,"is_unit","","",61,[[["self"]],["bool"]]],[11,"prime","","",61,[[["self"]],["validprime"]]],[11,"borrow_output","","Whether act_on_basis_borrow is available.",61,[[["self"]],["bool"]]],[11,"act_on_basis_borrow","","Returns a borrow of the value of the corresponding action…",61,[[["usize"],["i32"],["self"]],["fpvector"]]],[11,"act","","",61,[[["u32"],["fpvector"],["i32"],["usize"],["fpvector"],["self"]]]],[11,"act_by_element","","",61,[[["u32"],["fpvector"],["i32"],["fpvector"],["self"]]]],[11,"generator_list_string","","",61,[[["self"],["i32"]],["string"]]],[11,"element_to_string","","",61,[[["fpvector"],["self"],["i32"]],["string"]]],[8,"ZeroModule","","",null,null],[10,"zero_module","","",62,[[["algebraany"],["arc",["algebraany"]],["i32"]],["self"]]],[11,"from_json","","",41,[[["algebraany"],["arc",["algebraany"]],["value"]],[["box",["error"]],["result",["box"]]]]],[11,"into_real_projective_space","","",41,[[],[["option",["realprojectivespace"]],["realprojectivespace"]]]],[11,"into_fp_module","","",41,[[],[["fpmodule"],["option",["fpmodule"]]]]],[11,"into_fd_module","","",41,[[],[["option",["fdmodule"]],["fdmodule"]]]],[0,"chain_complex","rust_ext","",null,null],[3,"FiniteChainComplex","rust_ext::chain_complex","",null,null],[12,"modules","","",63,null],[12,"zero_module","","",63,null],[12,"differentials","","",63,null],[3,"FiniteAugmentedChainComplex","","",null,null],[12,"modules","","",64,null],[12,"zero_module","","",64,null],[12,"differentials","","",64,null],[12,"target_cc","","",64,null],[12,"chain_maps","","",64,null],[3,"TensorChainComplex","","",null,null],[12,"lock","","",65,null],[12,"left_cc","","",65,null],[12,"right_cc","","",65,null],[12,"modules","","",65,null],[12,"zero_module","","",65,null],[12,"differentials","","",65,null],[3,"ChainMap","","`chain_maps` is required to be non-empty",null,null],[12,"s_shift","","",66,null],[12,"chain_maps","","",66,null],[4,"ChainComplexGrading","","",null,null],[13,"Homological","","",67,null],[13,"Cohomological","","",67,null],[0,"hom_complex","","",null,null],[3,"HomChainComplex","rust_ext::chain_complex::hom_complex","",null,null],[12,"lock","","",68,null],[12,"source_cc","","",68,null],[12,"target_cc","","",68,null],[12,"modules","","",68,null],[12,"zero_module","","",68,null],[12,"differentials","","",68,null],[3,"HomChainMap","","",null,null],[12,"source_cc","","",69,null],[12,"target_cc","","",69,null],[12,"lock","","",69,null],[12,"source","","",69,null],[12,"target","","",69,null],[12,"quasi_inverses","","",69,null],[6,"SHM","","",null,null],[11,"new","","",68,[[["finitechaincomplex"],["arc",["finitechaincomplex"]],["arc"]],["self"]]],[11,"source_cc","","",68,[[["self"]],["arc"]]],[11,"target_cc","","",68,[[["self"]],[["finitechaincomplex"],["arc",["finitechaincomplex"]]]]],[0,"finite_chain_complex","rust_ext::chain_complex","",null,null],[3,"FiniteChainComplex","rust_ext::chain_complex::finite_chain_complex","",null,null],[12,"modules","","",63,null],[12,"zero_module","","",63,null],[12,"differentials","","",63,null],[3,"FiniteAugmentedChainComplex","","",null,null],[12,"modules","","",64,null],[12,"zero_module","","",64,null],[12,"differentials","","",64,null],[12,"target_cc","","",64,null],[12,"chain_maps","","",64,null],[11,"max_degree","rust_ext::chain_complex","",63,[[["self"]],["i32"]]],[11,"pop","","",63,[[["self"]]]],[11,"ccdz","","",63,[[["arc"]],["self"]]],[0,"tensor_product_chain_complex","","",null,null],[3,"TensorChainComplex","rust_ext::chain_complex::tensor_product_chain_complex","",null,null],[12,"lock","","",65,null],[12,"left_cc","","",65,null],[12,"right_cc","","",65,null],[12,"modules","","",65,null],[12,"zero_module","","",65,null],[12,"differentials","","",65,null],[3,"TensorChainMap","","",null,null],[12,"left_cc","","",70,null],[12,"right_cc","","",70,null],[12,"source_s","","",70,null],[12,"lock","","",70,null],[12,"source","","",70,null],[12,"target","","",70,null],[12,"quasi_inverses","","",70,null],[6,"STM","","",null,null],[6,"TensorSquareCC","","",null,null],[11,"new","rust_ext::chain_complex","",65,[[["arc"],["arc"]],["self"]]],[11,"left_cc","","",65,[[["self"]],["arc"]]],[11,"right_cc","","",65,[[["self"]],["arc"]]],[11,"swap","","This function sends a (x) b to b (x) a. This makes sense…",65,[[["u32"],["fpvector"],["i32"],["fpvector"],["self"]]]],[11,"calculate_quasi_inverse","rust_ext::chain_complex::tensor_product_chain_complex","",70,[[["self"],["i32"]]]],[8,"ResolutionComplex","rust_ext::chain_complex","",null,null],[8,"ChainComplex","","A chain complex is defined to start in degree 0. The…",null,null],[16,"Module","","",71,null],[16,"Homomorphism","","",71,null],[11,"prime","","",71,[[["self"]],["validprime"]]],[10,"algebra","","",71,[[["self"]],[["algebraany"],["arc",["algebraany"]]]]],[10,"min_degree","","",71,[[["self"]],["i32"]]],[10,"zero_module","","",71,[[["self"]],["arc"]]],[10,"module","","",71,[[["u32"],["self"]],["arc"]]],[10,"differential","","",71,[[["u32"],["self"]],["arc"]]],[10,"compute_through_bidegree","","",71,[[["u32"],["self"],["i32"]]]],[10,"set_homology_basis","","",71,[[["u32"],["vec",["usize"]],["i32"],["usize"],["self"]]]],[10,"homology_basis","","",71,[[["u32"],["self"],["i32"]],["vec"]]],[10,"max_homology_degree","","",71,[[["u32"],["self"]],["i32"]]],[11,"compute_homology_through_bidegree","","",71,[[["u32"],["self"],["i32"]]]],[11,"homology_dimension","","",71,[[["u32"],["self"],["i32"]],["usize"]]],[11,"homology_gen_to_cocyle","","",71,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"compute_homology","","",71,[[["u32"],["self"],["i32"]]]],[8,"CochainComplex","","",null,null],[16,"Module","","",72,null],[16,"Homomorphism","","",72,null],[11,"prime","","",72,[[["self"]],["validprime"]]],[10,"algebra","","",72,[[["self"]],[["algebraany"],["arc",["algebraany"]]]]],[10,"min_degree","","",72,[[["self"]],["i32"]]],[10,"zero_module","","",72,[[["self"]],["arc"]]],[10,"module","","",72,[[["u32"],["self"]],["arc"]]],[10,"differential","","",72,[[["u32"],["self"]],["arc"]]],[10,"compute_through_bidegree","","",72,[[["u32"],["self"],["i32"]]]],[10,"set_cohomology_basis","","",72,[[["u32"],["vec",["usize"]],["i32"],["usize"],["self"]]]],[10,"cohomology_basis","","",72,[[["u32"],["self"],["i32"]],["vec"]]],[10,"max_cohomology_degree","","",72,[[["u32"],["self"]],["i32"]]],[11,"compute_cohomology_through_bidegree","","",72,[[["u32"],["self"],["i32"]]]],[11,"cohomology_dimension","","",72,[[["u32"],["self"],["i32"]],["usize"]]],[11,"homology_gen_to_cocyle","","",72,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"compute_cohomology","","",72,[[["u32"],["self"],["i32"]]]],[8,"AugmentedChainComplex","","An augmented chain complex is a map of chain complexes C…",null,null],[16,"TargetComplex","","",73,null],[16,"ChainMap","","",73,null],[10,"target","","",73,[[["self"]],["arc"]]],[10,"chain_map","","",73,[[["u32"],["self"]],["arc"]]],[8,"BoundedChainComplex","","A bounded chain complex is a chain complex C for which C_s…",null,null],[10,"max_s","","",74,[[["self"]],["u32"]]],[0,"resolution","rust_ext","",null,null],[3,"ResolutionInner","rust_ext::resolution","ResolutionInner contains the data of the actual…",null,null],[12,"complex","","",75,null],[12,"modules","","",75,null],[12,"zero_module","","",75,null],[12,"chain_maps","","",75,null],[12,"differentials","","",75,null],[12,"kernels","","",75,null],[3,"Cocycle","","",null,null],[12,"s","","",76,null],[12,"t","","",76,null],[12,"class","","",76,null],[12,"name","","",76,null],[3,"SelfMap","","",null,null],[12,"s","","",77,null],[12,"t","","",77,null],[12,"name","","",77,null],[12,"map_data","","",77,null],[12,"map","","",77,null],[3,"Resolution","","Fields * `kernels` - For each internal degree, store the…",null,null],[12,"inner","","",78,null],[12,"next_s","","",78,null],[12,"next_t","","",78,null],[12,"add_class","","",78,null],[12,"add_structline","","",78,null],[12,"filtration_one_products","","",78,null],[12,"unit_resolution","","",78,null],[12,"unit_resolution_owner","","",78,null],[12,"product_names","","",78,null],[12,"product_list","","",78,null],[12,"chain_maps_to_unit_resolution","","",78,null],[12,"max_product_homological_degree","","",78,null],[12,"self_maps","","",78,null],[5,"ptr_eq","","Hack to compare two pointers of different types (in this…",null,[[["arc"],["arc"]],["bool"]]],[6,"AddClassFn","","",null,null],[6,"AddStructlineFn","","",null,null],[11,"new","","",75,[[["arc"]],["self"]]],[11,"extend_through_degree","","This function prepares the ResolutionInner object to…",75,[[["u32"],["i32"],["self"]]]],[11,"step_resolution","","Call our resolution $X$, and the chain complex to resolve…",75,[[["u32"],["self"],["i32"]]]],[11,"cocycle_string","","",75,[[["u32"],["usize"],["i32"],["self"]],["string"]]],[11,"complex","","",75,[[["self"]],["arc"]]],[11,"number_of_gens_in_bidegree","","",75,[[["u32"],["self"],["i32"]],["usize"]]],[11,"prime","","",75,[[["self"]],["validprime"]]],[11,"new","","",78,[[["addclassfn"],["option",["addclassfn"]],["arc"],["option",["addstructlinefn"]],["addstructlinefn"]],["self"]]],[11,"new_with_inner","","",78,[[["addclassfn"],["option",["addclassfn"]],["option",["addstructlinefn"]],["addstructlinefn"],["resolutioninner"]],["self"]]],[11,"resolve_through_bidegree","","",78,[[["u32"],["self"],["i32"]]]],[11,"resolve_through_degree","","",78,[[["self"],["i32"]]]],[11,"step_after","","",78,[[["u32"],["self"],["i32"]]]],[11,"compute_filtration_one_products","","",78,[[["u32"],["self"],["i32"]]]],[11,"add_structline","","",78,[[["str"],["u32"],["i32"],["vec",["vec"]],["vec",["u32"]],["self"],["bool"]]]],[11,"max_computed_degree","","",78,[[["self"]],["i32"]]],[11,"max_computed_homological_degree","","",78,[[["self"]],["u32"]]],[11,"graded_dimension_string","","",78,[[["self"]],["string"]]],[11,"catch_up_products","","This function computes the products between the element…",78,[[["self"]]]],[11,"add_product","","The return value is whether the product was actually…",78,[[["str"],["u32"],["i32"],["self"],["vec",["u32"]]],["bool"]]],[11,"construct_unit_resolution","","",78,[[["self"]]]],[11,"set_unit_resolution","","",78,[[["rwlock",["resolution"]],["self"],["weak",["rwlock"]]]]],[11,"compute_products","","Compute products whose result lie in degrees up to (s, t)",78,[[["u32"],["i32"],["self"]]]],[11,"compute_product_step","","Target = result of the product Source = multiplicand",78,[[["u32"],["i32"],["self"],["cocycle"]]]],[11,"construct_maps_to_unit","","",78,[[["u32"],["self"],["i32"]]]],[11,"extend_maps_to_unit","","This ensures the chain_maps_to_unit_resolution are defined…",78,[[["u32"],["self"],["i32"]]]],[11,"add_self_map","","The return value is whether the self map was actually…",78,[[["str"],["u32"],["i32"],["self"],["matrix"]],["bool"]]],[11,"compute_self_maps","","We compute the products by self maps where the result has…",78,[[["u32"],["self"],["i32"]]]],[11,"algebra","","",78,[[["self"]],[["algebraany"],["arc",["algebraany"]]]]],[11,"prime","","",78,[[["self"]],["validprime"]]],[11,"module","","",78,[[["u32"],["self"]],[["freemodule"],["arc",["freemodule"]]]]],[11,"min_degree","","",78,[[["self"]],["i32"]]],[11,"differential","","",78,[[["u32"],["self"]],[["freemodulehomomorphism",["freemodule"]],["arc",["freemodulehomomorphism"]]]]],[0,"resolution_homomorphism","rust_ext","",null,null],[3,"ResolutionHomomorphism","rust_ext::resolution_homomorphism","",null,null],[12,"name","","",79,null],[12,"source","","",79,null],[12,"target","","",79,null],[12,"maps","","",79,null],[12,"homological_degree_shift","","",79,null],[12,"internal_degree_shift","","",79,null],[6,"ResolutionHomomorphismToUnit","","",null,null],[11,"new","","",79,[[["u32"],["string"],["weak"],["i32"],["weak"]],["self"]]],[11,"get_map_ensure_length","","",79,[[["u32"],["self"]],["freemodulehomomorphism"]]],[11,"get_map","","",79,[[["u32"],["self"]],["freemodulehomomorphism"]]],[11,"into_chain_maps","","",79,[[],[["vec",["freemodulehomomorphism"]],["freemodulehomomorphism"]]]],[11,"extend","","Extend the resolution homomorphism such that it is defined…",79,[[["u32"],["self"],["i32"]]]],[11,"extend_step","","",79,[[["u32"],["i32"],["matrix"],["option",["matrix"]],["self"]]]],[11,"extend_step_helper","","",79,[[["u32"],["i32"],["matrix"],["option",["matrix"]],["self"]],["matrix"]]],[0,"cli_module_loaders","rust_ext","",null,null],[5,"get_gens","rust_ext::cli_module_loaders","",null,[[["i32"]],[["box",["error"]],["bivec",["vec"]],["result",["bivec","box"]]]]],[5,"gens_to_json","","",null,[[["bivec"]],["value"]]],[5,"get_expression_to_vector","","",null,[[["str"],["fpvector"],["f"]]]],[5,"interactive_module_define","","",null,[[],[["result",["string","box"]],["box",["error"]],["string"]]]],[5,"interactive_module_define_fdmodule","","",null,[[["value"],["validprime"],["bool"]],[["value"],["box",["error"]],["result",["value","box"]]]]],[5,"get_relation","","",null,[[["ademalgebra"],["milnoralgebra"],["freemodule"],["hashmap"]],[["string"],["result",["string"]]]]],[5,"interactive_module_define_fpmodule","","",null,[[["value"],["validprime"],["bool"]],[["value"],["box",["error"]],["result",["value","box"]]]]],[0,"yoneda","rust_ext","",null,null],[5,"rate_operation","rust_ext::yoneda","",null,[[["arc"],["usize"],["i32"]],["i32"]]],[5,"rate_adem_operation","","",null,[[["ademalgebra"],["usize"],["i32"]],["i32"]]],[5,"operation_drop","","",null,[[["ademalgebra"],["usize"],["i32"]],["i32"]]],[5,"split_mut_borrow","","",null,[[["usize"],["vec"]]]],[5,"yoneda_representative_element","","",null,[[["u32"],["usize"],["i32"],["arc"]],[["finitemodulehomomorphism",["finitemodule"]],["finitemodule"],["finiteaugmentedchaincomplex",["finitemodule","finitemodulehomomorphism","finitemodulehomomorphism"]],["finitemodulehomomorphism"]]]],[5,"yoneda_representative","","This function produces a quasi-isomorphic quotient of `cc`…",null,[[["arc"],["chainmap",["freemodulehomomorphism"]],["freemodulehomomorphism"]],[["finitemodulehomomorphism",["finitemodule"]],["finitemodule"],["finiteaugmentedchaincomplex",["finitemodule","finitemodulehomomorphism","finitemodulehomomorphism"]],["finitemodulehomomorphism"]]]],[5,"yoneda_representative_with_strategy","","",null,[[["freemodulehomomorphism"],["arc"],["chainmap",["freemodulehomomorphism"]],["f"]],[["finitemodulehomomorphism",["finitemodule"]],["finitemodule"],["finiteaugmentedchaincomplex",["finitemodule","finitemodulehomomorphism","finitemodulehomomorphism"]],["finitemodulehomomorphism"]]]],[5,"compute_kernel_image","","This function does the following computation:",null,[[["subspace"],["i32"],["qm"],["option",["arc"]],["g"],["arc"],["option"],["option",["subspace"]]]]],[6,"Yoneda","","",null,null],[17,"PENALTY_UNIT","","",null,null],[6,"CCC","rust_ext","",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","rust_ext::block_structure","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","rust_ext::algebra","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","rust_ext::algebra::adem_algebra","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","rust_ext::algebra::milnor_algebra","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","rust_ext::algebra::field","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","rust_ext::steenrod_parser","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_string","","",22,[[["self"]],["string"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","rust_ext::steenrod_evaluator","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_string","","",80,[[["self"]],["string"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_string","","",28,[[["self"]],["string"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","rust_ext::module","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_string","","",40,[[["self"]],["string"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","rust_ext::module::finitely_presented_module","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","rust_ext::module::free_module","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","rust_ext::module::rpn","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","rust_ext::module::homomorphism","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","rust_ext::module::homomorphism::finite_module_homomorphism","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","rust_ext::chain_complex","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","rust_ext::chain_complex::hom_complex","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","rust_ext::chain_complex::tensor_product_chain_complex","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","rust_ext::resolution","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","rust_ext::resolution_homomorphism","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"decompose","rust_ext::algebra::adem_algebra","",12,[[["usize"],["self"],["i32"]],["vec"]]],[11,"coproduct","","",12,[[["usize"],["self"],["i32"]],["vec"]]],[11,"coproduct","rust_ext::algebra::milnor_algebra","",16,[[["usize"],["self"],["i32"]],["vec"]]],[11,"decompose","","",16,[[["usize"],["self"],["i32"]],["vec"]]],[11,"coproduct","rust_ext::algebra::field","",19,[[["usize"],["self"],["i32"]],["vec"]]],[11,"decompose","","",19,[[["usize"],["self"],["i32"]],["vec"]]],[11,"decompose","rust_ext::algebra","",9,[[["usize"],["self"],["i32"]],["vec"]]],[11,"coproduct","","",9,[[["usize"],["self"],["i32"]],["vec"]]],[11,"fp_idx_to_gen_idx","rust_ext::module","",32,[[["usize"],["self"],["i32"]],["usize"]]],[11,"generators","","",32,[[["self"]],["arc"]]],[11,"fp_idx_to_gen_idx","","",41,[[["usize"],["self"],["i32"]],["usize"]]],[11,"generators","","",41,[[["self"]],["arc"]]],[11,"source","rust_ext::module::homomorphism","",46,[[["self"]],["arc"]]],[11,"target","","",46,[[["self"]],["arc"]]],[11,"degree_shift","","",46,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","",46,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"quasi_inverse","","",46,[[["self"],["i32"]],["quasiinverse"]]],[11,"kernel","","",46,[[["self"],["i32"]],["subspace"]]],[11,"get_matrix","","",46,[[["i32"],["self"],["matrix"]]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",46,[[["self"],["i32"]]]],[11,"source","","",47,[[["self"]],["arc"]]],[11,"target","","",47,[[["self"]],["arc"]]],[11,"degree_shift","","",47,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","",47,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"quasi_inverse","","",47,[[["self"],["i32"]],["quasiinverse"]]],[11,"kernel","","",47,[[["self"],["i32"]],["subspace"]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",47,[[["self"],["i32"]]]],[11,"source","","",49,[[["self"]],["arc"]]],[11,"target","","",49,[[["self"]],["arc"]]],[11,"degree_shift","","",49,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","",49,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"quasi_inverse","","",49,[[["self"],["i32"]],["quasiinverse"]]],[11,"kernel","","",49,[[["self"],["i32"]],["subspace"]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",49,[[["self"],["i32"]]]],[11,"source","","",48,[[["self"]],["arc"]]],[11,"target","","",48,[[["self"]],["arc"]]],[11,"degree_shift","","",48,[[["self"]],["i32"]]],[11,"min_degree","","",48,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","",48,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",48,[[["self"],["i32"]]]],[11,"quasi_inverse","","",48,[[["self"],["i32"]],["quasiinverse"]]],[11,"kernel","","",48,[[["self"],["i32"]],["subspace"]]],[11,"source","","",52,[[["self"]],["arc"]]],[11,"target","","",52,[[["self"]],["arc"]]],[11,"degree_shift","","",52,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","",52,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"kernel","","",52,[[["self"],["i32"]],["subspace"]]],[11,"quasi_inverse","","",52,[[["self"],["i32"]],["quasiinverse"]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",52,[[["self"],["i32"]]]],[11,"source","","",53,[[["self"]],["arc"]]],[11,"target","","",53,[[["self"]],["arc"]]],[11,"degree_shift","","",53,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","",53,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"kernel","","",53,[[["self"],["i32"]],["subspace"]]],[11,"quasi_inverse","","",53,[[["self"],["i32"]],["quasiinverse"]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",53,[[["self"],["i32"]]]],[11,"source","","",54,[[["self"]],["arc"]]],[11,"target","","",54,[[["self"]],["arc"]]],[11,"degree_shift","","",54,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","",54,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"kernel","","",54,[[["self"],["i32"]],["subspace"]]],[11,"quasi_inverse","","",54,[[["self"],["i32"]],["quasiinverse"]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",54,[[["self"],["i32"]]]],[11,"source","","",55,[[["self"]],["arc"]]],[11,"target","","",55,[[["self"]],["arc"]]],[11,"degree_shift","","",55,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","",55,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"kernel","","",55,[[["self"],["i32"]],["subspace"]]],[11,"quasi_inverse","","",55,[[["self"],["i32"]],["quasiinverse"]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",55,[[["self"],["i32"]]]],[11,"source","","",51,[[["self"]],["arc"]]],[11,"target","","",51,[[["self"]],["arc"]]],[11,"degree_shift","","",51,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","",51,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"quasi_inverse","","",51,[[["self"],["i32"]],["quasiinverse"]]],[11,"kernel","","",51,[[["self"],["i32"]],["subspace"]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",51,[[["self"],["i32"]]]],[11,"source","","",50,[[["self"]],["arc"]]],[11,"target","","",50,[[["self"]],["arc"]]],[11,"degree_shift","","",50,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","",50,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"quasi_inverse","","",50,[[["self"],["i32"]],["quasiinverse"]]],[11,"kernel","","",50,[[["self"],["i32"]],["subspace"]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",50,[[["self"],["i32"]]]],[11,"source","rust_ext::chain_complex::hom_complex","",69,[[["self"]],["arc"]]],[11,"target","","",69,[[["self"]],["arc"]]],[11,"degree_shift","","",69,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","At the moment, this is off by a sign. However, we only use…",69,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"kernel","","",69,[[["self"],["i32"]],["subspace"]]],[11,"quasi_inverse","","",69,[[["self"],["i32"]],["quasiinverse"]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",69,[[["self"],["i32"]]]],[11,"apply_quasi_inverse","","",69,[[["fpvector"],["i32"],["fpvector"],["self"]]]],[11,"source","rust_ext::chain_complex::tensor_product_chain_complex","",70,[[["self"]],["arc"]]],[11,"target","","",70,[[["self"]],["arc"]]],[11,"degree_shift","","",70,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","At the moment, this is off by a sign. However, we only use…",70,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"kernel","","",70,[[["self"],["i32"]],["subspace"]]],[11,"quasi_inverse","","",70,[[["self"],["i32"]],["quasiinverse"]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",70,[[["self"],["i32"]]]],[11,"apply_quasi_inverse","","",70,[[["fpvector"],["i32"],["fpvector"],["self"]]]],[11,"zero_homomorphism","rust_ext::module::homomorphism","",47,[[["arc"],["arc"],["i32"]],["self"]]],[11,"zero_homomorphism","","",49,[[["arc"],["arc"],["i32"]],["self"]]],[11,"zero_homomorphism","","",51,[[["arc"],["arc"],["i32"]],["self"]]],[11,"zero_homomorphism","","",50,[[["arc"],["finitemodule"],["i32"],["arc",["finitemodule"]]],["self"]]],[11,"max_degree","rust_ext::module","",29,[[["self"]],["i32"]]],[11,"max_degree","","",33,[[["self"]],["i32"]]],[11,"max_degree","","",34,[[["self"]],["i32"]]],[11,"max_degree","","",37,[[["self"]],["i32"]]],[11,"max_degree","","",38,[[["self"]],["i32"]]],[11,"max_degree","","",41,[[["self"]],["i32"]]],[11,"zero_module","","",29,[[["algebraany"],["arc",["algebraany"]],["i32"]],["self"]]],[11,"zero_module","","",32,[[["algebraany"],["arc",["algebraany"]],["i32"]],["self"]]],[11,"zero_module","","",37,[[["algebraany"],["arc",["algebraany"]],["i32"]],["self"]]],[11,"zero_module","","",38,[[["algebraany"],["arc",["algebraany"]],["i32"]],["self"]]],[11,"zero_module","","",30,[[["algebraany"],["arc",["algebraany"]],["i32"]],["self"]]],[11,"zero_module","","",41,[[["algebraany"],["arc",["algebraany"]],["i32"]],["self"]]],[11,"algebra","rust_ext::chain_complex","",63,[[["self"]],[["algebraany"],["arc",["algebraany"]]]]],[11,"min_degree","","",63,[[["self"]],["i32"]]],[11,"zero_module","","",63,[[["self"]],["arc"]]],[11,"module","","",63,[[["u32"],["self"]],["arc"]]],[11,"differential","","",63,[[["u32"],["self"]],["arc"]]],[11,"compute_through_bidegree","","",63,[[["u32"],["self"],["i32"]]]],[11,"set_homology_basis","","",63,[[["u32"],["vec",["usize"]],["i32"],["usize"],["self"]]]],[11,"homology_basis","","",63,[[["u32"],["self"],["i32"]],["vec"]]],[11,"max_homology_degree","","",63,[[["u32"],["self"]],["i32"]]],[11,"algebra","","",64,[[["self"]],[["algebraany"],["arc",["algebraany"]]]]],[11,"min_degree","","",64,[[["self"]],["i32"]]],[11,"zero_module","","",64,[[["self"]],["arc"]]],[11,"module","","",64,[[["u32"],["self"]],["arc"]]],[11,"differential","","",64,[[["u32"],["self"]],["arc"]]],[11,"compute_through_bidegree","","",64,[[["u32"],["self"],["i32"]]]],[11,"set_homology_basis","","",64,[[["u32"],["vec",["usize"]],["i32"],["usize"],["self"]]]],[11,"homology_basis","","",64,[[["u32"],["self"],["i32"]],["vec"]]],[11,"max_homology_degree","","",64,[[["u32"],["self"]],["i32"]]],[11,"algebra","","",65,[[["self"]],[["algebraany"],["arc",["algebraany"]]]]],[11,"min_degree","","",65,[[["self"]],["i32"]]],[11,"zero_module","","",65,[[["self"]],["arc"]]],[11,"module","","",65,[[["u32"],["self"]],["arc"]]],[11,"differential","","",65,[[["u32"],["self"]],["arc"]]],[11,"compute_through_bidegree","","",65,[[["u32"],["self"],["i32"]]]],[11,"set_homology_basis","","",65,[[["u32"],["vec",["usize"]],["i32"],["usize"],["self"]]]],[11,"homology_basis","","",65,[[["u32"],["self"],["i32"]],["vec"]]],[11,"max_homology_degree","","",65,[[["u32"],["self"]],["i32"]]],[11,"algebra","rust_ext::resolution","",75,[[["self"]],[["algebraany"],["arc",["algebraany"]]]]],[11,"module","","",75,[[["u32"],["self"]],["arc"]]],[11,"zero_module","","",75,[[["self"]],["arc"]]],[11,"min_degree","","",75,[[["self"]],["i32"]]],[11,"set_homology_basis","","",75,[[["u32"],["vec",["usize"]],["i32"],["usize"],["self"]]]],[11,"homology_basis","","",75,[[["u32"],["self"],["i32"]],["vec"]]],[11,"homology_dimension","","",75,[[["u32"],["self"],["i32"]],["usize"]]],[11,"max_homology_degree","","",75,[[["u32"],["self"]],["i32"]]],[11,"differential","","",75,[[["u32"],["self"]],["arc"]]],[11,"compute_through_bidegree","","",75,[[["u32"],["self"],["i32"]]]],[11,"target","rust_ext::chain_complex","",64,[[["self"]],["arc"]]],[11,"chain_map","","This currently crashes if `s` is greater than the s degree…",64,[[["u32"],["self"]],["arc"]]],[11,"target","","",65,[[["self"]],["arc"]]],[11,"chain_map","","",65,[[["u32"],["self"]],["arc"]]],[11,"target","rust_ext::resolution","",75,[[["self"]],["arc"]]],[11,"chain_map","","",75,[[["u32"],["self"]],["arc"]]],[11,"max_s","rust_ext::chain_complex","",63,[[["self"]],["u32"]]],[11,"max_s","","",64,[[["self"]],["u32"]]],[11,"algebra_type","rust_ext::algebra::adem_algebra","",12,[[["self"]],["str"]]],[11,"prime","","",12,[[["self"]],["validprime"]]],[11,"name","","",12,[[["self"]],["str"]]],[11,"default_filtration_one_products","","",12,[[["self"]],["vec"]]],[11,"compute_basis","","",12,[[["self"],["i32"]]]],[11,"dimension","","",12,[[["self"],["i32"]],["usize"]]],[11,"multiply_basis_elements","","",12,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"json_to_basis","","",12,[[["value"],["self"]]]],[11,"string_to_basis","","",12,[[["str"],["self"]],[["str"],["iresult",["str"]]]]],[11,"json_from_basis","","",12,[[["usize"],["self"],["i32"]],["value"]]],[11,"basis_element_to_string","","",12,[[["usize"],["self"],["i32"]],["string"]]],[11,"generators","","",12,[[["self"],["i32"]],[["vec",["usize"]],["usize"]]]],[11,"decompose_basis_element","","",12,[[["usize"],["self"],["i32"]],["vec"]]],[11,"relations_to_check","","We return Adem relations $b^2 = 0$, $P^i P^j = \\cdots$ for…",12,[[["self"],["i32"]],[["vec"],["vec",["vec"]]]]],[11,"algebra_type","rust_ext::algebra::milnor_algebra","",16,[[["self"]],["str"]]],[11,"prime","","",16,[[["self"]],["validprime"]]],[11,"name","","",16,[[["self"]],["str"]]],[11,"default_filtration_one_products","","",16,[[["self"]],["vec"]]],[11,"compute_basis","","",16,[[["self"],["i32"]]]],[11,"dimension","","",16,[[["self"],["i32"]],["usize"]]],[11,"multiply_basis_elements","","",16,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"json_to_basis","","",16,[[["value"],["self"]]]],[11,"json_from_basis","","",16,[[["usize"],["self"],["i32"]],["value"]]],[11,"string_to_basis","","",16,[[["str"],["self"]],[["str"],["iresult",["str"]]]]],[11,"basis_element_to_string","","",16,[[["usize"],["self"],["i32"]],["string"]]],[11,"generators","","We pick our generators to be Q_0 and all the P(...). This…",16,[[["self"],["i32"]],[["vec",["usize"]],["usize"]]]],[11,"decompose_basis_element","","",16,[[["usize"],["self"],["i32"]],["vec"]]],[11,"relations_to_check","","",16,[[["self"],["i32"]],[["vec"],["vec",["vec"]]]]],[11,"algebra_type","rust_ext::algebra::field","",19,[[["self"]],["str"]]],[11,"prime","","Returns the prime the algebra is over.",19,[[["self"]],["validprime"]]],[11,"name","","",19,[[["self"]],["str"]]],[11,"compute_basis","","",19,[[["self"],["i32"]]]],[11,"dimension","","Gets the dimension of the algebra in degree `degree`.",19,[[["self"],["i32"]],["usize"]]],[11,"multiply_basis_elements","","",19,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"default_filtration_one_products","","",19,[[["self"]],["vec"]]],[11,"json_to_basis","","Converts a JSON object into a basis element. The way basis…",19,[[["value"],["self"]]]],[11,"json_from_basis","","",19,[[["usize"],["self"],["i32"]],["value"]]],[11,"basis_element_to_string","","Converts a basis element into a string for display.",19,[[["usize"],["self"],["i32"]],["string"]]],[11,"element_to_string","","",19,[[["fpvector"],["self"],["i32"]],["string"]]],[11,"generators","","",19,[[["self"],["i32"]],[["vec",["usize"]],["usize"]]]],[11,"decompose_basis_element","","",19,[[["usize"],["self"],["i32"]],["vec"]]],[11,"relations_to_check","","",19,[[["self"],["i32"]],[["vec"],["vec",["vec"]]]]],[11,"algebra_type","rust_ext::algebra","",9,[[["self"]],["str"]]],[11,"prime","","",9,[[["self"]],["validprime"]]],[11,"name","","",9,[[["self"]],["str"]]],[11,"compute_basis","","",9,[[["self"],["i32"]]]],[11,"dimension","","",9,[[["self"],["i32"]],["usize"]]],[11,"multiply_basis_elements","","",9,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"multiply_basis_element_by_element","","",9,[[["u32"],["fpvector"],["i32"],["usize"],["fpvector"],["self"]]]],[11,"multiply_element_by_basis_element","","",9,[[["u32"],["fpvector"],["i32"],["usize"],["fpvector"],["self"]]]],[11,"multiply_element_by_element","","",9,[[["u32"],["fpvector"],["i32"],["fpvector"],["self"]]]],[11,"default_filtration_one_products","","",9,[[["self"]],["vec"]]],[11,"json_to_basis","","",9,[[["value"],["self"]]]],[11,"json_from_basis","","",9,[[["usize"],["self"],["i32"]],["value"]]],[11,"string_to_basis","","",9,[[["str"],["self"]],[["str"],["iresult",["str"]]]]],[11,"basis_element_to_string","","",9,[[["usize"],["self"],["i32"]],["string"]]],[11,"element_to_string","","",9,[[["fpvector"],["self"],["i32"]],["string"]]],[11,"generators","","",9,[[["self"],["i32"]],[["vec",["usize"]],["usize"]]]],[11,"decompose_basis_element","","",9,[[["usize"],["self"],["i32"]],["vec"]]],[11,"relations_to_check","","",9,[[["self"],["i32"]],[["vec"],["vec",["vec"]]]]],[11,"name","rust_ext::module","",29,[[["self"]],["str"]]],[11,"algebra","","",29,[[["self"]],[["algebraany"],["arc",["algebraany"]]]]],[11,"min_degree","","",29,[[["self"]],["i32"]]],[11,"compute_basis","","",29,[[["self"],["i32"]]]],[11,"dimension","","",29,[[["self"],["i32"]],["usize"]]],[11,"basis_element_to_string","","",29,[[["usize"],["self"],["i32"]],["string"]]],[11,"is_unit","","",29,[[["self"]],["bool"]]],[11,"act_on_basis","","",29,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"borrow_output","","",29,[[["self"]],["bool"]]],[11,"act_on_basis_borrow","","",29,[[["usize"],["i32"],["self"]],["fpvector"]]],[11,"algebra","","",32,[[["self"]],[["algebraany"],["arc",["algebraany"]]]]],[11,"min_degree","","",32,[[["self"]],["i32"]]],[11,"name","","",32,[[["self"]],["str"]]],[11,"compute_basis","","",32,[[["self"],["i32"]]]],[11,"dimension","","",32,[[["self"],["i32"]],["usize"]]],[11,"act_on_basis","","",32,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"basis_element_to_string","","",32,[[["usize"],["self"],["i32"]],["string"]]],[11,"algebra","","",33,[[["self"]],[["algebraany"],["arc",["algebraany"]]]]],[11,"name","","",33,[[["self"]],["str"]]],[11,"min_degree","","",33,[[["self"]],["i32"]]],[11,"compute_basis","","",33,[[["self"],["i32"]]]],[11,"dimension","","",33,[[["self"],["i32"]],["usize"]]],[11,"act_on_basis","","",33,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"basis_element_to_string","","",33,[[["usize"],["self"],["i32"]],["string"]]],[11,"algebra","","",34,[[["self"]],[["algebraany"],["arc",["algebraany"]]]]],[11,"name","","",34,[[["self"]],["str"]]],[11,"min_degree","","",34,[[["self"]],["i32"]]],[11,"compute_basis","","",34,[[["self"],["i32"]]]],[11,"dimension","","",34,[[["self"],["i32"]],["usize"]]],[11,"act_on_basis","","",34,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"basis_element_to_string","","",34,[[["usize"],["self"],["i32"]],["string"]]],[11,"name","","",35,[[["self"]],["str"]]],[11,"algebra","","",35,[[["self"]],[["algebraany"],["arc",["algebraany"]]]]],[11,"min_degree","","",35,[[["self"]],["i32"]]],[11,"dimension","","",35,[[["self"],["i32"]],["usize"]]],[11,"basis_element_to_string","","",35,[[["usize"],["self"],["i32"]],["string"]]],[11,"act_on_basis","","",35,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"act","","",35,[[["u32"],["fpvector"],["i32"],["usize"],["fpvector"],["self"]]]],[11,"algebra","","",31,[[["self"]],[["algebraany"],["arc",["algebraany"]]]]],[11,"name","","",31,[[["self"]],["str"]]],[11,"min_degree","","",31,[[["self"]],["i32"]]],[11,"compute_basis","","",31,[[["self"],["i32"]]]],[11,"dimension","","",31,[[["self"],["i32"]],["usize"]]],[11,"act_on_basis","","",31,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"basis_element_to_string","","",31,[[["usize"],["self"],["i32"]],["string"]]],[11,"algebra","","",37,[[["self"]],[["algebraany"],["arc",["algebraany"]]]]],[11,"name","","",37,[[["self"]],["str"]]],[11,"min_degree","","",37,[[["self"]],["i32"]]],[11,"compute_basis","","",37,[[["self"],["i32"]]]],[11,"dimension","","",37,[[["self"],["i32"]],["usize"]]],[11,"act_on_basis","","",37,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"act","","",37,[[["u32"],["fpvector"],["i32"],["usize"],["fpvector"],["self"]]]],[11,"basis_element_to_string","","TODO: Implement",37,[[["usize"],["self"],["i32"]],["string"]]],[11,"algebra","","",38,[[["self"]],[["algebraany"],["arc",["algebraany"]]]]],[11,"name","","",38,[[["self"]],["str"]]],[11,"min_degree","","",38,[[["self"]],["i32"]]],[11,"compute_basis","","",38,[[["self"],["i32"]]]],[11,"dimension","","",38,[[["self"],["i32"]],["usize"]]],[11,"act_on_basis","","",38,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"basis_element_to_string","","",38,[[["usize"],["self"],["i32"]],["string"]]],[11,"name","","",30,[[["self"]],["str"]]],[11,"algebra","","",30,[[["self"]],[["algebraany"],["arc",["algebraany"]]]]],[11,"min_degree","","",30,[[["self"]],["i32"]]],[11,"dimension","","",30,[[["self"],["i32"]],["usize"]]],[11,"basis_element_to_string","","",30,[[["usize"],["self"],["i32"]],["string"]]],[11,"act_on_basis","","",30,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"algebra","","",41,[[["self"]],[["algebraany"],["arc",["algebraany"]]]]],[11,"name","","",41,[[["self"]],["str"]]],[11,"min_degree","","",41,[[["self"]],["i32"]]],[11,"compute_basis","","",41,[[["self"],["i32"]]]],[11,"dimension","","",41,[[["self"],["i32"]],["usize"]]],[11,"act_on_basis","","",41,[[["u32"],["fpvector"],["i32"],["usize"],["self"]]]],[11,"basis_element_to_string","","",41,[[["usize"],["self"],["i32"]],["string"]]],[11,"is_unit","","",41,[[["self"]],["bool"]]],[11,"prime","","",41,[[["self"]],["validprime"]]],[11,"borrow_output","","",41,[[["self"]],["bool"]]],[11,"act_on_basis_borrow","","",41,[[["usize"],["i32"],["self"]],["fpvector"]]],[11,"act","","",41,[[["u32"],["fpvector"],["i32"],["usize"],["fpvector"],["self"]]]],[11,"act_by_element","","",41,[[["u32"],["fpvector"],["i32"],["fpvector"],["self"]]]],[11,"generator_list_string","","",41,[[["self"],["i32"]],["string"]]],[11,"element_to_string","","",41,[[["fpvector"],["self"],["i32"]],["string"]]],[11,"from","rust_ext::algebra","",9,[[["ademalgebra"]],["algebraany"]]],[11,"from","","",9,[[["milnoralgebra"]],["algebraany"]]],[11,"from","","",9,[[["field"]],["algebraany"]]],[11,"from","rust_ext::module::homomorphism","",50,[[["boundedmodulehomomorphism",["finitemodule"]],["finitemodule"]],["self"]]],[11,"from","","",50,[[["fpmodulehomomorphism",["finitemodule"]],["finitemodule"]],["self"]]],[11,"from","rust_ext::module","",41,[[["fdmodule"]],["finitemodule"]]],[11,"from","","",41,[[["fpmodule"]],["finitemodule"]]],[11,"from","","",41,[[["realprojectivespace"]],["finitemodule"]]],[11,"from","rust_ext::chain_complex","",63,[[["finiteaugmentedchaincomplex"]],["finitechaincomplex"]]],[11,"clone","rust_ext::algebra::adem_algebra","",11,[[["self"]],["adembasiselement"]]],[11,"clone","rust_ext::algebra::milnor_algebra","",14,[[["self"]],["qpart"]]],[11,"clone","","",15,[[["self"]],["milnorbasiselement"]]],[11,"clone","rust_ext::steenrod_parser","",23,[[["self"]],["algebrabasiselt"]]],[11,"clone","","",24,[[["self"]],["algebraparsenode"]]],[11,"clone","","",25,[[["self"]],["moduleparsenode"]]],[11,"clone","","",26,[[["self"]],["bocksteinorsq"]]],[11,"clone","rust_ext::resolution","",76,[[["self"]],["cocycle"]]],[11,"default","rust_ext::algebra::milnor_algebra","",14,[[],["qpart"]]],[11,"eq","rust_ext::algebra::adem_algebra","",11,[[["self"]],["bool"]]],[11,"eq","rust_ext::algebra::milnor_algebra","",15,[[["self"]],["bool"]]],[11,"eq","rust_ext::module","",29,[[["self"]],["bool"]]],[11,"eq","","",32,[[["self"]],["bool"]]],[11,"eq","","",30,[[["self"]],["bool"]]],[11,"eq","","",41,[[["self"],["finitemodule"]],["bool"]]],[11,"ne","","",41,[[["self"],["finitemodule"]],["bool"]]],[11,"deref","rust_ext::algebra::adem_algebra","",10,[[["self"]],["vec"]]],[11,"fmt","rust_ext::block_structure","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","rust_ext::algebra::adem_algebra","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","rust_ext::algebra::milnor_algebra","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","rust_ext::algebra","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","rust_ext::steenrod_parser","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","rust_ext::steenrod_evaluator","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","rust_ext::module::free_module","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","rust_ext::module::rpn","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","rust_ext::module","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","rust_ext","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","rust_ext::algebra::adem_algebra","",11,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","rust_ext::algebra::milnor_algebra","",15,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","rust_ext::algebra","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","rust_ext::steenrod_parser","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","rust_ext::steenrod_evaluator","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","rust_ext::module","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","rust_ext","",2,[[["formatter"],["self"]],["result"]]],[11,"index","rust_ext::algebra::milnor_algebra","",17,[[["self"],["usize"]]]],[11,"index","rust_ext::module::free_module","",44,[[["self"],["usize"]]]],[11,"index_mut","rust_ext::algebra::milnor_algebra","",17,[[["self"],["usize"]]]],[11,"index_mut","rust_ext::module::free_module","",44,[[["self"],["usize"]]]],[11,"hash","rust_ext::algebra::adem_algebra","",11,[[["self"],["h"]]]],[11,"hash","rust_ext::algebra::milnor_algebra","",15,[[["self"],["h"]]]],[11,"try_into","rust_ext::algebra","",9,[[],[["ademalgebra"],["result",["ademalgebra"]]]]],[11,"try_into","","",9,[[],[["result",["milnoralgebra"]],["milnoralgebra"]]]],[11,"try_into","","",9,[[],[["result",["field"]],["field"]]]],[11,"try_into","rust_ext::module","",41,[[],[["result",["fdmodule"]],["fdmodule"]]]],[11,"try_into","","",41,[[],[["fpmodule"],["result",["fpmodule"]]]]],[11,"try_into","","",41,[[],[["realprojectivespace"],["result",["realprojectivespace"]]]]],[11,"description","rust_ext::algebra","",8,[[["self"]],["str"]]],[11,"description","rust_ext::steenrod_parser","",22,[[["self"]],["str"]]],[11,"description","rust_ext::steenrod_evaluator","",80,[[["self"]],["str"]]],[11,"description","","",28,[[["self"]],["str"]]],[11,"description","rust_ext::module","",39,[[["self"]],["str"]]],[11,"description","","",40,[[["self"]],["str"]]],[11,"description","rust_ext","",2,[[["self"]],["str"]]],[11,"deserialize","rust_ext::algebra","",6,[[["__d"]],["result"]]],[11,"deserialize","","",7,[[["__d"]],["result"]]],[11,"deserialize","rust_ext::module::rpn","",45,[[["__d"]],["result"]]],[11,"save","rust_ext::module","",35,[[["self"]],["result"]]],[11,"save","rust_ext::module::homomorphism","",46,[[["self"]],["result"]]],[11,"save","rust_ext::resolution","",75,[[["self"]],["result"]]],[11,"save","","",78,[[["self"]],["result"]]],[11,"load","rust_ext::module","",35,[[],["result"]]],[11,"load","rust_ext::module::homomorphism","",46,[[],["result"]]],[11,"load","rust_ext::resolution","",75,[[],["result"]]],[11,"load","","",78,[[],["result"]]],[11,"initialize","rust_ext::algebra::adem_algebra","",10,[[["self"]]]]],"p":[[3,"Config"],[3,"AlgebraicObjectsBundle"],[3,"ModuleFileNotFoundError"],[3,"GeneratorBasisEltPair"],[3,"BlockStructure"],[3,"BlockStart"],[3,"MilnorProfileOption"],[3,"AlgebraSpec"],[3,"InvalidAlgebraError"],[4,"AlgebraAny"],[3,"BOCKSTEIN_TABLE"],[3,"AdemBasisElement"],[3,"AdemAlgebra"],[3,"MilnorProfile"],[3,"QPart"],[3,"MilnorBasisElement"],[3,"MilnorAlgebra"],[3,"Matrix2D"],[3,"PPartMultiplier"],[3,"Field"],[8,"Algebra"],[8,"Bialgebra"],[3,"ParseError"],[4,"AlgebraBasisElt"],[4,"AlgebraParseNode"],[4,"ModuleParseNode"],[4,"BocksteinOrSq"],[3,"SteenrodCalculator"],[3,"UnknownBasisElementError"],[3,"FDModule"],[3,"RealProjectiveSpace"],[3,"HomModule"],[3,"FPModule"],[3,"TruncatedModule"],[3,"QuotientModule"],[3,"FreeModule"],[3,"FreeModuleTableEntry"],[3,"TensorModule"],[3,"SumModule"],[3,"UnknownModuleTypeError"],[3,"ModuleFailedRelationError"],[4,"FiniteModule"],[3,"FPMIndexTable"],[3,"OperationGeneratorPair"],[3,"AdmissibleMatrix"],[3,"RPSpec"],[3,"FreeModuleHomomorphism"],[3,"GenericZeroHomomorphism"],[3,"HomPullback"],[3,"BoundedModuleHomomorphism"],[3,"FiniteModuleHomomorphism"],[3,"FPModuleHomomorphism"],[3,"TruncatedHomomorphism"],[3,"TruncatedHomomorphismSource"],[3,"QuotientHomomorphism"],[3,"QuotientHomomorphismSource"],[8,"FPModuleT"],[4,"FMHI"],[8,"ModuleHomomorphism"],[8,"ZeroHomomorphism"],[8,"BoundedModule"],[8,"Module"],[8,"ZeroModule"],[3,"FiniteChainComplex"],[3,"FiniteAugmentedChainComplex"],[3,"TensorChainComplex"],[3,"ChainMap"],[4,"ChainComplexGrading"],[3,"HomChainComplex"],[3,"HomChainMap"],[3,"TensorChainMap"],[8,"ChainComplex"],[8,"CochainComplex"],[8,"AugmentedChainComplex"],[8,"BoundedChainComplex"],[3,"ResolutionInner"],[3,"Cocycle"],[3,"SelfMap"],[3,"Resolution"],[3,"ResolutionHomomorphism"],[3,"DegreeError"]]};
searchIndex["saveload"] = {"doc":"This crate provides a simple interface for saving and…","i":[[0,"default_impl","saveload","",null,null],[8,"Save","","",null,null],[10,"save","","Example ``` # use saveload::{Save, Load}; # use…",0,[[["self"]],["result"]]],[8,"Load","","",null,null],[16,"AuxData","","The type of the auxiliary data needed for loading.",1,null],[10,"load","","The auxiliary data is a borrow. This is useful for…",1,[[],["result"]]]],"p":[[8,"Save"],[8,"Load"]]};
searchIndex["thread_token"] = {"doc":"","i":[[3,"TokenBucket","thread_token","A `TokenBucket` is a bucket containing a fixed number of…",null,null],[12,"max_threads","","",0,null],[12,"running_threads","","",0,null],[12,"condvar","","",0,null],[3,"Token","","A `Token` is what `TokenBucket::take_token` returns. The…",null,null],[12,"bucket","","",1,null],[11,"new","","Constructs a new `TokenBucket` with a fixed number of…",0,[[["usize"]],["self"]]],[11,"take_token","","Attempts to take a token from the bucket. This will block…",0,[[["self"]],["token"]]],[11,"recv_or_release","","This function attempts to read a message from `receiver`…",0,[[["option"],["self"],["token"]],["token"]]],[11,"recv2_or_release","","This function attempts to read a message from `receiver`…",0,[[["option"],["token"],["self"]],["token"]]],[11,"release_token","","",0,[[["self"]]]],[11,"release","","This function does not do anything. It simply takes…",1,[[]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"drop","","",1,[[["self"]]]]],"p":[[3,"TokenBucket"],[3,"Token"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);