var N=null,E="",T="t",U="u",searchIndex={};
var R=["result","display","This function attempts to read a message from `receiver`…","token","option","try_from","try_into","borrow","borrow_mut","type_id","TokenBucket","min_degree","from_vec","with_capacity","to_owned","clone_into","formatter","deref_mut","index_mut","OnceBiVec","typeid","max_degree","algebraicobjectsbundle","string","rust_ext","vector_container","dimension","FpVector2","FpVector3","FpVector5","FpVectorGeneric","bit_length","vectorcontainer","fpvector","fpvectoriterator","This models an augmented matrix.","set_slice","clear_slice","into_slice","into_vec","iter_mut","subspace","row_reduce","set_to_zero","fpvectorslice","matrix","matrixslice","row_segment","into_matrix","compute_quasi_inverse","quasiinverse","compute_kernel","compute_quasi_inverses","AdemAlgebra","adembasiselement","ordering","BOCKSTEIN_TABLE","rust_ext::algebra","truncated","MilnorAlgebra","next_degree","basis_table","basis_element_to_index_map","basis_element_from_index","milnorbasiselement","try_basis_element_to_index","basis_element_to_index","generate_basis_generic","multiply","algebraany","milnoralgebra","ademalgebra","iresult","bocksteinorsq","algebraparsenode","moduleparsenode","adem_algebra","milnor_algebra","hashmap","compute_basis","algebra","generators","gen_names","block_structures","FDModule","FPModule","RealProjectiveSpace","graded_dimension","rust_ext::module","This function will panic if you call it with input such…","from_json","relations","index_table","module_gens_from_json","gen_idx_to_fp_idx","fp_idx_to_gen_idx","TruncatedModule","A module M where we quotient out everything above degree…","truncation","QuotientModule","Given a module `module`, this is the quotient of `module`…","subspaces","basis_list","generator_degree","generator_index","FreeModuleTableEntry","basis_element_to_opgen","generator_to_index","FreeModule","gen_deg_idx_to_internal_idx","add_generators","freemoduletableentry","operationgeneratorpair","HomModule","freemodule","TensorModule","SumModule","This is $\\mathbb{RP}_{\\mathrm{min}}^{\\mathrm{max}}$. The…","clear_bottom","degree_shift","quasi_inverse","FreeModuleHomomorphism","rust_ext::module::homomorphism","extend_by_zero","mutexguard","GenericZeroHomomorphism","BoundedModuleHomomorphism","quasi_inverses","boundedmodule","boundedmodulehomomorphism","HomPullback","Given a map `map`: A -> B and `source` = Hom(B, X),…","hommodule","freemodulehomomorphism","TruncatedHomomorphism","TruncatedHomomorphismSource","truncatedmodule","truncated_degree","QuotientHomomorphism","QuotientHomomorphismSource","quotientmodule","FPModuleHomomorphism","underlying_map","FiniteModuleHomomorphism","FPModuleT","get_matrix","total_dimension","basis_element_to_string","element_to_string","realprojectivespace","fdmodule","chain_complex","zero_module","differentials","chain_maps","target_cc","modules","source_cc","finitechaincomplex","rust_ext::chain_complex","FiniteChainComplex","FiniteAugmentedChainComplex","TensorChainComplex","right_cc","calculate_quasi_inverse","rust_ext::chain_complex::tensor_product_chain_complex","Homomorphism","differential","compute_through_bidegree","homology_gen_to_cocyle","resolution","addstructlinefn","addclassfn","add_structline","max_computed_degree","resolutioninner","finitemodule","finitemodulehomomorphism","finiteaugmentedchaincomplex","rust_ext::fp_vector","to_string","rust_ext::matrix","rust_ext::block_structure","rust_ext::algebra::adem_algebra","rust_ext::algebra::milnor_algebra","into_iter","rust_ext::algebra::field","rust_ext::steenrod_parser","rust_ext::steenrod_evaluator","rust_ext::module::finitely_presented_module","rust_ext::module::free_module","rust_ext::module::rpn","rust_ext::module::homomorphism::finite_module_homomorphism","rust_ext::chain_complex::hom_complex","rust_ext::resolution","rust_ext::resolution_homomorphism","decompose","coproduct","apply_to_basis_element","compute_kernels_and_quasi_inverses_through_degree","apply_quasi_inverse","At the moment, this is off by a sign. However, we only use…","zero_homomorphism","set_homology_basis","homology_basis","max_homology_degree","homology_dimension","chain_map","reduce_limbs","vector_container_mut","min_index","restore_slice","limbs_mut","limb_mask","set_to_zero_pure","shift_assign","is_zero_pure","set_entry","add_basis_element","to_vector","add_tensor","shift_add","shift_right_add","shift_left_add","algebra_type","default_filtration_one_products","multiply_basis_elements","json_to_basis","string_to_basis","json_from_basis","decompose_basis_element","relations_to_check","Gets the dimension of the algebra in degree `degree`.","Converts a JSON object into a basis element. The way basis…","Converts a basis element into a string for display.","multiply_basis_element_by_element","multiply_element_by_basis_element","multiply_element_by_element","act_on_basis","borrow_output","act_on_basis_borrow","act_by_element","generator_list_string","fpmodule","limbbitindexpair","fpvector2","fpvector3","fpvector5","fpvectorgeneric","algebrabasiselt","assert_receiver_is_total_eq","description","serialize","deserialize","AlgebraicObjectsBundle","ModuleFileNotFoundError","LimbBitIndexPair","VectorContainer","FpVectorIterator","FpVectorSlice","FpVectorMask","FpVectorT","QuasiInverse","AugmentedMatrix3","AugmentedMatrix2","MatrixSlice","GeneratorBasisEltPair","BlockStructure","BlockStart","MilnorProfileOption","AlgebraSpec","InvalidAlgebraError","AlgebraAny","AdemBasisElement","MilnorProfile","MilnorBasisElement","PPartMultiplier","Bialgebra","ParseError","AlgebraBasisElt","AlgebraParseNode","ModuleParseNode","BocksteinOrSq","SteenrodCalculator","UnknownBasisElementError","UnknownModuleTypeError","ModuleFailedRelationError","FiniteModule","FPMIndexTable","OperationGeneratorPair","ModuleHomomorphism","ZeroHomomorphism","BoundedModule","ZeroModule","ChainMap","ChainComplexGrading","HomChainComplex","HomChainMap","TensorChainMap","ChainComplex","CochainComplex","AugmentedChainComplex","BoundedChainComplex","ResolutionInner","Resolution","ResolutionHomomorphism","DegreeError","sseqchoice","ext_websocket","permanent","algebra_name","class_names","page_list","AddProductDifferential","AddProductType","AddPermanentClass","AddDifferential","SetClassName","BlockRefresh","AddProduct","Resolving","Construct","ConstructJson","SetStructline","SetDifferential","SetPageList","QueryTable","QueryTableResult","QueryCocycleString","QueryCocycleStringResult","message","construct","process_message","ext_websocket::sseq","ext_websocket::actions","ext_websocket::managers","act_resolution","act_sseq","resolving","constructjson","adddifferential","addproducttype","addpermanentclass","setclassname","blockrefresh","addproduct","addproductdifferential","setstructline","setdifferential","setpagelist","querytable","querytableresult","querycocyclestring","querycocyclestringresult","recipient","addclass","complete","resolve","setclass","Differential","ProductItem","ClassState","AddClass","SetClass","Recipient","SseqChoice","ResolutionManager","SseqManager","Complete","matrices","unit_resolution","add_product"];
searchIndex["bivec"]={"doc":E,"i":[[3,"BiVec","bivec","A BiVec is like a Vec, except we allow indices to be…",N,N],[12,"data",E,E,0,N],[12,R[11],E,E,0,N],[11,"new",E,E,0,[[["i32"]],["self"]]],[11,R[12],E,E,0,[[["vec"],["i32"]],["self"]]],[11,R[13],E,E,0,[[["i32"]],["self"]]],[11,R[11],E,E,0,[[["self"]],["i32"]]],[11,R[21],E,"This returns the largest degree in the bivector. This is…",0,[[["self"]],["i32"]]],[11,"len",E,"This returns the \"length\" of the bivector, defined to be…",0,[[["self"]],["i32"]]],[11,"is_empty",E,E,0,[[["self"]],["bool"]]],[11,"push",E,E,0,[[["self"],[T]]]],[11,"get",E,E,0,[[["self"],["i32"]],[[T],[R[4]]]]],[11,"last",E,E,0,[[["self"]],[[T],[R[4]]]]],[11,"iter",E,E,0,[[["self"]],["iter"]]],[11,R[40],E,E,0,[[["self"]],["itermut"]]],[11,"iter_enum",E,E,0,[[["self"]]]],[11,"extend_with",E,"Extends the bivec such that `max_degree()` is at least…",0,[[["self"],["f"],["i32"]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"],[T]]]],[11,R[5],E,E,0,[[[U]],[R[0]]]],[11,R[6],E,E,0,[[],[R[0]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[R[20]]]],[11,"clone",E,E,0,[[["self"]],["bivec"]]],[11,R[250],E,E,0,[[["self"]]]],[11,"eq",E,E,0,[[["self"],["bivec"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["bivec"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[16]]],[R[0]]]],[11,"index",E,E,0,[[["self"],["i32"]],[T]]],[11,R[18],E,E,0,[[["self"],["i32"]],[T]]],[11,R[252],E,E,0,[[["s"],["self"]],[R[0]]]],[11,R[253],E,E,0,[[["d"]],[R[0]]]],[11,"save",E,E,0,[[["self"]],[R[0]]]],[11,"load",E,E,0,[[],[R[0]]]]],"p":[[3,"BiVec"]]};
searchIndex["compressor"]={"doc":E,"i":[[5,"ms_to_string","compressor",E,N,[[["i64"]],[R[23]]]],[5,"main",E,E,N,[[]]],[17,"NUM_THREAD",E,E,N,N]],"p":[]};
searchIndex["ext_websocket"]={"doc":E,"i":[[0,"sseq",R[308],E,N,N],[3,R[359],R[333],E,N,N],[12,R[45],E,E,0,N],[12,"source_dim",E,E,0,N],[12,"target_dim",E,E,0,N],[12,"column_to_pivots_row",E,E,0,N],[12,"error",E,E,0,N],[3,"Product",E,"Fields * `matrices[x][y]` : This encodes the matrix of the…",N,N],[12,"name",E,E,1,N],[12,"x",E,E,1,N],[12,"y",E,E,1,N],[12,"left",E,E,1,N],[12,"user",E,E,1,N],[12,R[309],E,E,1,N],[12,R[167],E,E,1,N],[12,R[369],E,E,1,N],[3,R[360],E,E,N,N],[12,"name",E,E,2,N],[12,"mult_x",E,E,2,N],[12,"mult_y",E,E,2,N],[12,R[369],E,E,2,N],[3,"Sseq",E,"Here are some blanket assumptions we make about the order…",N,N],[12,"p",E,E,3,N],[12,"name",E,E,3,N],[12,"min_x",E,E,3,N],[12,"min_y",E,E,3,N],[12,"block_refresh",E,E,3,N],[12,"sender",E,E,3,N],[12,R[312],E,E,3,N],[12,"product_name_to_index",E,E,3,N],[12,"products",E,E,3,N],[12,"classes",E,E,3,N],[12,R[311],E,E,3,N],[12,R[153],E,E,3,N],[12,"permanent_classes",E,E,3,N],[12,"zeros",E,E,3,N],[12,"page_classes",E,E,3,N],[4,R[361],E,E,N,N],[13,"Error",E,E,4,N],[13,"Done",E,E,4,N],[13,"InProgress",E,E,4,N],[5,"sseq_profile",E,E,N,[[["i32"]]]],[5,"sseq_profile_i",E,E,N,[[["i32"]]]],[5,"express_basis",E,"Given a vector `elt`, a subspace `zeros` of the total…",N,[[[R[41]],[R[33]],[R[4],[R[41]]]],[["u32"],["vec",["u32"]]]]],[17,"MIN_PAGE",E,E,N,N],[17,"INFINITY",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_ClassState",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_ClassState",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_ProductItem",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_ProductItem",E,E,N,N],[11,"new",E,E,0,[[["u32"],["usize"]],["self"]]],[11,R[43],E,E,0,[[["self"]]]],[11,"add",E,E,0,[[[R[4],[R[33]]],["self"],[R[33]]]]],[11,"get_source_target_pairs",E,E,0,[[["self"]],["vec"]]],[11,"reduce_target",E,"Given a subspace of the target space, project the target…",0,[[["self"],[R[41]]]]],[11,"evaluate",E,"This evaluates the differential on `source`, adding the…",0,[[[R[33]],["self"],[R[33]]]]],[11,"prime",E,E,0,[[["self"]],["u32"]]],[11,"new",E,E,3,[[[R[307]],["u32"],[R[4],["sender"]],["i32"],["sender"]],["self"]]],[11,"clear",E,"This clears out all the user actions. This is intended to…",3,[[["self"]]]],[11,"refresh_all",E,E,3,[[["self"]]]],[11,"add_page",E,"Adds a page to the page list, which is the list of pages…",3,[[["self"],["i32"]]]],[11,"allocate_differential_matrix",E,"Initializes `differentials[x][y][r]`. It sets the…",3,[[["self"],["i32"]]]],[11,"allocate_zeros_subspace",E,E,3,[[["bivec"],["i32"],["self"]]]],[11,R[68],E,"Given a class `class` at `(x, y)` and a Product object…",3,[[[R[33]],["i32"],["product"],["self"]],[R[4]]]],[11,"leibniz",E,"Apply the Leibniz rule to obtain new differentials. The…",3,[[[R[4],[R[33]]],["usize"],[R[33]],["i32"],["self"],[R[33]]],[R[4]]]],[11,"compute_edges_inner",E,E,3,[[[R[307]],["u32"],["arc",["rwlock"]],["i32"],["rwlock",["vec"]],["rwlock",["bivec"]],["arc",["rwlock"]],["sender"],["arc",["rwlock"]],["rwlock",["bivec"]]]]],[11,"compute_edges",E,"Computes products whose source is at (x, y).",3,[[["self"],["i32"]]]],[11,"compute_next_page_no_d",E,"Compute the classes in next page assuming there is no…",3,[[["u32"],[R[41]]]]],[11,"compute_next_page_with_d",E,"Compute the classes in next page assuming there might be a…",3,[[["self"],["i32"]]]],[11,"compute_classes",E,"Arguments * `refresh_edge` - Whether to automatically call…",3,[[["bool"],["self"],["i32"]]]],[11,"send_class_data",E,E,3,[[["self"],["i32"]]]],[11,"send",E,E,3,[[[R[330]],["self"]]]],[11,"product_defined",E,E,3,[[["product"],["self"],["i32"]],["bool"]]],[11,"class_defined",E,E,3,[[["self"],["i32"]],["bool"]]],[11,"get_page",E,E,3,[[["bivec"],["i32"]],[T]]],[11,"get_differentials_hitting",E,"Get a list of r for which there is a d_r differential…",3,[[["self"],["i32"]],[["i32"],["vec",["i32"]]]]],[11,"set_class",E,"This function should only be called when everything to the…",3,[[["self"],["usize"],["i32"]]]],[11,"set_class_name",E,E,3,[[[R[23]],["usize"],["i32"],["self"]]]],[11,"add_differential",E,"Add a differential starting at (x, y). This mutates the…",3,[[[R[33]],["i32"],["self"],[R[33]]]]],[11,"add_differential_propagate",E,"This function recursively propagates differentials. If…",3,[[["usize"],[R[33]],["i32"],["self"],[R[4]]]]],[11,"add_permanent_class",E,E,3,[[[R[33]],["self"],["i32"]]]],[11,"add_product_type",E,"Add a product to the list of products, but don't add any…",3,[[["str"],["i32"],["self"],["bool"]]]],[11,"add_product_differential",E,E,3,[[["self"],[R[23]]]]],[11,"repropagate_product",E,E,3,[[["self"],["usize"]]]],[11,R[371],E,E,3,[[[R[23]],["i32"],["self"],["bool"]]]],[0,"actions",R[308],E,N,N],[3,"Message",R[334],E,N,N],[12,"recipients",E,E,5,N],[12,"sseq",E,E,5,N],[12,"action",E,E,5,N],[3,R[316],E,E,N,N],[12,"x",E,E,6,N],[12,"y",E,E,6,N],[12,"r",E,E,6,N],[12,"source",E,E,6,N],[12,"target",E,E,6,N],[3,R[314],E,E,N,N],[12,"x",E,E,7,N],[12,"y",E,E,7,N],[12,"class",E,E,7,N],[12,"name",E,E,7,N],[12,R[309],E,E,7,N],[3,R[315],E,E,N,N],[12,"x",E,E,8,N],[12,"y",E,E,8,N],[12,"class",E,E,8,N],[3,R[317],E,E,N,N],[12,"x",E,E,9,N],[12,"y",E,E,9,N],[12,"idx",E,E,9,N],[12,"name",E,E,9,N],[3,"Clear",E,E,N,N],[3,R[318],E,"This blocks the sseq object from recomputing classes and…",N,N],[12,"block",E,E,10,N],[3,R[362],E,E,N,N],[12,"x",E,E,11,N],[12,"y",E,E,11,N],[12,"num",E,E,11,N],[3,R[319],E,E,N,N],[12,"mult_x",E,E,12,N],[12,"mult_y",E,E,12,N],[12,"source_x",E,E,12,N],[12,"source_y",E,E,12,N],[12,"name",E,E,12,N],[12,"product",E,E,12,N],[12,"left",E,E,12,N],[3,R[313],E,E,N,N],[12,"source",E,E,13,N],[12,"target",E,E,13,N],[3,R[320],E,E,N,N],[12,"p",E,E,14,N],[12,R[11],E,E,14,N],[12,R[21],E,E,14,N],[12,"is_unit",E,E,14,N],[3,R[368],E,E,N,N],[3,R[321],E,E,N,N],[12,"module_name",E,E,15,N],[12,R[310],E,E,15,N],[3,R[322],E,E,N,N],[12,"data",E,E,16,N],[12,R[310],E,E,16,N],[3,"Resolve",E,E,N,N],[12,R[21],E,E,17,N],[3,R[323],E,E,N,N],[12,"x",E,E,18,N],[12,"y",E,E,18,N],[12,"structlines",E,E,18,N],[3,R[324],E,E,N,N],[12,"x",E,E,19,N],[12,"y",E,E,19,N],[12,"true_differentials",E,E,19,N],[12,R[153],E,E,19,N],[3,R[363],E,E,N,N],[12,"x",E,E,20,N],[12,"y",E,E,20,N],[12,"state",E,E,20,N],[12,"permanents",E,E,20,N],[12,"classes",E,E,20,N],[12,"decompositions",E,E,20,N],[12,R[311],E,E,20,N],[3,R[325],E,E,N,N],[12,R[312],E,E,21,N],[3,R[326],E,E,N,N],[12,"s",E,E,22,N],[12,T,E,E,22,N],[3,R[327],E,E,N,N],[12,"s",E,E,23,N],[12,T,E,E,23,N],[12,R[23],E,E,23,N],[3,R[328],E,E,N,N],[12,"s",E,E,24,N],[12,T,E,E,24,N],[12,"idx",E,E,24,N],[3,R[329],E,E,N,N],[12,"s",E,E,25,N],[12,T,E,E,25,N],[12,"idx",E,E,25,N],[12,R[23],E,E,25,N],[4,R[364],E,E,N,N],[13,"Sseq",E,E,26,N],[13,"Resolver",E,E,26,N],[4,R[365],E,E,N,N],[13,"Main",E,E,27,N],[13,"Unit",E,E,27,N],[4,"Action",E,"This is just a list of everything that implements…",N,N],[13,R[313],E,E,28,N],[13,R[314],E,E,28,N],[13,R[315],E,E,28,N],[13,R[316],E,E,28,N],[13,R[317],E,E,28,N],[13,"Clear",E,E,28,N],[13,R[318],E,E,28,N],[13,R[319],E,E,28,N],[13,R[362],E,E,28,N],[13,R[320],E,E,28,N],[13,R[368],E,E,28,N],[13,R[321],E,E,28,N],[13,R[322],E,E,28,N],[13,"Resolve",E,E,28,N],[13,R[323],E,E,28,N],[13,R[324],E,E,28,N],[13,R[363],E,E,28,N],[13,R[325],E,E,28,N],[13,R[326],E,E,28,N],[13,R[327],E,E,28,N],[13,R[328],E,E,28,N],[13,R[329],E,E,28,N],[17,"_IMPL_SERIALIZE_FOR_Message",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Message",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Recipient",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Recipient",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_SseqChoice",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_SseqChoice",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Action",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Action",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_AddDifferential",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_AddDifferential",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_AddProductType",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_AddProductType",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_AddPermanentClass",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_AddPermanentClass",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_SetClassName",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_SetClassName",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Clear",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Clear",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_BlockRefresh",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_BlockRefresh",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_AddClass",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_AddClass",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_AddProduct",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_AddProduct",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_AddProductDifferential",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_AddProductDifferential",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Resolving",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Resolving",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Complete",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Complete",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Construct",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Construct",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_ConstructJson",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_ConstructJson",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Resolve",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Resolve",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_SetStructline",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_SetStructline",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_SetDifferential",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_SetDifferential",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_SetClass",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_SetClass",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_SetPageList",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_SetPageList",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_QueryTable",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_QueryTable",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_QueryTableResult",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_QueryTableResult",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_QueryCocycleString",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_QueryCocycleString",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_QueryCocycleStringResult",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_QueryCocycleStringResult",E,E,N,N],[8,"ActionT",E,"The name `Action` is sort-of a misnomer. It is the content…",N,N],[11,R[337],E,E,29,[[["self"],["sseq"]],[[R[4],[R[330]]],[R[330]]]]],[11,R[336],E,E,29,[[["self"],["arc"]],[[R[4],[R[330]]],[R[330]]]]],[11,R[180],E,E,29,[[["self"]],[R[23]]]],[0,"managers",R[308],E,N,N],[3,R[366],R[335],"ResolutionManager is a struct that manipulates an…",N,N],[12,"sender",E,E,30,N],[12,"is_unit",E,E,30,N],[12,R[170],E,E,30,N],[12,R[370],E,E,30,N],[3,R[367],E,"This is more-or-less the same as the ResolutionManager,…",N,N],[12,"sender",E,E,31,N],[12,"sseq",E,E,31,N],[12,"unit_sseq",E,E,31,N],[11,"new",E,"Constructs a ResolutionManager object.",30,[[["sender"]],["self"]]],[11,R[332],E,"Reads a message and performs the actions as instructed.",30,[[["self"],[R[330]]],[[R[0],["box"]],["box",["error"]]]]],[11,"construct_json",E,"Resolves a module defined by a json object. The result is…",30,[[[R[339]],["self"]],[[R[0],["box"]],["box",["error"]]]]],[11,R[331],E,"Resolves a module specified by `json`. The result is…",30,[[[R[331]],["self"]],[[R[0],["box"]],["box",["error"]]]]],[11,"process_bundle",E,E,30,[[["self"],[R[22]]]]],[11,R[357],E,E,30,[[[R[307]],["self"],[R[357]]],[[R[0],["box"]],["box",["error"]]]]],[11,"setup_callback",E,E,30,[[[R[307]],["self"],[R[170]]]]],[11,"new",E,"Constructs a SseqManager object.",31,[[["sender"]],["self"]]],[11,"is_user",E,"Return Whether this was a user action. If it is a user…",31,[[["action"]],["bool"]]],[11,R[332],E,E,31,[[["self"],[R[330]]],[["box",["error"]],[R[0],["bool","box"]],["bool"]]]],[11,"get_sseq",E,E,31,[[[R[307]],["self"]],[[R[4],["sseq"]],["sseq"]]]],[11,R[338],E,E,31,[[["self"],[R[330]]],[[R[0],["box"]],["box",["error"]]]]],[11,"relay",E,E,31,[[[R[330]],["self"]],[[R[0],["box"]],["box",["error"]]]]],[6,"Sender",R[308],E,N,N],[11,"into",R[333],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[5],E,E,0,[[[U]],[R[0]]]],[11,R[6],E,E,0,[[],[R[0]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[R[20]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[5],E,E,1,[[[U]],[R[0]]]],[11,R[6],E,E,1,[[],[R[0]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[R[20]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"],[T]]]],[11,R[5],E,E,2,[[[U]],[R[0]]]],[11,R[6],E,E,2,[[],[R[0]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[R[20]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[5],E,E,3,[[[U]],[R[0]]]],[11,R[6],E,E,3,[[],[R[0]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[R[20]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"],[T]]]],[11,R[5],E,E,4,[[[U]],[R[0]]]],[11,R[6],E,E,4,[[],[R[0]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[R[20]]]],[11,"into",R[334],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"],[T]]]],[11,R[180],E,E,5,[[["self"]],[R[23]]]],[11,R[5],E,E,5,[[[U]],[R[0]]]],[11,R[6],E,E,5,[[],[R[0]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[R[20]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"],[T]]]],[11,R[5],E,E,6,[[[U]],[R[0]]]],[11,R[6],E,E,6,[[],[R[0]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[R[20]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[14],E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"],[T]]]],[11,R[5],E,E,7,[[[U]],[R[0]]]],[11,R[6],E,E,7,[[],[R[0]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[R[20]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[14],E,E,8,[[["self"]],[T]]],[11,R[15],E,E,8,[[["self"],[T]]]],[11,R[5],E,E,8,[[[U]],[R[0]]]],[11,R[6],E,E,8,[[],[R[0]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[R[20]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[14],E,E,9,[[["self"]],[T]]],[11,R[15],E,E,9,[[["self"],[T]]]],[11,R[5],E,E,9,[[[U]],[R[0]]]],[11,R[6],E,E,9,[[],[R[0]]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[R[20]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[14],E,E,32,[[["self"]],[T]]],[11,R[15],E,E,32,[[["self"],[T]]]],[11,R[5],E,E,32,[[[U]],[R[0]]]],[11,R[6],E,E,32,[[],[R[0]]]],[11,R[7],E,E,32,[[["self"]],[T]]],[11,R[8],E,E,32,[[["self"]],[T]]],[11,R[9],E,E,32,[[["self"]],[R[20]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[14],E,E,10,[[["self"]],[T]]],[11,R[15],E,E,10,[[["self"],[T]]]],[11,R[5],E,E,10,[[[U]],[R[0]]]],[11,R[6],E,E,10,[[],[R[0]]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[["self"]],[R[20]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[14],E,E,11,[[["self"]],[T]]],[11,R[15],E,E,11,[[["self"],[T]]]],[11,R[5],E,E,11,[[[U]],[R[0]]]],[11,R[6],E,E,11,[[],[R[0]]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[["self"]],[R[20]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[14],E,E,12,[[["self"]],[T]]],[11,R[15],E,E,12,[[["self"],[T]]]],[11,R[5],E,E,12,[[[U]],[R[0]]]],[11,R[6],E,E,12,[[],[R[0]]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[["self"]],[R[20]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[14],E,E,13,[[["self"]],[T]]],[11,R[15],E,E,13,[[["self"],[T]]]],[11,R[5],E,E,13,[[[U]],[R[0]]]],[11,R[6],E,E,13,[[],[R[0]]]],[11,R[7],E,E,13,[[["self"]],[T]]],[11,R[8],E,E,13,[[["self"]],[T]]],[11,R[9],E,E,13,[[["self"]],[R[20]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[14],E,E,14,[[["self"]],[T]]],[11,R[15],E,E,14,[[["self"],[T]]]],[11,R[5],E,E,14,[[[U]],[R[0]]]],[11,R[6],E,E,14,[[],[R[0]]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[8],E,E,14,[[["self"]],[T]]],[11,R[9],E,E,14,[[["self"]],[R[20]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[14],E,E,33,[[["self"]],[T]]],[11,R[15],E,E,33,[[["self"],[T]]]],[11,R[5],E,E,33,[[[U]],[R[0]]]],[11,R[6],E,E,33,[[],[R[0]]]],[11,R[7],E,E,33,[[["self"]],[T]]],[11,R[8],E,E,33,[[["self"]],[T]]],[11,R[9],E,E,33,[[["self"]],[R[20]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[14],E,E,15,[[["self"]],[T]]],[11,R[15],E,E,15,[[["self"],[T]]]],[11,R[5],E,E,15,[[[U]],[R[0]]]],[11,R[6],E,E,15,[[],[R[0]]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[8],E,E,15,[[["self"]],[T]]],[11,R[9],E,E,15,[[["self"]],[R[20]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[14],E,E,16,[[["self"]],[T]]],[11,R[15],E,E,16,[[["self"],[T]]]],[11,R[5],E,E,16,[[[U]],[R[0]]]],[11,R[6],E,E,16,[[],[R[0]]]],[11,R[7],E,E,16,[[["self"]],[T]]],[11,R[8],E,E,16,[[["self"]],[T]]],[11,R[9],E,E,16,[[["self"]],[R[20]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[14],E,E,17,[[["self"]],[T]]],[11,R[15],E,E,17,[[["self"],[T]]]],[11,R[5],E,E,17,[[[U]],[R[0]]]],[11,R[6],E,E,17,[[],[R[0]]]],[11,R[7],E,E,17,[[["self"]],[T]]],[11,R[8],E,E,17,[[["self"]],[T]]],[11,R[9],E,E,17,[[["self"]],[R[20]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[14],E,E,18,[[["self"]],[T]]],[11,R[15],E,E,18,[[["self"],[T]]]],[11,R[5],E,E,18,[[[U]],[R[0]]]],[11,R[6],E,E,18,[[],[R[0]]]],[11,R[7],E,E,18,[[["self"]],[T]]],[11,R[8],E,E,18,[[["self"]],[T]]],[11,R[9],E,E,18,[[["self"]],[R[20]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[14],E,E,19,[[["self"]],[T]]],[11,R[15],E,E,19,[[["self"],[T]]]],[11,R[5],E,E,19,[[[U]],[R[0]]]],[11,R[6],E,E,19,[[],[R[0]]]],[11,R[7],E,E,19,[[["self"]],[T]]],[11,R[8],E,E,19,[[["self"]],[T]]],[11,R[9],E,E,19,[[["self"]],[R[20]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[14],E,E,20,[[["self"]],[T]]],[11,R[15],E,E,20,[[["self"],[T]]]],[11,R[5],E,E,20,[[[U]],[R[0]]]],[11,R[6],E,E,20,[[],[R[0]]]],[11,R[7],E,E,20,[[["self"]],[T]]],[11,R[8],E,E,20,[[["self"]],[T]]],[11,R[9],E,E,20,[[["self"]],[R[20]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[14],E,E,21,[[["self"]],[T]]],[11,R[15],E,E,21,[[["self"],[T]]]],[11,R[5],E,E,21,[[[U]],[R[0]]]],[11,R[6],E,E,21,[[],[R[0]]]],[11,R[7],E,E,21,[[["self"]],[T]]],[11,R[8],E,E,21,[[["self"]],[T]]],[11,R[9],E,E,21,[[["self"]],[R[20]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[14],E,E,22,[[["self"]],[T]]],[11,R[15],E,E,22,[[["self"],[T]]]],[11,R[5],E,E,22,[[[U]],[R[0]]]],[11,R[6],E,E,22,[[],[R[0]]]],[11,R[7],E,E,22,[[["self"]],[T]]],[11,R[8],E,E,22,[[["self"]],[T]]],[11,R[9],E,E,22,[[["self"]],[R[20]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[14],E,E,23,[[["self"]],[T]]],[11,R[15],E,E,23,[[["self"],[T]]]],[11,R[5],E,E,23,[[[U]],[R[0]]]],[11,R[6],E,E,23,[[],[R[0]]]],[11,R[7],E,E,23,[[["self"]],[T]]],[11,R[8],E,E,23,[[["self"]],[T]]],[11,R[9],E,E,23,[[["self"]],[R[20]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[14],E,E,24,[[["self"]],[T]]],[11,R[15],E,E,24,[[["self"],[T]]]],[11,R[5],E,E,24,[[[U]],[R[0]]]],[11,R[6],E,E,24,[[],[R[0]]]],[11,R[7],E,E,24,[[["self"]],[T]]],[11,R[8],E,E,24,[[["self"]],[T]]],[11,R[9],E,E,24,[[["self"]],[R[20]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[14],E,E,25,[[["self"]],[T]]],[11,R[15],E,E,25,[[["self"],[T]]]],[11,R[5],E,E,25,[[[U]],[R[0]]]],[11,R[6],E,E,25,[[],[R[0]]]],[11,R[7],E,E,25,[[["self"]],[T]]],[11,R[8],E,E,25,[[["self"]],[T]]],[11,R[9],E,E,25,[[["self"]],[R[20]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[14],E,E,26,[[["self"]],[T]]],[11,R[15],E,E,26,[[["self"],[T]]]],[11,R[5],E,E,26,[[[U]],[R[0]]]],[11,R[6],E,E,26,[[],[R[0]]]],[11,R[7],E,E,26,[[["self"]],[T]]],[11,R[8],E,E,26,[[["self"]],[T]]],[11,R[9],E,E,26,[[["self"]],[R[20]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[14],E,E,27,[[["self"]],[T]]],[11,R[15],E,E,27,[[["self"],[T]]]],[11,R[5],E,E,27,[[[U]],[R[0]]]],[11,R[6],E,E,27,[[],[R[0]]]],[11,R[7],E,E,27,[[["self"]],[T]]],[11,R[8],E,E,27,[[["self"]],[T]]],[11,R[9],E,E,27,[[["self"]],[R[20]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[14],E,E,28,[[["self"]],[T]]],[11,R[15],E,E,28,[[["self"],[T]]]],[11,R[5],E,E,28,[[[U]],[R[0]]]],[11,R[6],E,E,28,[[],[R[0]]]],[11,R[7],E,E,28,[[["self"]],[T]]],[11,R[8],E,E,28,[[["self"]],[T]]],[11,R[9],E,E,28,[[["self"]],[R[20]]]],[11,"into",R[335],E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[5],E,E,30,[[[U]],[R[0]]]],[11,R[6],E,E,30,[[],[R[0]]]],[11,R[7],E,E,30,[[["self"]],[T]]],[11,R[8],E,E,30,[[["self"]],[T]]],[11,R[9],E,E,30,[[["self"]],[R[20]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[5],E,E,31,[[[U]],[R[0]]]],[11,R[6],E,E,31,[[],[R[0]]]],[11,R[7],E,E,31,[[["self"]],[T]]],[11,R[8],E,E,31,[[["self"]],[T]]],[11,R[9],E,E,31,[[["self"]],[R[20]]]],[11,R[337],R[334],E,28,[[["self"],["sseq"]],[[R[4],[R[330]]],[R[330]]]]],[11,R[336],E,E,28,[[["self"],["arc"]],[[R[4],[R[330]]],[R[330]]]]],[11,R[180],E,E,28,[[["self"]],[R[23]]]],[11,R[337],E,E,6,[[["self"],["sseq"]],[[R[4],[R[330]]],[R[330]]]]],[11,R[337],E,E,7,[[["self"],["sseq"]],[[R[4],[R[330]]],[R[330]]]]],[11,R[336],E,E,7,[[["self"],["arc"]],[[R[4],[R[330]]],[R[330]]]]],[11,R[337],E,E,8,[[["self"],["sseq"]],[[R[4],[R[330]]],[R[330]]]]],[11,R[337],E,E,9,[[["self"],["sseq"]],[[R[4],[R[330]]],[R[330]]]]],[11,R[337],E,E,32,[[["self"],["sseq"]],[[R[4],[R[330]]],[R[330]]]]],[11,R[337],E,E,10,[[["self"],["sseq"]],[[R[4],[R[330]]],[R[330]]]]],[11,R[337],E,E,11,[[["self"],["sseq"]],[[R[4],[R[330]]],[R[330]]]]],[11,R[337],E,E,12,[[["self"],["sseq"]],[[R[4],[R[330]]],[R[330]]]]],[11,R[337],E,E,13,[[["self"],["sseq"]],[[R[4],[R[330]]],[R[330]]]]],[11,R[336],E,E,13,[[["self"],["arc"]],[[R[4],[R[330]]],[R[330]]]]],[11,R[180],E,E,13,[[["self"]],[R[23]]]],[11,R[336],E,E,22,[[["self"],["arc"]],[[R[4],[R[330]]],[R[330]]]]],[11,R[336],E,E,24,[[["self"],["arc"]],[[R[4],[R[330]]],[R[330]]]]],[11,"from",E,E,28,[[[R[346]]],["action"]]],[11,"from",E,E,28,[[[R[341]]],["action"]]],[11,"from",E,E,28,[[[R[342]]],["action"]]],[11,"from",E,E,28,[[[R[340]]],["action"]]],[11,"from",E,E,28,[[[R[343]]],["action"]]],[11,"from",E,E,28,[[["clear"]],["action"]]],[11,"from",E,E,28,[[[R[344]]],["action"]]],[11,"from",E,E,28,[[[R[345]]],["action"]]],[11,"from",E,E,28,[[[R[355]]],["action"]]],[11,"from",E,E,28,[[[R[338]]],["action"]]],[11,"from",E,E,28,[[[R[356]]],["action"]]],[11,"from",E,E,28,[[[R[331]]],["action"]]],[11,"from",E,E,28,[[[R[339]]],["action"]]],[11,"from",E,E,28,[[[R[357]]],["action"]]],[11,"from",E,E,28,[[[R[347]]],["action"]]],[11,"from",E,E,28,[[[R[348]]],["action"]]],[11,"from",E,E,28,[[[R[358]]],["action"]]],[11,"from",E,E,28,[[[R[349]]],["action"]]],[11,"from",E,E,28,[[[R[350]]],["action"]]],[11,"from",E,E,28,[[[R[351]]],["action"]]],[11,"from",E,E,28,[[[R[352]]],["action"]]],[11,"from",E,E,28,[[[R[353]]],["action"]]],[11,"clone",R[333],E,4,[[["self"]],["classstate"]]],[11,"clone",E,E,2,[[["self"]],["productitem"]]],[11,"clone",R[334],E,5,[[["self"]],[R[330]]]],[11,"clone",E,E,26,[[["self"]],[R[354]]]],[11,"clone",E,E,27,[[["self"]],[R[307]]]],[11,"clone",E,E,28,[[["self"]],["action"]]],[11,"clone",E,E,6,[[["self"]],[R[340]]]],[11,"clone",E,E,7,[[["self"]],[R[341]]]],[11,"clone",E,E,8,[[["self"]],[R[342]]]],[11,"clone",E,E,9,[[["self"]],[R[343]]]],[11,"clone",E,E,32,[[["self"]],["clear"]]],[11,"clone",E,E,10,[[["self"]],[R[344]]]],[11,"clone",E,E,11,[[["self"]],[R[355]]]],[11,"clone",E,E,12,[[["self"]],[R[345]]]],[11,"clone",E,E,13,[[["self"]],[R[346]]]],[11,"clone",E,E,14,[[["self"]],[R[338]]]],[11,"clone",E,E,33,[[["self"]],[R[356]]]],[11,"clone",E,E,15,[[["self"]],[R[331]]]],[11,"clone",E,E,16,[[["self"]],[R[339]]]],[11,"clone",E,E,17,[[["self"]],[R[357]]]],[11,"clone",E,E,18,[[["self"]],[R[347]]]],[11,"clone",E,E,19,[[["self"]],[R[348]]]],[11,"clone",E,E,20,[[["self"]],[R[358]]]],[11,"clone",E,E,21,[[["self"]],[R[349]]]],[11,"clone",E,E,22,[[["self"]],[R[350]]]],[11,"clone",E,E,23,[[["self"]],[R[351]]]],[11,"clone",E,E,24,[[["self"]],[R[352]]]],[11,"clone",E,E,25,[[["self"]],[R[353]]]],[11,"eq",E,E,26,[[[R[354]],["self"]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[307]]],["bool"]]],[11,"fmt",E,E,5,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",R[333],E,4,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,2,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",R[334],E,5,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,26,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,27,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,28,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,6,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,7,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,8,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,9,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,32,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,10,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,11,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,12,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,13,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,14,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,33,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,15,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,16,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,17,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,18,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,19,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,20,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,21,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,22,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,23,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,24,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,25,[[["self"],[R[16]]],[R[0]]]],[11,R[6],E,E,28,[[],[[R[0],[R[346]]],[R[346]]]]],[11,R[6],E,E,28,[[],[[R[0],[R[341]]],[R[341]]]]],[11,R[6],E,E,28,[[],[[R[342]],[R[0],[R[342]]]]]],[11,R[6],E,E,28,[[],[[R[340]],[R[0],[R[340]]]]]],[11,R[6],E,E,28,[[],[[R[0],[R[343]]],[R[343]]]]],[11,R[6],E,E,28,[[],[[R[0],["clear"]],["clear"]]]],[11,R[6],E,E,28,[[],[[R[344]],[R[0],[R[344]]]]]],[11,R[6],E,E,28,[[],[[R[0],[R[345]]],[R[345]]]]],[11,R[6],E,E,28,[[],[[R[0],[R[355]]],[R[355]]]]],[11,R[6],E,E,28,[[],[[R[0],[R[338]]],[R[338]]]]],[11,R[6],E,E,28,[[],[[R[0],[R[356]]],[R[356]]]]],[11,R[6],E,E,28,[[],[[R[331]],[R[0],[R[331]]]]]],[11,R[6],E,E,28,[[],[[R[339]],[R[0],[R[339]]]]]],[11,R[6],E,E,28,[[],[[R[0],[R[357]]],[R[357]]]]],[11,R[6],E,E,28,[[],[[R[347]],[R[0],[R[347]]]]]],[11,R[6],E,E,28,[[],[[R[0],[R[348]]],[R[348]]]]],[11,R[6],E,E,28,[[],[[R[358]],[R[0],[R[358]]]]]],[11,R[6],E,E,28,[[],[[R[0],[R[349]]],[R[349]]]]],[11,R[6],E,E,28,[[],[[R[350]],[R[0],[R[350]]]]]],[11,R[6],E,E,28,[[],[[R[0],[R[351]]],[R[351]]]]],[11,R[6],E,E,28,[[],[[R[0],[R[352]]],[R[352]]]]],[11,R[6],E,E,28,[[],[[R[0],[R[353]]],[R[353]]]]],[11,R[252],R[333],E,4,[[["self"],["__s"]],[R[0]]]],[11,R[252],E,E,2,[[["self"],["__s"]],[R[0]]]],[11,R[252],R[334],E,5,[[["self"],["__s"]],[R[0]]]],[11,R[252],E,E,26,[[["self"],["__s"]],[R[0]]]],[11,R[252],E,E,27,[[["self"],["__s"]],[R[0]]]],[11,R[252],E,E,28,[[["self"],["__s"]],[R[0]]]],[11,R[252],E,E,6,[[["self"],["__s"]],[R[0]]]],[11,R[252],E,E,7,[[["self"],["__s"]],[R[0]]]],[11,R[252],E,E,8,[[["self"],["__s"]],[R[0]]]],[11,R[252],E,E,9,[[["self"],["__s"]],[R[0]]]],[11,R[252],E,E,32,[[["self"],["__s"]],[R[0]]]],[11,R[252],E,E,10,[[["self"],["__s"]],[R[0]]]],[11,R[252],E,E,11,[[["self"],["__s"]],[R[0]]]],[11,R[252],E,E,12,[[["self"],["__s"]],[R[0]]]],[11,R[252],E,E,13,[[["self"],["__s"]],[R[0]]]],[11,R[252],E,E,14,[[["self"],["__s"]],[R[0]]]],[11,R[252],E,E,33,[[["self"],["__s"]],[R[0]]]],[11,R[252],E,E,15,[[["self"],["__s"]],[R[0]]]],[11,R[252],E,E,16,[[["self"],["__s"]],[R[0]]]],[11,R[252],E,E,17,[[["self"],["__s"]],[R[0]]]],[11,R[252],E,E,18,[[["self"],["__s"]],[R[0]]]],[11,R[252],E,E,19,[[["self"],["__s"]],[R[0]]]],[11,R[252],E,E,20,[[["self"],["__s"]],[R[0]]]],[11,R[252],E,E,21,[[["self"],["__s"]],[R[0]]]],[11,R[252],E,E,22,[[["self"],["__s"]],[R[0]]]],[11,R[252],E,E,23,[[["self"],["__s"]],[R[0]]]],[11,R[252],E,E,24,[[["self"],["__s"]],[R[0]]]],[11,R[252],E,E,25,[[["self"],["__s"]],[R[0]]]],[11,R[253],R[333],E,4,[[["__d"]],[R[0]]]],[11,R[253],E,E,2,[[["__d"]],[R[0]]]],[11,R[253],R[334],E,5,[[["__d"]],[R[0]]]],[11,R[253],E,E,26,[[["__d"]],[R[0]]]],[11,R[253],E,E,27,[[["__d"]],[R[0]]]],[11,R[253],E,E,28,[[["__d"]],[R[0]]]],[11,R[253],E,E,6,[[["__d"]],[R[0]]]],[11,R[253],E,E,7,[[["__d"]],[R[0]]]],[11,R[253],E,E,8,[[["__d"]],[R[0]]]],[11,R[253],E,E,9,[[["__d"]],[R[0]]]],[11,R[253],E,E,32,[[["__d"]],[R[0]]]],[11,R[253],E,E,10,[[["__d"]],[R[0]]]],[11,R[253],E,E,11,[[["__d"]],[R[0]]]],[11,R[253],E,E,12,[[["__d"]],[R[0]]]],[11,R[253],E,E,13,[[["__d"]],[R[0]]]],[11,R[253],E,E,14,[[["__d"]],[R[0]]]],[11,R[253],E,E,33,[[["__d"]],[R[0]]]],[11,R[253],E,E,15,[[["__d"]],[R[0]]]],[11,R[253],E,E,16,[[["__d"]],[R[0]]]],[11,R[253],E,E,17,[[["__d"]],[R[0]]]],[11,R[253],E,E,18,[[["__d"]],[R[0]]]],[11,R[253],E,E,19,[[["__d"]],[R[0]]]],[11,R[253],E,E,20,[[["__d"]],[R[0]]]],[11,R[253],E,E,21,[[["__d"]],[R[0]]]],[11,R[253],E,E,22,[[["__d"]],[R[0]]]],[11,R[253],E,E,23,[[["__d"]],[R[0]]]],[11,R[253],E,E,24,[[["__d"]],[R[0]]]],[11,R[253],E,E,25,[[["__d"]],[R[0]]]]],"p":[[3,R[359]],[3,"Product"],[3,R[360]],[3,"Sseq"],[4,R[361]],[3,"Message"],[3,R[316]],[3,R[314]],[3,R[315]],[3,R[317]],[3,R[318]],[3,R[362]],[3,R[319]],[3,R[313]],[3,R[320]],[3,R[321]],[3,R[322]],[3,"Resolve"],[3,R[323]],[3,R[324]],[3,R[363]],[3,R[325]],[3,R[326]],[3,R[327]],[3,R[328]],[3,R[329]],[4,R[364]],[4,R[365]],[4,"Action"],[8,"ActionT"],[3,R[366]],[3,R[367]],[3,"Clear"],[3,R[368]]]};
searchIndex["once"]={"doc":E,"i":[[3,"OnceVec","once",E,N,N],[12,"data",E,E,0,N],[3,R[19],E,E,N,N],[12,"data",E,E,1,N],[11,R[39],E,E,0,[[],["vec"]]],[11,R[12],E,E,0,[[["vec"]],["self"]]],[11,"new",E,E,0,[[],["self"]]],[11,R[13],E,E,0,[[["usize"]],["self"]]],[11,"get_vec_mut",E,E,0,[[["self"]],["vec"]]],[11,"get_vec",E,E,0,[[["self"]],["vec"]]],[11,"reserve",E,E,0,[[["self"],["usize"]]]],[11,"reserve_exact",E,E,0,[[["self"],["usize"]]]],[11,"push",E,E,0,[[["self"],[T]]]],[11,"into_bivec",E,E,1,[[],["bivec"]]],[11,"from_bivec",E,E,1,[[["bivec"]],["self"]]],[11,"get_bivec",E,E,1,[[["self"]],["bivec"]]],[11,"new",E,E,1,[[["i32"]],["self"]]],[11,R[13],E,E,1,[[["i32"]],["self"]]],[11,"push",E,E,1,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[5],E,E,0,[[[U]],[R[0]]]],[11,R[6],E,E,0,[[],[R[0]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[R[20]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"],[T]]]],[11,R[5],E,E,1,[[[U]],[R[0]]]],[11,R[6],E,E,1,[[],[R[0]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[R[20]]]],[11,"clone",E,E,1,[[["self"]],["self"]]],[11,"default",E,E,0,[[],["self"]]],[11,"fmt",E,E,0,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[16]]],[R[0]]]],[11,"deref",E,E,0,[[["self"]]]],[11,"deref",E,E,1,[[["self"]]]],[11,R[17],E,E,0,[[["self"]]]],[11,R[17],E,E,1,[[["self"]]]],[11,"index",E,E,0,[[["self"],["usize"]],[T]]],[11,"index",E,E,0,[[["u32"],["self"]],[T]]],[11,"index",E,E,1,[[["self"],["i32"]],[T]]],[11,R[18],E,E,0,[[["self"],["usize"]],[T]]],[11,R[18],E,E,0,[[["self"],["u32"]],[T]]],[11,R[18],E,E,1,[[["self"],["i32"]],[T]]],[11,"save",E,E,0,[[["self"]],[R[0]]]],[11,"save",E,E,1,[[["self"]],[R[0]]]],[11,"load",E,E,0,[[],[R[0]]]],[11,"load",E,E,1,[[],[R[0]]]]],"p":[[3,"OnceVec"],[3,R[19]]]};
searchIndex["query"]={"doc":E,"i":[[5,"query","query",E,N,[[["str"],["f"]],[R[1]]]],[5,"query_with_default",E,E,N,[[["str"],[R[1]],["f"]],[R[1]]]],[5,"query_with_default_no_default_indicated",E,E,N,[[["str"],[R[1]],["f"]],[R[1]]]],[5,"query_yes_no",E,E,N,[[["str"]],["bool"]]]],"p":[]};
searchIndex["rust_ext"]={"doc":E,"i":[[3,"Config",R[24],E,N,N],[12,"module_paths",E,E,0,N],[12,"module_file_name",E,E,0,N],[12,R[310],E,E,0,N],[12,R[21],E,E,0,N],[3,R[254],E,E,N,N],[12,R[151],E,E,1,N],[12,R[170],E,E,1,N],[3,R[255],E,E,N,N],[12,"name",E,E,2,N],[5,R[331],E,E,N,[[["config"]],[[R[0],[R[22],"box"]],[R[22]],["box",["error"]]]]],[5,"construct_from_json",E,E,N,[[[R[23]],["value"]],[[R[0],[R[22],"box"]],[R[22]],["box",["error"]]]]],[5,"run_define_module",E,E,N,[[],[[R[0],[R[23],"box"]],[R[23]],["box",["error"]]]]],[5,"run_resolve",E,E,N,[[["config"]],[[R[0],[R[23],"box"]],[R[23]],["box",["error"]]]]],[5,"run_yoneda",E,E,N,[[["config"]],[[R[0],[R[23],"box"]],[R[23]],["box",["error"]]]]],[5,"run_steenrod",E,E,N,[[],[[R[0],[R[23],"box"]],[R[23]],["box",["error"]]]]],[5,"run_test",E,E,N,[[],[[R[0],["box"]],["box",["error"]]]]],[5,"load_module_from_file",E,E,N,[[["config"]],[[R[0],[R[23],"box"]],[R[23]],["box",["error"]]]]],[0,"combinatorics",E,E,N,N],[5,"is_valid_prime","rust_ext::combinatorics",E,N,[[["u32"]],["bool"]]],[5,"inverse",E,E,N,[[["u32"]],["u32"]]],[5,"minus_one_to_the_n",E,E,N,[[["u32"]],["u32"]]],[5,"direct_binomial",E,E,N,[[["u32"]],["u32"]]],[5,"integer_power",E,"Computes b^e.",N,[[["u32"]],["u32"]]],[5,"power_mod",E,"Compute b^e mod p. We use this for computing modulo…",N,[[["u32"]],["u32"]]],[5,"logp",E,E,N,[[["u32"]],["u32"]]],[5,"basep_expansion",E,"Expand n base p and write the result into buffer result.…",N,[[["u32"]]]],[5,"multinomial2",E,E,N,[[],["u32"]]],[5,"binomial2",E,E,N,[[["i32"]],["u32"]]],[5,"multinomial_odd",E,E,N,[[["u32"]],["u32"]]],[5,"binomial_odd",E,E,N,[[["u32"],["i32"]],["u32"]]],[5,"multinomial",E,E,N,[[["u32"]],["u32"]]],[5,"binomial",E,E,N,[[["u32"],["i32"]],["u32"]]],[5,"adem_relation_coefficient",E,E,N,[[["u32"]],["u32"]]],[5,"inadmissible_pairs",E,E,N,[[["i32"],["u32"],["bool"]],["vec"]]],[5,"tau_degrees",E,E,N,[[["u32"]]]],[5,"xi_degrees",E,E,N,[[["u32"]]]],[7,"INVERSE_TABLE",E,E,N,N],[7,"XI_DEGREES",E,E,N,N],[7,"TAU_DEGREES",E,E,N,N],[7,"BINOMIAL_TABLE",E,E,N,N],[17,"MAX_PRIME_INDEX",E,E,N,N],[17,"MAX_PRIME",E,E,N,N],[17,"NOT_A_PRIME",E,E,N,N],[17,"MAX_EXPONENT",E,E,N,N],[17,"MAX_XI_TAU",E,E,N,N],[17,"PRIME_TO_INDEX_MAP",E,E,N,N],[0,"fp_vector",R[24],"An `FpVector` is a vector with entries in Fp. We use this…",N,N],[3,R[256],R[179],E,N,N],[12,"limb",E,E,3,N],[12,"bit_index",E,E,3,N],[3,R[257],E,E,N,N],[12,R[26],E,E,4,N],[12,"slice_start",E,E,4,N],[12,"slice_end",E,E,4,N],[12,"limbs",E,E,4,N],[3,R[27],E,E,N,N],[12,R[25],E,E,5,N],[3,R[28],E,E,N,N],[12,R[25],E,E,6,N],[3,R[29],E,E,N,N],[12,R[25],E,E,7,N],[3,R[30],E,E,N,N],[12,"p",E,E,8,N],[12,R[25],E,E,8,N],[3,R[258],E,E,N,N],[12,"limbs",E,E,9,N],[12,R[31],E,E,9,N],[12,"bit_mask",E,E,9,N],[12,"entries_per_64_bits_m_1",E,E,9,N],[12,"limb_index",E,E,9,N],[12,"entries_left",E,E,9,N],[12,"cur_limb",E,E,9,N],[12,"counter",E,E,9,N],[3,R[259],E,E,N,N],[12,"old_slice",E,E,10,N],[12,"inner",E,E,10,N],[3,R[260],E,"An FpVectorMask encodes a subset of the basis elements of…",N,N],[12,"p",E,E,11,N],[12,R[26],E,E,11,N],[12,"masks",E,E,11,N],[4,"FpVector",E,E,N,N],[13,R[27],E,E,12,N],[13,R[28],E,E,12,N],[13,R[29],E,E,12,N],[13,R[30],E,E,12,N],[5,R[31],E,E,N,[[["u32"]],["usize"]]],[5,"bitmask",E,E,N,[[["u32"]],["u64"]]],[5,"entries_per_64_bits",E,E,N,[[["u32"]],["usize"]]],[5,"initialize_limb_bit_index_table",E,E,N,[[["u32"]]]],[5,"limb_bit_index_pair",E,E,N,[[["u32"],["usize"]],[R[244]]]],[7,"BIT_LENGHTS",E,E,N,N],[7,"BITMASKS",E,E,N,N],[7,"ENTRIES_PER_64_BITS",E,E,N,N],[7,"LIMB_BIT_INDEX_TABLE",E,"This table tells us which limb and which bitfield of that…",N,N],[7,"LIMB_BIT_INDEX_ONCE_TABLE",E,E,N,N],[17,"MAX_DIMENSION",E,E,N,N],[8,R[261],E,E,N,N],[10,R[208],E,E,13,[[["self"],["usize"]]]],[10,R[25],E,E,13,[[["self"]],[R[32]]]],[10,R[209],E,E,13,[[["self"]],[R[32]]]],[10,"prime",E,E,13,[[["self"]],["u32"]]],[11,R[26],E,E,13,[[["self"]],["usize"]]],[11,"offset",E,E,13,[[["self"]],["usize"]]],[11,R[210],E,E,13,[[["self"]],["usize"]]],[11,"slice",E,E,13,[[["self"]]]],[11,R[36],E,E,13,[[["self"],["usize"]]]],[11,R[211],E,E,13,[[["self"]]]],[11,R[37],E,E,13,[[["self"]]]],[11,R[38],E,"Drops every element in the fp_vector that is not in the…",13,[[["self"]]]],[11,"min_limb",E,E,13,[[["self"]],["usize"]]],[11,"max_limb",E,E,13,[[["self"]],["usize"]]],[11,"limbs",E,E,13,[[["self"]],["vec"]]],[11,R[212],E,E,13,[[["self"]],["vec"]]],[11,R[213],E,E,13,[[["self"],["usize"]],["u64"]]],[11,R[214],E,E,13,[[["self"]]]],[11,R[43],E,E,13,[[["self"]]]],[11,R[215],E,E,13,[[["self"],[R[33]]]]],[11,"assign",E,E,13,[[["self"],[R[33]]]]],[11,R[216],E,E,13,[[["self"]],["bool"]]],[11,"is_zero",E,E,13,[[["self"]],["bool"]]],[11,"entry",E,E,13,[[["self"],["usize"]],["u32"]]],[11,R[217],E,E,13,[[["self"],["usize"],["u32"]]]],[11,R[218],E,E,13,[[["self"],["usize"],["u32"]]]],[11,"unpack",E,"Unpacks an FpVector onto an array slice. note that the…",13,[[["self"]]]],[11,R[219],E,E,13,[[["self"]],[["u32"],["vec",["u32"]]]]],[11,"pack",E,E,13,[[["self"]]]],[11,R[220],E,"`coeff` need not be reduced mod p. Adds v otimes w to self.",13,[[["u32"],["usize"],[R[33]],["self"]]]],[11,"add",E,"Adds `c` * `other` to `self`. `other` must have the same…",13,[[["self"],["u32"],[R[33]]]]],[11,R[221],E,E,13,[[["self"],["u32"],[R[33]]]]],[11,R[222],E,E,13,[[["self"],["u32"],[R[33]]]]],[11,R[223],E,E,13,[[["self"],["u32"],[R[33]]]]],[11,"scale",E,E,13,[[["self"],["u32"]]]],[11,"new",E,E,12,[[["u32"],["usize"]],[R[33]]]],[11,R[12],E,E,12,[[["u32"]],[R[33]]]],[11,"add_limb",E,E,12,[[["u32"],["u64"]],["u64"]]],[11,"number_of_limbs",E,E,12,[[["u32"],["usize"]],["usize"]]],[11,"padded_dimension",E,E,12,[[["u32"],["usize"]],["usize"]]],[11,"scratch_vector",E,E,12,[[["u32"],["usize"]],["self"]]],[11,"set_scratch_vector_size",E,E,12,[[["usize"]],["self"]]],[11,"iter",E,E,12,[[["self"]],[R[34]]]],[11,"pack_limb",E,E,12,[[["u32"],["usize"],["vec"]],["usize"]]],[11,"unpack_limb",E,E,12,[[["u32"],["usize"]],["usize"]]],[11,"borrow_slice",E,E,12,[[["self"],["usize"]],[R[44]]]],[11,"new",E,E,9,[[[R[33]]],[R[34]]]],[11,"skip_n",E,E,9,[[["self"],["usize"]]]],[11,"new",E,E,11,[[["u32"],["usize"]],["self"]]],[11,"set_zero",E,E,11,[[["self"]]]],[11,"set_mask",E,"If `on` is true, we add the `i`th basis element to the…",11,[[["self"],["usize"],["bool"]]]],[11,"apply",E,"This projects `target` onto the subspace spanned by the…",11,[[[R[33]],["self"]]]],[0,R[45],R[24],E,N,N],[3,"Matrix",R[181],"A matrix! In particular, a matrix with values in F_p. The…",N,N],[12,"p",E,E,14,N],[12,"rows",E,E,14,N],[12,"columns",E,E,14,N],[12,"slice_row_start",E,E,14,N],[12,"slice_row_end",E,E,14,N],[12,"slice_col_start",E,E,14,N],[12,"slice_col_end",E,E,14,N],[12,"vectors",E,E,14,N],[3,"Subspace",E,"A subspace of a vector space. # Fields * `matrix` - A…",N,N],[12,R[45],E,E,15,N],[12,"column_to_pivot_row",E,E,15,N],[3,R[262],E,"Given a matrix M, a quasi-inverse Q is a map from the…",N,N],[12,"image",E,E,16,N],[12,"preimage",E,E,16,N],[3,R[263],E,R[35],N,N],[12,"end",E,E,17,N],[12,"start",E,E,17,N],[12,"inner",E,E,17,N],[3,R[264],E,R[35],N,N],[12,"end",E,E,18,N],[12,"start",E,E,18,N],[12,"inner",E,E,18,N],[3,R[265],E,E,N,N],[12,"0",E,E,19,N],[11,"new",E,"Produces a new matrix over F_p with the specified number…",14,[[["u32"],["usize"]],[R[45]]]],[11,"from_rows",E,"Produces a matrix from a list of rows. If `vectors.len()…",14,[[["vec",[R[33]]],["u32"],[R[33]],["usize"]],["self"]]],[11,R[12],E,"Produces a Matrix from an `&[Vec<u32>]` object. If the…",14,[[["u32"]],[R[45]]]],[11,"to_vec",E,E,14,[[["self"]],[["vec",["vec"]],["vec",["u32"]]]]],[11,"augmented_from_vec",E,"Produces a padded augmented matrix from an `&[Vec<u32>]`…",14,[[["u32"]]]],[11,"set_identity",E,E,14,[[["self"],["usize"]]]],[11,"prime",E,E,14,[[["self"]],["u32"]]],[11,"rows",E,"Gets the number of rows in the matrix.",14,[[["self"]],["usize"]]],[11,"columns",E,"Gets the number of columns in the matrix.",14,[[["self"]],["usize"]]],[11,R[36],E,"Sets the slice on the matrix. Restricts to the submatrix…",14,[[["self"],["usize"]]]],[11,R[37],E,"Un-slice the matrix.",14,[[["self"]]]],[11,"set_row_slice",E,E,14,[[["self"],["usize"]]]],[11,"clear_row_slice",E,E,14,[[["self"]]]],[11,R[38],E,E,14,[[],["self"]]],[11,R[39],E,E,14,[[],[["vec",[R[33]]],[R[33]]]]],[11,"iter",E,E,14,[[["self"]],[[R[33]],["iter",[R[33]]]]]],[11,R[40],E,E,14,[[["self"]],[["itermut",[R[33]]],[R[33]]]]],[11,"swap_rows",E,E,14,[[["self"],["usize"]]]],[11,"row_op",E,E,14,[[["self"],["usize"],["u32"]]]],[11,R[42],E,"Perform row reduction to reduce it to reduced row echelon…",14,[[["self"],["vec"]]]],[11,"row_reduce_offset",E,E,14,[[["self"],["vec"],["usize"]]]],[11,"find_pivots_permutation",E,"This is very similar to row_reduce, except we only need to…",14,[[["self"],["iterator"]],[["usize"],["vec",["usize"]]]]],[11,"row_reduce_permutation",E,E,14,[[["self"],["vec"],[T]]]],[11,"new",E,E,15,[[["u32"],["usize"]],["self"]]],[11,"subquotient",E,"Given a chain of subspaces `subspace` < `space` <…",15,[[[R[41]],["usize"],[R[4],[R[41]]]],[["usize"],["vec",["usize"]]]]],[11,"entire_space",E,E,15,[[["u32"],["usize"]],["self"]]],[11,"add_vector",E,"This adds a vector to the subspace. This function assumes…",15,[[["self"],[R[33]]]]],[11,"add_vectors",E,E,15,[[["self"]]]],[11,"add_basis_elements",E,E,15,[[["self"]]]],[11,"reduce",E,"Projects a vector to a complement of the subspace. The…",15,[[[R[33]],["self"]]]],[11,"shift_reduce",E,"A version of `reduce` that doesn't require the vectors to…",15,[[[R[33]],["self"]]]],[11,R[42],E,E,15,[[["self"]]]],[11,"contains",E,E,15,[[["self"],[R[33]]],["bool"]]],[11,R[26],E,E,15,[[["self"]],["usize"]]],[11,"basis",E,"Returns a basis of the subspace.",15,[[["self"]]]],[11,R[43],E,"Sets the subspace to be the zero subspace.",15,[[["self"]]]],[11,"set_to_entire",E,"Sets the subspace to be the entire subspace.",15,[[["self"]]]],[11,"prime",E,E,16,[[["self"]],["u32"]]],[11,"apply",E,"Apply the quasi-inverse to an input vector and add a…",16,[[[R[33]],["u32"],[R[33]],["self"]]]],[11,R[43],E,E,14,[[["self"]]]],[11,"find_first_row_in_block",E,E,14,[[["usize"],["self"]],["usize"]]],[11,R[51],E,"Computes the kernel from an augmented matrix in rref. To…",14,[[["self"],["usize"]],[R[41]]]],[11,R[49],E,"Computes the quasi-inverse of a matrix given a rref of…",14,[[["usize"],["self"]],[R[50]]]],[11,R[52],E,"This function computes quasi-inverses for matrices A, B…",14,[[["usize"],["self"]]]],[11,"get_image",E,E,14,[[["self"],["usize"]],[R[41]]]],[11,"extend_to_surjection",E,"Given a matrix M in rref, add rows to make the matrix…",14,[[["self"],["usize"]],[["usize"],["vec",["usize"]]]]],[11,"extend_image_to_desired_image",E,"Given a matrix in rref, say [A|B|C], where B lies between…",14,[[[R[41]],["usize"],["self"]],[["usize"],["vec",["usize"]]]]],[11,"extend_image",E,"Extends the image of a matrix to either the whole…",14,[[["usize"],[R[4]],["self"]],[["usize"],["vec",["usize"]]]]],[11,"apply",E,"Applies a matrix to a vector.",14,[[[R[33]],["u32"],[R[33]],["self"]]]],[11,"new",E,E,17,[[["u32"],["usize"]],["self"]]],[11,"segment",E,E,17,[[["self"],["usize"]],[R[46]]]],[11,R[47],E,E,17,[[["self"],["usize"]],[R[44]]]],[11,R[48],E,E,17,[[],[R[45]]]],[11,"new",E,E,18,[[["u32"],["usize"]],["self"]]],[11,"segment",E,E,18,[[["self"],["usize"]],[R[46]]]],[11,R[47],E,E,18,[[["self"],["usize"]],[R[44]]]],[11,R[48],E,E,18,[[],[R[45]]]],[11,R[49],E,E,18,[[["self"]],[R[50]]]],[11,R[51],E,E,18,[[["self"]],[R[41]]]],[11,R[52],E,E,17,[[["self"]]]],[0,"block_structure",R[24],E,N,N],[3,R[266],R[182],E,N,N],[12,R[103],E,E,20,N],[12,R[104],E,E,20,N],[12,"basis_index",E,E,20,N],[3,R[267],E,E,N,N],[12,R[146],E,E,21,N],[12,"basis_element_to_block_idx",E,E,21,N],[12,"block_starts",E,E,21,N],[3,R[268],E,E,N,N],[12,"block_start_index",E,E,22,N],[12,"block_size",E,E,22,N],[11,"new",E,E,21,[[["bivec"]],["self"]]],[11,"generator_to_block",E,E,21,[[["usize"],["self"],["i32"]],["blockstart"]]],[11,"generator_basis_elt_to_index",E,E,21,[[["usize"],["i32"],["self"]],["usize"]]],[11,"index_to_generator_basis_elt",E,E,21,[[["self"],["usize"]],["generatorbasiseltpair"]]],[11,"add_block",E,E,21,[[[R[33]],["u32"],["i32"],["usize"],[R[33]],["self"]]]],[0,R[80],R[24],E,N,N],[3,R[269],R[57],E,N,N],[12,R[58],E,E,23,N],[12,"q_part",E,E,23,N],[12,"p_part",E,E,23,N],[3,R[270],E,E,N,N],[12,"p",E,E,24,N],[12,R[80],E,E,24,N],[12,"profile",E,E,24,N],[3,R[271],E,E,N,N],[12,"name",E,E,25,N],[4,R[272],E,E,N,N],[13,R[53],E,E,26,N],[13,R[59],E,E,26,N],[13,"Field",E,E,26,N],[0,R[76],E,E,N,N],[3,R[56],R[183],E,N,N],[12,"__private_field",E,E,27,N],[3,R[273],E,"The format of the AdemBasisElement is as follows. To…",N,N],[12,"degree",E,E,28,N],[12,"excess",E,E,28,N],[12,"bocksteins",E,E,28,N],[12,"ps",E,E,28,N],[3,R[53],E,E,N,N],[12,"p",E,E,29,N],[12,"name",E,E,29,N],[12,"generic",E,E,29,N],[12,"unstable",E,E,29,N],[12,R[60],E,E,29,N],[12,"even_basis_table",E,E,29,N],[12,R[61],E,E,29,N],[12,R[62],E,E,29,N],[12,"multiplication_table",E,E,29,N],[12,"sort_order",E,E,29,N],[5,"adem_basis_element_excess_sort_order",E,E,N,[[[R[54]]],[R[55]]]],[5,"adem_basis_element_length_sort_order",E,E,N,[[[R[54]]],[R[55]]]],[5,"shift_vec",E,E,N,[[["isize"],["vec"]],["vec"]]],[7,R[56],E,E,N,N],[11,"new",E,E,29,[[["u32"],["bool"]],["self"]]],[11,"generate_basis_even",E,E,29,[[["self"],["i32"]]]],[11,"generate_basis_even_degreen",E,E,29,[[["self"],["i32"]]]],[11,"generate_basis2",E,E,29,[[["self"],["i32"]]]],[11,R[67],E,E,29,[[["self"],["i32"]]]],[11,"generate_basis_generic_degreen",E,E,29,[[["self"],["i32"]]]],[11,"generate_basis_element_to_index_map",E,E,29,[[["self"],["i32"]]]],[11,R[63],E,E,29,[[["usize"],["self"],["i32"]],[R[54]]]],[11,R[65],E,E,29,[[[R[54]],["self"]],[[R[4],["usize"]],["usize"]]]],[11,R[66],E,E,29,[[[R[54]],["self"]],["usize"]]],[11,"tail_of_basis_element_to_index",E,E,29,[[["u32"],["self"],[R[54]]]]],[11,"generate_multiplication_table_2",E,E,29,[[["self"],["i32"]]]],[11,"generate_multiplication_table_2_step",E,E,29,[[["usize"],["i32"],["self"]],[R[33]]]],[11,"generate_multiplication_table_generic",E,E,29,[[["self"],["i32"]]]],[11,"generate_multiplication_table_generic_step",E,"This function expresses $Sq^x$ (current) in terms of the…",29,[[["usize"],["i32"],["self"]],[R[33]]]],[11,R[68],E,E,29,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,"make_mono_admissible",E,E,29,[[[R[33]],["u32"],["i32"],["self"],[R[54]]]]],[11,"make_mono_admissible_2",E,"Reduce a Steenrod monomial at the prime 2. # Arguments: *…",29,[[["bool"],[R[33]],["i32"],["self"],[R[54]]]]],[11,"make_mono_admissible_generic",E,E,29,[[["bool"],[R[33]],["u32"],["i32"],["self"],[R[54]]]]],[11,"decompose_basis_element_2",E,E,29,[[["usize"],["self"],["i32"]],["vec"]]],[11,"decompose_basis_element_generic",E,E,29,[[["usize"],["self"],["i32"]],["vec"]]],[11,"beps_pn",E,E,29,[[["u32"],["self"]]]],[0,R[77],R[57],E,N,N],[3,R[274],R[184],E,N,N],[12,R[58],E,E,30,N],[12,"q_part",E,E,30,N],[12,"p_part",E,E,30,N],[3,"QPart",E,E,N,N],[12,"degree",E,E,31,N],[12,"q_part",E,E,31,N],[3,R[275],E,E,N,N],[12,"q_part",E,E,32,N],[12,"p_part",E,E,32,N],[12,"degree",E,E,32,N],[3,R[59],E,E,N,N],[12,"profile",E,E,33,N],[12,"name",E,E,33,N],[12,R[60],E,E,33,N],[12,"p",E,E,33,N],[12,"generic",E,E,33,N],[12,"ppart_table",E,E,33,N],[12,"qpart_table",E,E,33,N],[12,R[61],E,E,33,N],[12,R[62],E,E,33,N],[3,R[276],E,E,N,N],[12,"p",E,E,34,N],[12,"M",E,E,34,N],[12,"r",E,E,34,N],[12,"rows",E,E,34,N],[12,"cols",E,E,34,N],[12,"diag_num",E,E,34,N],[12,"cont",E,E,34,N],[12,"diagonal",E,E,34,N],[5,"from_p",E,E,N,[[["i32"],["u32"],["vec",["u32"]]],[R[64]]]],[6,"PPart",E,E,N,N],[17,"ZERO_QPART",E,E,N,N],[11,"new",E,E,33,[[["u32"]],["self"]]],[11,R[63],E,E,33,[[["usize"],["self"],["i32"]],[R[64]]]],[11,R[65],E,E,33,[[["self"],[R[64]]],[[R[4],["usize"]],["usize"]]]],[11,R[66],E,E,33,[[["self"],[R[64]]],["usize"]]],[11,"compute_ppart",E,E,33,[[["self"],["i32"]]]],[11,"compute_qpart",E,E,33,[[["self"],["i32"]]]],[11,R[67],E,E,33,[[["self"],["i32"]]]],[11,"generate_basis_2",E,E,33,[[["self"],["i32"]]]],[11,"try_beps_pn",E,E,33,[[["u32"],["self"]],[R[4]]]],[11,"beps_pn",E,E,33,[[["u32"],["self"]]]],[11,"multiply_qpart",E,E,33,[[["u32"],["self"],[R[64]]],["vec"]]],[11,R[68],E,E,33,[[[R[33]],["u32"],[R[64]],["self"]]]],[11,"prime",E,E,34,[[["self"]],["u32"]]],[11,"new",E,E,34,[[["u32"],["vec"]],["ppartmultiplier"]]],[11,"update",E,E,34,[[["self"]],["bool"]]],[11,"decompose_basis_element_qpart",E,E,33,[[["usize"],["self"],["i32"]],["vec"]]],[11,"decompose_basis_element_ppart",E,E,33,[[["usize"],["self"],["i32"]],["vec"]]],[11,"increment_p_part",E,"Returns `true` if the new element is not within the bounds",33,[[["vec"]],["bool"]]],[0,"field",R[57],E,N,N],[3,"Field",R[186],E,N,N],[12,"prime",E,E,35,N],[11,"new",E,E,35,[[["u32"]],["self"]]],[17,"_IMPL_DESERIALIZE_FOR_MilnorProfileOption",R[57],E,N,N],[17,"_IMPL_DESERIALIZE_FOR_AlgebraSpec",E,E,N,N],[8,"Algebra",E,"A graded algebra over F_p, finite dimensional in each…",N,N],[10,R[224],E,"The \"type\" of the algebra, which is \"adem\" or \"milnor\".…",36,[[["self"]],["str"]]],[10,"prime",E,"Returns the prime the algebra is over.",36,[[["self"]],["u32"]]],[11,"name",E,E,36,[[["self"]],["str"]]],[10,R[79],E,"Computes the list of basis elements up to and including…",36,[[["self"],["i32"]]]],[10,R[26],E,R[232],36,[[["self"],["i32"]],["usize"]]],[10,R[226],E,"Computes the product `r * s` of the two basis elements,…",36,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,R[235],E,E,36,[[[R[33]],["u32"],["i32"],["usize"],[R[33]],["self"]]]],[11,R[236],E,E,36,[[[R[33]],["u32"],["i32"],[R[33]],["usize"],["self"]]]],[11,R[237],E,E,36,[[[R[33]],["u32"],["i32"],[R[33]],["self"]]]],[11,R[225],E,"A filtration one element in Ext(k, k) is the same as an…",36,[[["self"]],["vec"]]],[11,R[227],E,R[233],36,[[["self"],["value"]]]],[11,R[229],E,E,36,[[["usize"],["self"],["i32"]],["value"]]],[11,R[228],E,E,36,[[["str"],["self"]],[["str"],[R[72],["str"]]]]],[11,R[147],E,R[234],36,[[["usize"],["self"],["i32"]],[R[23]]]],[11,R[148],E,"Converts an element into a string for display.",36,[[[R[33]],["self"],["i32"]],[R[23]]]],[11,R[81],E,"Given a degree `degree`, the function returns a list of…",36,[[["self"],["i32"]],[["usize"],["vec",["usize"]]]]],[11,R[230],E,"Given a non-generator basis element of the algebra,…",36,[[["usize"],["self"],["i32"]],["vec"]]],[11,R[231],E,"Get any relations that the algebra wants checked to ensure…",36,[[["self"],["i32"]],[["vec",["vec"]],["vec"]]]],[8,R[277],E,E,N,N],[10,R[196],E,"This function decomposes an element of the algebra as a…",37,[[["usize"],["self"],["i32"]],["vec"]]],[10,R[197],E,"Expresses Delta(x) as sum_j (A_{ij} (x) B_{ij}). Here x…",37,[[["usize"],["self"],["i32"]],["vec"]]],[11,R[90],E,E,26,[[[R[23]],["value"]],[["box",["error"]],[R[69]],[R[0],[R[69],"box"]]]]],[0,"change_of_basis",R[24],E,N,N],[5,"adem_to_milnor_on_basis","rust_ext::change_of_basis",E,N,[[[R[33]],["u32"],["i32"],[R[70]],[R[71]],["usize"]]]],[5,"adem_to_milnor",E,E,N,[[[R[33]],["u32"],["i32"],[R[70]],[R[71]],[R[33]]]]],[5,"milnor_to_adem_on_basis",E,E,N,[[[R[33]],["u32"],["i32"],[R[70]],[R[71]],["usize"]]]],[5,"milnor_to_adem_on_basis_2",E,E,N,[[[R[33]],["u32"],["i32"],[R[70]],[R[71]],["usize"]]]],[5,"milnor_to_adem_on_basis_generic",E,E,N,[[[R[33]],["u32"],["i32"],[R[70]],[R[71]],["usize"]]]],[5,"milnor_to_adem",E,E,N,[[[R[33]],["u32"],["i32"],[R[70]],[R[71]],[R[33]]]]],[5,"adem_q",E,E,N,[[[R[33]],["u32"],[R[70]],[R[71]]]]],[5,"adem_plist",E,E,N,[[[R[33]],["u32"],["i32"],[R[70]],[R[71]],["vec",["u32"]]]]],[0,"steenrod_parser",R[24],E,N,N],[3,R[278],R[187],E,N,N],[12,"info",E,E,38,N],[4,R[279],E,E,N,N],[13,"AList",E,E,39,N],[13,"PList",E,E,39,N],[13,"P",E,E,39,N],[13,"Q",E,E,39,N],[4,R[280],E,E,N,N],[13,"Product",E,E,40,N],[13,"Sum",E,E,40,N],[13,"BasisElt",E,E,40,N],[13,"Scalar",E,E,40,N],[4,R[281],E,E,N,N],[13,"Act",E,E,41,N],[13,"Sum",E,E,41,N],[13,"ModuleBasisElt",E,E,41,N],[4,R[282],E,E,N,N],[13,"Bockstein",E,E,42,N],[13,"Sq",E,E,42,N],[5,"digits",E,E,N,[[["str"]],[["str"],[R[72],["str","u32"]],["u32"]]]],[5,"comma_separated_integer_list",E,E,N,[[["str"]],[[R[72],["str","vec"]],["str"],["vec",["u32"]]]]],[5,"comma_separated_sequence",E,E,N,[[["str"]],[[R[72],["str","vec"]],["str"],["vec",["u32"]]]]],[5,"space_separated_integer_list",E,E,N,[[["str"]],[[R[72],["str","vec"]],["str"],["vec",["u32"]]]]],[5,"space_separated_sequence",E,E,N,[[["str"]],[[R[72],["str","vec"]],["str"],["vec",["u32"]]]]],[5,"bockstein_b",E,E,N,[[["str"]],[[R[72],["str",R[73]]],["str"],[R[73]]]]],[5,"sq_digits",E,E,N,[[["str"]],[[R[72],["str",R[73]]],["str"],[R[73]]]]],[5,"space_separated_bockstein_or_sq_list",E,E,N,[[["str"]],[["str"],["vec",[R[73]]],[R[72],["str","vec"]]]]],[5,"space_separated_bockstein_or_sq_sequence",E,E,N,[[["str"]],[["str"],["vec",[R[73]]],[R[72],["str","vec"]]]]],[5,"algebra_generator",E,E,N,[[["str"]],[["str"],[R[72],["str",R[74]]],[R[74]]]]],[5,"scalar",E,E,N,[[["str"]],[["str"],[R[72],["str",R[74]]],[R[74]]]]],[5,"algebra_parens",E,E,N,[[["str"]],[["str"],[R[72],["str",R[74]]],[R[74]]]]],[5,"algebra_factor",E,E,N,[[["str"]],[["str"],[R[72],["str",R[74]]],[R[74]]]]],[5,"algebra_term",E,E,N,[[["str"]],[["str"],[R[72],["str",R[74]]],[R[74]]]]],[5,"algebra_expr",E,E,N,[[["str"]],[["str"],[R[72],["str",R[74]]],[R[74]]]]],[5,"module_generator",E,E,N,[[["str"]],[["str"],[R[72],["str",R[75]]],[R[75]]]]],[5,"module_parens",E,E,N,[[["str"]],[["str"],[R[72],["str",R[75]]],[R[75]]]]],[5,"module_factor",E,E,N,[[["str"]],[["str"],[R[72],["str",R[75]]],[R[75]]]]],[5,"module_term",E,E,N,[[["str"]],[["str"],[R[72],["str",R[75]]],[R[75]]]]],[5,"module_expr",E,E,N,[[["str"]],[["str"],[R[72],["str",R[75]]],[R[75]]]]],[5,"parse_algebra",E,E,N,[[["str"]],[["box",["error"]],[R[0],[R[74],"box"]],[R[74]]]]],[5,"parse_module",E,E,N,[[["str"]],[[R[0],[R[75],"box"]],[R[75]],["box",["error"]]]]],[0,"steenrod_evaluator",R[24],E,N,N],[3,R[283],R[188],E,N,N],[12,R[76],E,E,43,N],[12,R[77],E,E,43,N],[3,R[306],E,E,N,N],[3,R[284],E,E,N,N],[12,"name",E,E,44,N],[5,"evaluate_algebra_adem",E,E,N,[[[R[70]],[R[71]],["str"]],[[R[0],["box"]],["box",["error"]]]]],[5,"evaluate_algebra_milnor",E,E,N,[[[R[70]],[R[71]],["str"]],[[R[0],["box"]],["box",["error"]]]]],[5,"evaluate_algebra_tree",E,E,N,[[[R[70]],[R[71]],[R[74]]],[[R[0],["box"]],["box",["error"]]]]],[5,"evaluate_algebra_tree_helper",E,E,N,[[["i32"],[R[70]],[R[71]],[R[4],["i32"]],[R[74]]],[[R[0],["box"]],["box",["error"]]]]],[5,"evaluate_basis_element",E,E,N,[[[R[249]],["i32"],[R[70]],[R[71]],[R[4],["i32"]]],[[R[0],["box"]],["box",["error"]]]]],[5,"evaluate_module",E,E,N,[[["str"],["m"],[R[70]],[R[71]],[R[78]]],[[R[0],["box"]],["box",["error"]]]]],[5,"evaluate_module_tree",E,E,N,[[["m"],[R[70]],[R[71]],[R[78]],[R[75]]],[[R[0],["box"]],["box",["error"]]]]],[5,"evaluate_module_tree_helper",E,E,N,[[["i32"],[R[75]],["m"],[R[70]],[R[71]],[R[78]],[R[4],["i32"]]],[[R[0],["box"]],["box",["error"]]]]],[5,"evaluate_module_basis_element",E,E,N,[[["i32"],[R[23]],["m"],[R[70]],[R[71]],[R[78]],[R[4],["i32"]]],[[R[0],["box"]],["box",["error"]]]]],[5,"bockstein_or_sq_to_adem_basis_elt",E,E,N,[[["i32"],[R[73]]],[R[54]]]],[5,"evaluate_p_or_b_list",E,E,N,[[[R[71]]]]],[11,"new",E,E,43,[[["u32"]],["self"]]],[11,R[79],E,E,43,[[["self"],["i32"]]]],[11,"evaluate_adem_to_string",E,E,43,[[["str"],["self"]],[[R[0],[R[23],"box"]],[R[23]],["box",["error"]]]]],[11,"evaluate_milnor_to_string",E,E,43,[[["str"],["self"]],[[R[0],[R[23],"box"]],[R[23]],["box",["error"]]]]],[11,"evaluate_adem",E,E,43,[[["str"],["self"]],[[R[0],["box"]],["box",["error"]]]]],[11,"evaluate_milnor",E,E,43,[[["str"],["self"]],[[R[0],["box"]],["box",["error"]]]]],[0,"module",R[24],E,N,N],[3,R[84],R[88],E,N,N],[12,R[80],E,E,45,N],[12,"name",E,E,45,N],[12,R[87],E,E,45,N],[12,R[82],E,E,45,N],[12,"actions",E,E,45,N],[3,R[86],E,R[117],N,N],[12,R[80],E,E,46,N],[12,"min",E,E,46,N],[12,R[118],E,E,46,N],[12,"max",E,E,46,N],[3,R[113],E,E,N,N],[12,R[80],E,E,47,N],[12,"source",E,E,47,N],[12,"target",E,E,47,N],[12,R[83],E,E,47,N],[3,R[85],E,E,N,N],[12,"name",E,E,48,N],[12,R[11],E,E,48,N],[12,R[81],E,E,48,N],[12,R[91],E,E,48,N],[12,"map",E,E,48,N],[12,R[92],E,E,48,N],[3,R[96],E,R[97],N,N],[12,"module",E,E,49,N],[12,R[98],E,E,49,N],[3,R[99],E,R[100],N,N],[12,"module",E,E,50,N],[12,R[101],E,E,50,N],[12,R[102],E,E,50,N],[3,R[108],E,E,N,N],[12,R[80],E,E,51,N],[12,"name",E,E,51,N],[12,R[11],E,E,51,N],[12,R[21],E,E,51,N],[12,R[82],E,E,51,N],[12,R[109],E,E,51,N],[12,"table",E,E,51,N],[3,R[105],E,E,N,N],[12,"num_gens",E,E,52,N],[12,R[106],E,E,52,N],[12,R[107],E,E,52,N],[3,R[115],E,E,N,N],[12,"left",E,E,53,N],[12,"right",E,E,53,N],[12,R[83],E,E,53,N],[3,R[116],E,E,N,N],[12,R[80],E,E,54,N],[12,R[11],E,E,54,N],[12,R[156],E,E,54,N],[12,R[83],E,E,54,N],[3,R[285],E,E,N,N],[12,"module_type",E,E,55,N],[3,R[286],E,E,N,N],[12,"relation",E,E,56,N],[12,"value",E,E,56,N],[4,R[287],E,E,N,N],[13,R[84],E,E,57,N],[13,R[85],E,E,57,N],[13,R[86],E,E,57,N],[0,"finite_dimensional_module",E,E,N,N],[3,"FiniteDimensionalModule","rust_ext::module::finite_dimensional_module",E,N,N],[12,R[80],E,E,45,N],[12,"name",E,E,45,N],[12,R[87],E,E,45,N],[12,R[82],E,E,45,N],[12,"actions",E,E,45,N],[11,"test_equal",R[88],E,45,[[["self"]],[[R[0],[R[23]]],[R[23]]]]],[11,"new",E,E,45,[[[R[23]],["arc",[R[69]]],[R[69]],["usize"],["bivec",["usize"]]],["self"]]],[11,"set_basis_element_name",E,E,45,[[[R[23]],["usize"],["i32"],["self"]]]],[11,R[93],E,E,45,[[["value"]]]],[11,"allocate_actions",E,E,45,[[["arc"],["bivec"]],[["bivec",["vec"]],["bivec",["bivec"]]]]],[11,"set_action_vector",E,E,45,[[["usize"],["i32"],[R[33]],["self"]]]],[11,"set_action",E,E,45,[[["u32"],["usize"],["i32"],["vec",["u32"]],["self"]]]],[11,"action",E,R[89],45,[[["usize"],["i32"],["self"]],[R[33]]]],[11,"action_mut",E,R[89],45,[[["usize"],["i32"],["self"]],[R[33]]]],[11,R[90],E,E,45,[[["value"],["arc",[R[69]]],[R[69]]],["self"]]],[11,"parse_action",E,E,45,[[[R[78]],["self"],["str"]]]],[11,"parse_element",E,E,45,[[["str"]],[[R[72],["str"]],["str"]]]],[11,"check_validity",E,E,45,[[["self"],["i32"]],[[R[0],["box"]],["box",["error"]]]]],[11,"extend_actions",E,E,45,[[["self"],["i32"]]]],[11,"minimal_actions_to_json",E,E,45,[[["self"]],["value"]]],[11,"to_minimal_json",E,E,45,[[["self"]],["value"]]],[11,"actions_to_json",E,E,45,[[["self"]],["value"]]],[0,"finitely_presented_module",E,E,N,N],[3,R[288],R[189],E,N,N],[12,R[94],E,E,58,N],[12,R[95],E,E,58,N],[3,"FinitelyPresentedModule",E,E,N,N],[12,"name",E,E,48,N],[12,R[11],E,E,48,N],[12,R[81],E,E,48,N],[12,R[91],E,E,48,N],[12,"map",E,E,48,N],[12,R[92],E,E,48,N],[11,"new",R[88],E,48,[[[R[23]],["arc",[R[69]]],[R[69]],["i32"]],["self"]]],[11,R[110],E,E,48,[[[R[23]],["i32"],["vec",[R[23]]],["self"]]]],[11,"add_relations",E,E,48,[[[R[45]],["self"],["i32"]]]],[11,R[93],E,E,48,[[["value"]]]],[11,R[90],E,E,48,[[["value"],["arc",[R[69]]],[R[69]]],["self"]]],[11,"relations_to_json",E,E,48,[[["self"]],["value"]]],[11,R[94],E,E,48,[[["usize"],["self"],["i32"]],["isize"]]],[11,R[95],E,E,48,[[["usize"],["self"],["i32"]],["usize"]]],[0,"truncated_module",E,E,N,N],[3,R[96],"rust_ext::module::truncated_module",R[97],N,N],[12,"module",E,E,49,N],[12,R[98],E,E,49,N],[11,"new",R[88],E,49,[[["i32"],["arc"]],["self"]]],[0,"quotient_module",E,E,N,N],[3,R[99],"rust_ext::module::quotient_module",R[100],N,N],[12,"module",E,E,50,N],[12,R[101],E,E,50,N],[12,R[102],E,E,50,N],[11,"new",R[88],E,50,[[["arc"]],["self"]]],[11,"quotient",E,E,50,[[[R[33]],["self"],["i32"]]]],[11,"quotient_basis_elements",E,E,50,[[["self"],["i32"]]]],[11,"quotient_vectors",E,E,50,[[["vec",[R[33]]],[R[33]],["i32"],["self"]]]],[11,"flush",E,E,50,[[["self"],["i32"]]]],[11,"quotient_all",E,E,50,[[["self"],["i32"]]]],[11,"act_on_original_basis",E,E,50,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,"reduce",E,E,50,[[[R[33]],["self"],["i32"]]]],[11,"old_basis_to_new",E,E,50,[[[R[33]],["i32"],[R[33]],["self"]]]],[0,"free_module",E,E,N,N],[3,R[289],R[190],E,N,N],[12,"operation_degree",E,E,59,N],[12,"operation_index",E,E,59,N],[12,R[103],E,E,59,N],[12,R[104],E,E,59,N],[3,R[105],E,E,N,N],[12,"num_gens",E,E,52,N],[12,R[106],E,E,52,N],[12,R[107],E,E,52,N],[3,R[108],E,E,N,N],[12,R[80],E,E,51,N],[12,"name",E,E,51,N],[12,R[11],E,E,51,N],[12,R[21],E,E,51,N],[12,R[82],E,E,51,N],[12,R[109],E,E,51,N],[12,"table",E,E,51,N],[11,"new",R[88],E,51,[[[R[23]],["arc",[R[69]]],[R[69]],["i32"]],["self"]]],[11,R[174],E,E,51,[[["self"]],["i32"]]],[11,"number_of_gens_in_degree",E,E,51,[[["self"],["i32"]],["usize"]]],[11,"construct_table",E,E,51,[[["self"],["i32"]]]],[11,"dimension_with_table",E,E,51,[[[R[111]]],["usize"]]],[11,R[110],E,E,51,[[[R[124],["i32"]],[R[4],["vec"]],[R[111]],["i32"],["usize"],["vec",[R[23]]],["self"]]]],[11,"add_generators_to_table",E,E,51,[[[R[111]],["i32"],["usize"],["self"]]]],[11,"generator_offset",E,E,51,[[["usize"],["self"],["i32"]],["usize"]]],[11,"operation_generator_to_index",E,E,51,[[["usize"],["i32"],["self"]],["usize"]]],[11,"operation_generator_pair_to_idx",E,E,51,[[["self"],[R[112]]],["usize"]]],[11,"index_to_op_gen",E,E,51,[[["usize"],["self"],["i32"]],[R[112]]]],[11,"element_to_json",E,E,51,[[[R[33]],["self"],["i32"]],["value"]]],[11,"add_generators_immediate",E,E,51,[[[R[4],["vec"]],["usize"],["i32"],["vec",[R[23]]],["self"]]]],[11,R[123],E,E,51,[[["self"],["i32"]]]],[11,"get_degrees_with_gens",E,E,51,[[["self"],["i32"]],[["i32"],["vec",["i32"]]]]],[0,"hom_module",E,E,N,N],[3,R[113],"rust_ext::module::hom_module",E,N,N],[12,R[80],E,E,47,N],[12,"source",E,E,47,N],[12,"target",E,E,47,N],[12,R[83],E,E,47,N],[11,"new",R[88],E,47,[[["arc",[R[114]]],[R[114]],["arc"]],["self"]]],[11,"source",E,E,47,[[["self"]],[["arc",[R[114]]],[R[114]]]]],[11,"target",E,E,47,[[["self"]],["arc"]]],[11,"element_to_homomorphism",E,E,47,[[[R[33]],["self"],["i32"]],[R[133]]]],[11,"evaluate_basis_map_on_element",E,E,47,[[[R[33]],["u32"],["i32"],["usize"],[R[33]],["self"]]]],[0,"tensor_module",E,E,N,N],[3,R[115],"rust_ext::module::tensor_module",E,N,N],[12,"left",E,E,53,N],[12,"right",E,E,53,N],[12,R[83],E,E,53,N],[11,"new",R[88],E,53,[[["arc"],["arc"]],["self"]]],[11,"seek_module_num",E,E,53,[[["usize"],["self"],["i32"]],["i32"]]],[11,"offset",E,E,53,[[["self"],["i32"]],["usize"]]],[11,"act_helper",E,E,53,[[[R[33]],["u32"],["i32"],["usize"],[R[33]],["self"]]]],[0,"sum_module",E,E,N,N],[3,R[116],"rust_ext::module::sum_module",E,N,N],[12,R[80],E,E,54,N],[12,R[11],E,E,54,N],[12,R[156],E,E,54,N],[12,R[83],E,E,54,N],[11,"new",R[88],E,54,[[["arc",[R[69]]],[R[69]],["arc"],["vec",["arc"]],["i32"]],["self"]]],[11,"get_module_num",E,E,54,[[["usize"],["self"],["i32"]],["usize"]]],[11,"offset",E,E,54,[[["usize"],["self"],["i32"]],["usize"]]],[0,"rpn",E,E,N,N],[3,R[86],R[191],R[117],N,N],[12,R[80],E,E,46,N],[12,"min",E,E,46,N],[12,R[118],E,E,46,N],[12,"max",E,E,46,N],[3,"RPSpec",E,E,N,N],[12,"min",E,E,60,N],[12,R[118],E,E,60,N],[12,"max",E,E,60,N],[5,"coef_adem",E,E,N,[[["usize"],["i32"],[R[71]]],["bool"]]],[5,"coef_milnor",E,E,N,[[["usize"],["i32"],[R[70]]],["bool"]]],[17,"_IMPL_DESERIALIZE_FOR_RPSpec",E,E,N,N],[11,"new",R[88],E,46,[[["arc",[R[69]]],["i32"],[R[69]],[R[4],["i32"]],["bool"]],["self"]]],[11,R[90],E,E,46,[[["value"],["arc",[R[69]]],[R[69]]],[[R[0],["box"]],["box",["error"]]]]],[0,"homomorphism",E,E,N,N],[3,R[121],R[122],E,N,N],[12,"source",E,E,61,N],[12,"target",E,E,61,N],[12,"outputs",E,E,61,N],[12,"kernel",E,E,61,N],[12,R[120],E,E,61,N],[12,R[11],E,E,61,N],[12,R[21],E,E,61,N],[12,R[119],E,E,61,N],[3,R[125],E,E,N,N],[12,"source",E,E,62,N],[12,"target",E,E,62,N],[12,R[119],E,E,62,N],[3,R[130],E,R[131],N,N],[12,"source",E,E,63,N],[12,"target",E,E,63,N],[12,"map",E,E,63,N],[12,"kernel",E,E,63,N],[12,R[120],E,E,63,N],[3,R[126],E,E,N,N],[12,"lock",E,E,64,N],[12,"source",E,E,64,N],[12,"target",E,E,64,N],[12,R[119],E,E,64,N],[12,R[369],E,E,64,N],[12,R[127],E,E,64,N],[12,"kernels",E,E,64,N],[3,R[143],E,E,N,N],[12,"source",E,E,65,N],[12,"target",E,E,65,N],[12,"map",E,E,65,N],[3,R[141],E,E,N,N],[12,"source",E,E,66,N],[12,R[142],E,E,66,N],[3,R[134],E,E,N,N],[12,"f",E,E,67,N],[12,"s",E,E,67,N],[12,T,E,E,67,N],[3,R[135],E,E,N,N],[12,"f",E,E,68,N],[12,"s",E,E,68,N],[12,T,E,E,68,N],[3,R[138],E,E,N,N],[12,"f",E,E,69,N],[12,"s",E,E,69,N],[12,T,E,E,69,N],[3,R[139],E,E,N,N],[12,"f",E,E,70,N],[12,"s",E,E,70,N],[12,T,E,E,70,N],[0,"free_module_homomorphism",E,E,N,N],[3,R[121],"rust_ext::module::homomorphism::free_module_homomorphism",E,N,N],[12,"source",E,E,61,N],[12,"target",E,E,61,N],[12,"outputs",E,E,61,N],[12,"kernel",E,E,61,N],[12,R[120],E,E,61,N],[12,R[11],E,E,61,N],[12,R[21],E,E,61,N],[12,R[119],E,E,61,N],[11,"new",R[122],E,61,[[["arc"],["arc",[R[114]]],[R[114]],["i32"]],["self"]]],[11,R[119],E,E,61,[[["self"]],["i32"]]],[11,R[11],E,E,61,[[["self"]],["i32"]]],[11,"output",E,E,61,[[["usize"],["self"],["i32"]],[R[33]]]],[11,"extend_by_zero_safe",E,E,61,[[["self"],["i32"]]]],[11,R[123],E,E,61,[[[R[124]],["self"],["i32"]]]],[11,"add_generators_from_big_vector",E,E,61,[[[R[33]],["i32"],[R[124]],["self"]]]],[11,"add_generators_from_matrix_rows",E,E,61,[[["i32"],[R[124]],[R[45]],["self"]]]],[11,"apply_to_generator",E,E,61,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,"apply_to_basis_element_with_table",E,E,61,[[[R[33]],["u32"],["i32"],[R[111]],["usize"],["self"]]]],[11,R[145],E,E,61,[[[R[45]],["self"],["i32"]]]],[11,"get_matrix_with_table",E,"Arguments * `degree` - The internal degree of the target…",61,[[["i32"],[R[111]],[R[45]],["self"]]]],[11,"lock",E,E,61,[[["self"]],[[R[124],["i32"]],["i32"]]]],[11,"set_kernel",E,E,61,[[["i32"],[R[124]],[R[41]],["self"]]]],[11,"set_quasi_inverse",E,E,61,[[["i32"],[R[124]],["self"],[R[50]]]]],[0,"generic_zero_homomorphism",E,E,N,N],[3,R[125],"rust_ext::module::homomorphism::generic_zero_homomorphism",E,N,N],[12,"source",E,E,62,N],[12,"target",E,E,62,N],[12,R[119],E,E,62,N],[11,"new",R[122],E,62,[[["i32"],["arc"],["arc"]],["self"]]],[0,"bounded_module_homomorphism",E,E,N,N],[3,R[126],"rust_ext::module::homomorphism::bounded_module_homomorphism",E,N,N],[12,"lock",E,E,64,N],[12,"source",E,E,64,N],[12,"target",E,E,64,N],[12,R[119],E,E,64,N],[12,R[369],E,E,64,N],[12,R[127],E,E,64,N],[12,"kernels",E,E,64,N],[11,"from",R[122],E,64,[[["f"]],["self"]]],[11,"replace_source",E,"This function replaces the source of the…",64,[[["arc"],[R[128]]],[[R[128]],[R[129]]]]],[11,"replace_target",E,"See `replace_source`",64,[[[R[128]],["arc"]],[[R[129]],[R[128]]]]],[0,"hom_pullback",E,E,N,N],[3,R[130],"rust_ext::module::homomorphism::hom_pullback",R[131],N,N],[12,"source",E,E,63,N],[12,"target",E,E,63,N],[12,"map",E,E,63,N],[12,"kernel",E,E,63,N],[12,R[120],E,E,63,N],[11,"new",R[122],E,63,[[["arc",[R[132]]],[R[132]],[R[133],[R[114]]],["arc",[R[133]]]],["self"]]],[0,"truncated_homomorphism",E,E,N,N],[3,R[134],"rust_ext::module::homomorphism::truncated_homomorphism",E,N,N],[12,"f",E,E,67,N],[12,"s",E,E,67,N],[12,T,E,E,67,N],[3,R[135],E,E,N,N],[12,"f",E,E,68,N],[12,"s",E,E,68,N],[12,T,E,E,68,N],[11,"new",R[122],E,67,[[[R[136]],["arc"],[R[136]],["arc",[R[136]]],["arc",[R[136]]]],["self"]]],[11,R[137],E,E,67,[[["self"]],["i32"]]],[11,"new",E,E,68,[[[R[136]],["arc"],["arc",[R[136]]],["arc"]],["self"]]],[11,R[137],E,E,68,[[["self"]],["i32"]]],[0,"quotient_homomorphism",E,E,N,N],[3,R[138],"rust_ext::module::homomorphism::quotient_homomorphism",E,N,N],[12,"f",E,E,69,N],[12,"s",E,E,69,N],[12,T,E,E,69,N],[3,R[139],E,E,N,N],[12,"f",E,E,70,N],[12,"s",E,E,70,N],[12,T,E,E,70,N],[11,"new",R[122],E,69,[[["arc"],[R[140]],[R[140]],["arc",[R[140]]],["arc",[R[140]]]],["self"]]],[11,"new",E,E,70,[[["arc"],[R[140]],["arc"],["arc",[R[140]]]],["self"]]],[0,"fp_module_homomorphism",E,E,N,N],[3,R[141],"rust_ext::module::homomorphism::fp_module_homomorphism",E,N,N],[12,"source",E,E,66,N],[12,R[142],E,E,66,N],[8,R[144],E,E,N,N],[10,R[95],E,E,71,[[["usize"],["self"],["i32"]],["usize"]]],[10,R[81],E,E,71,[[["self"]],["arc"]]],[0,"finite_module_homomorphism",R[122],E,N,N],[3,R[143],R[192],E,N,N],[12,"source",E,E,65,N],[12,"target",E,E,65,N],[12,"map",E,E,65,N],[4,"FMHI",E,E,N,N],[13,"FD",E,E,72,N],[13,"FP",E,E,72,N],[13,"RP",E,E,72,N],[8,R[144],R[122],E,N,N],[10,R[95],E,E,71,[[["usize"],["self"],["i32"]],["usize"]]],[10,R[81],E,E,71,[[["self"]],["arc"]]],[8,R[290],E,E,N,N],[16,"Source",E,E,73,N],[16,"Target",E,E,73,N],[18,"CUSTOM_QI",E,E,73,N],[10,"source",E,E,73,[[["self"]],["arc"]]],[10,"target",E,E,73,[[["self"]],["arc"]]],[10,R[119],E,E,73,[[["self"]],["i32"]]],[10,R[198],E,"Calling this function when `input_idx <…",73,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[10,"kernel",E,E,73,[[["self"],["i32"]],[R[41]]]],[10,R[120],E,E,73,[[["self"],["i32"]],[R[50]]]],[10,R[199],E,E,73,[[["self"],["i32"]]]],[11,"apply",E,E,73,[[[R[33]],["u32"],["i32"],[R[33]],["self"]]]],[11,"prime",E,E,73,[[["self"]],["u32"]]],[11,R[11],E,E,73,[[["self"]],["i32"]]],[11,"image",E,"Returns the image of the module homomorphism in degree…",73,[[["self"],["i32"]],[R[4]]]],[11,R[164],E,"A version of kernel_and_quasi_inverse that, in fact,…",73,[[["self"],["i32"]],[R[50]]]],[11,"kernel_and_quasi_inverse",E,E,73,[[["self"],["i32"]]]],[11,R[145],E,"The (sliced) dimensions of `matrix` must be equal to…",73,[[[R[45]],["self"],["i32"]]]],[11,R[200],E,E,73,[[[R[33]],["i32"],[R[33]],["self"]]]],[8,R[291],E,E,N,N],[10,R[202],E,E,74,[[["i32"],["arc"],["arc"]],["self"]]],[8,R[292],R[88],E,N,N],[10,R[21],E,"`max_degree` is the a degree such that if t >…",75,[[["self"]],["i32"]]],[11,R[146],E,E,75,[[["self"]],["usize"]]],[11,"to_fd_module",E,E,75,[[["self"]],[R[150]]]],[8,"Module",E,E,N,N],[10,R[80],E,E,76,[[["self"]],[["arc",[R[69]]],[R[69]]]]],[10,"name",E,E,76,[[["self"]],["str"]]],[10,R[11],E,E,76,[[["self"]],["i32"]]],[11,R[79],E,E,76,[[["self"],["i32"]]]],[10,R[26],E,E,76,[[["self"],["i32"]],["usize"]]],[10,R[238],E,E,76,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[10,R[147],E,E,76,[[["usize"],["self"],["i32"]],[R[23]]]],[11,"is_unit",E,E,76,[[["self"]],["bool"]]],[11,"prime",E,E,76,[[["self"]],["u32"]]],[11,R[239],E,"Whether act_on_basis_borrow is available.",76,[[["self"]],["bool"]]],[11,R[240],E,"Returns a borrow of the value of the corresponding action…",76,[[["usize"],["i32"],["self"]],[R[33]]]],[11,"act",E,E,76,[[[R[33]],["u32"],["i32"],["usize"],[R[33]],["self"]]]],[11,R[241],E,E,76,[[[R[33]],["u32"],["i32"],[R[33]],["self"]]]],[11,R[242],E,E,76,[[["self"],["i32"]],[R[23]]]],[11,R[148],E,E,76,[[[R[33]],["self"],["i32"]],[R[23]]]],[8,R[293],E,E,N,N],[10,R[152],E,E,77,[[["i32"],["arc",[R[69]]],[R[69]]],["self"]]],[11,R[90],E,E,57,[[["value"],["arc",[R[69]]],[R[69]]],[["box",["error"]],[R[0],["box"]]]]],[11,"into_real_projective_space",E,E,57,[[],[[R[4],[R[149]]],[R[149]]]]],[11,"into_fp_module",E,E,57,[[],[[R[243]],[R[4],[R[243]]]]]],[11,"into_fd_module",E,E,57,[[],[[R[4],[R[150]]],[R[150]]]]],[0,R[151],R[24],E,N,N],[3,R[160],R[159],E,N,N],[12,R[156],E,E,78,N],[12,R[152],E,E,78,N],[12,R[153],E,E,78,N],[3,R[161],E,E,N,N],[12,R[156],E,E,79,N],[12,R[152],E,E,79,N],[12,R[153],E,E,79,N],[12,R[155],E,E,79,N],[12,R[154],E,E,79,N],[3,R[162],E,E,N,N],[12,"lock",E,E,80,N],[12,"left_cc",E,E,80,N],[12,R[163],E,E,80,N],[12,R[156],E,E,80,N],[12,R[152],E,E,80,N],[12,R[153],E,E,80,N],[3,R[294],E,"`chain_maps` is required to be non-empty",N,N],[12,"s_shift",E,E,81,N],[12,R[154],E,E,81,N],[4,R[295],E,E,N,N],[13,"Homological",E,E,82,N],[13,"Cohomological",E,E,82,N],[0,"hom_complex",E,E,N,N],[3,R[296],R[193],E,N,N],[12,"lock",E,E,83,N],[12,R[157],E,E,83,N],[12,R[155],E,E,83,N],[12,R[156],E,E,83,N],[12,R[152],E,E,83,N],[12,R[153],E,E,83,N],[3,R[297],E,E,N,N],[12,R[157],E,E,84,N],[12,R[155],E,E,84,N],[12,"lock",E,E,84,N],[12,"source",E,E,84,N],[12,"target",E,E,84,N],[12,R[127],E,E,84,N],[6,"SHM",E,E,N,N],[11,"new",E,E,83,[[[R[158]],["arc",[R[158]]],["arc"]],["self"]]],[11,R[157],E,E,83,[[["self"]],["arc"]]],[11,R[155],E,E,83,[[["self"]],[[R[158]],["arc",[R[158]]]]]],[0,"finite_chain_complex",R[159],E,N,N],[3,R[160],"rust_ext::chain_complex::finite_chain_complex",E,N,N],[12,R[156],E,E,78,N],[12,R[152],E,E,78,N],[12,R[153],E,E,78,N],[3,R[161],E,E,N,N],[12,R[156],E,E,79,N],[12,R[152],E,E,79,N],[12,R[153],E,E,79,N],[12,R[155],E,E,79,N],[12,R[154],E,E,79,N],[11,R[21],R[159],E,78,[[["self"]],["i32"]]],[11,"pop",E,E,78,[[["self"]]]],[11,"ccdz",E,E,78,[[["arc"]],["self"]]],[0,"tensor_product_chain_complex",E,E,N,N],[3,R[162],R[165],E,N,N],[12,"lock",E,E,80,N],[12,"left_cc",E,E,80,N],[12,R[163],E,E,80,N],[12,R[156],E,E,80,N],[12,R[152],E,E,80,N],[12,R[153],E,E,80,N],[3,R[298],E,E,N,N],[12,"left_cc",E,E,85,N],[12,R[163],E,E,85,N],[12,"source_s",E,E,85,N],[12,"lock",E,E,85,N],[12,"source",E,E,85,N],[12,"target",E,E,85,N],[12,R[127],E,E,85,N],[6,"STM",E,E,N,N],[6,"TensorSquareCC",E,E,N,N],[11,"new",R[159],E,80,[[["arc"],["arc"]],["self"]]],[11,"left_cc",E,E,80,[[["self"]],["arc"]]],[11,R[163],E,E,80,[[["self"]],["arc"]]],[11,"swap",E,"This function sends a (x) b to b (x) a. This makes sense…",80,[[[R[33]],["u32"],[R[33]],["i32"],["self"]]]],[11,R[164],R[165],E,85,[[["self"],["i32"]]]],[8,"ResolutionComplex",R[159],E,N,N],[8,R[299],E,"A chain complex is defined to start in degree 0. The…",N,N],[16,"Module",E,E,86,N],[16,R[166],E,E,86,N],[11,"prime",E,E,86,[[["self"]],["u32"]]],[10,R[80],E,E,86,[[["self"]],[["arc",[R[69]]],[R[69]]]]],[10,R[11],E,E,86,[[["self"]],["i32"]]],[10,R[152],E,E,86,[[["self"]],["arc"]]],[10,"module",E,E,86,[[["u32"],["self"]],["arc"]]],[10,R[167],E,E,86,[[["u32"],["self"]],["arc"]]],[10,R[168],E,E,86,[[["u32"],["self"],["i32"]]]],[10,R[203],E,E,86,[[["u32"],["usize"],["i32"],["self"],["vec",["usize"]]]]],[10,R[204],E,E,86,[[["u32"],["self"],["i32"]],["vec"]]],[10,R[205],E,E,86,[[["u32"],["self"]],["i32"]]],[11,"compute_homology_through_bidegree",E,E,86,[[["u32"],["self"],["i32"]]]],[11,R[206],E,E,86,[[["u32"],["self"],["i32"]],["usize"]]],[11,R[169],E,E,86,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,"compute_homology",E,E,86,[[["u32"],["self"],["i32"]]]],[8,R[300],E,E,N,N],[16,"Module",E,E,87,N],[16,R[166],E,E,87,N],[11,"prime",E,E,87,[[["self"]],["u32"]]],[10,R[80],E,E,87,[[["self"]],[["arc",[R[69]]],[R[69]]]]],[10,R[11],E,E,87,[[["self"]],["i32"]]],[10,R[152],E,E,87,[[["self"]],["arc"]]],[10,"module",E,E,87,[[["u32"],["self"]],["arc"]]],[10,R[167],E,E,87,[[["u32"],["self"]],["arc"]]],[10,R[168],E,E,87,[[["u32"],["self"],["i32"]]]],[10,"set_cohomology_basis",E,E,87,[[["u32"],["usize"],["i32"],["self"],["vec",["usize"]]]]],[10,"cohomology_basis",E,E,87,[[["u32"],["self"],["i32"]],["vec"]]],[10,"max_cohomology_degree",E,E,87,[[["u32"],["self"]],["i32"]]],[11,"compute_cohomology_through_bidegree",E,E,87,[[["u32"],["self"],["i32"]]]],[11,"cohomology_dimension",E,E,87,[[["u32"],["self"],["i32"]],["usize"]]],[11,R[169],E,E,87,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,"compute_cohomology",E,E,87,[[["u32"],["self"],["i32"]]]],[8,R[301],E,"An augmented chain complex is a map of chain complexes C…",N,N],[16,"TargetComplex",E,E,88,N],[16,R[294],E,E,88,N],[10,"target",E,E,88,[[["self"]],["arc"]]],[10,R[207],E,E,88,[[["u32"],["self"]],["arc"]]],[8,R[302],E,"A bounded chain complex is a chain complex C for which C_s…",N,N],[10,"max_s",E,E,89,[[["self"]],["u32"]]],[0,R[170],R[24],E,N,N],[3,R[303],R[194],"ResolutionInner contains the data of the actual…",N,N],[12,"complex",E,E,90,N],[12,R[156],E,E,90,N],[12,R[152],E,E,90,N],[12,R[154],E,E,90,N],[12,R[153],E,E,90,N],[12,"kernels",E,E,90,N],[3,"Cocycle",E,E,N,N],[12,"s",E,E,91,N],[12,T,E,E,91,N],[12,"class",E,E,91,N],[12,"name",E,E,91,N],[3,"SelfMap",E,E,N,N],[12,"s",E,E,92,N],[12,T,E,E,92,N],[12,"name",E,E,92,N],[12,"map_data",E,E,92,N],[12,"map",E,E,92,N],[3,R[304],E,"Fields * `kernels` - For each internal degree, store the…",N,N],[12,"inner",E,E,93,N],[12,"next_s",E,E,93,N],[12,"next_t",E,E,93,N],[12,"add_class",E,E,93,N],[12,R[173],E,E,93,N],[12,"filtration_one_products",E,E,93,N],[12,R[370],E,E,93,N],[12,"unit_resolution_owner",E,E,93,N],[12,"product_names",E,E,93,N],[12,"product_list",E,E,93,N],[12,"chain_maps_to_unit_resolution",E,E,93,N],[12,"max_product_homological_degree",E,E,93,N],[12,"self_maps",E,E,93,N],[5,"ptr_eq",E,"Hack to compare two pointers of different types (in this…",N,[[["arc"],["arc"]],["bool"]]],[6,"AddClassFn",E,E,N,N],[6,"AddStructlineFn",E,E,N,N],[11,"new",E,E,90,[[["arc"]],["self"]]],[11,"extend_through_degree",E,"This function prepares the ResolutionInner object to…",90,[[["u32"],["i32"],["self"]]]],[11,"step_resolution",E,"Call our resolution $X$, and the chain complex to resolve…",90,[[["u32"],["self"],["i32"]]]],[11,"cocycle_string",E,E,90,[[["u32"],["usize"],["i32"],["self"]],[R[23]]]],[11,"complex",E,E,90,[[["self"]],["arc"]]],[11,"number_of_gens_in_bidegree",E,E,90,[[["u32"],["self"],["i32"]],["usize"]]],[11,"prime",E,E,90,[[["self"]],["u32"]]],[11,"new",E,E,93,[[[R[172]],[R[4],[R[171]]],[R[171]],["arc"],[R[4],[R[172]]]],["self"]]],[11,"new_with_inner",E,E,93,[[[R[172]],[R[4],[R[171]]],[R[175]],[R[171]],[R[4],[R[172]]]],["self"]]],[11,"resolve_through_bidegree",E,E,93,[[["u32"],["self"],["i32"]]]],[11,"resolve_through_degree",E,E,93,[[["self"],["i32"]]]],[11,"step_after",E,E,93,[[["u32"],["self"],["i32"]]]],[11,"compute_filtration_one_products",E,E,93,[[["u32"],["self"],["i32"]]]],[11,R[173],E,E,93,[[["str"],["u32"],["vec",["vec"]],["i32"],["vec",["u32"]],["self"],["bool"]]]],[11,R[174],E,E,93,[[["self"]],["i32"]]],[11,"max_computed_homological_degree",E,E,93,[[["self"]],["u32"]]],[11,"graded_dimension_string",E,E,93,[[["self"]],[R[23]]]],[11,"catch_up_products",E,"This function computes the products between the element…",93,[[["self"]]]],[11,R[371],E,"The return value is whether the product was actually…",93,[[["str"],["u32"],["i32"],["vec",["u32"]],["self"]],["bool"]]],[11,"construct_unit_resolution",E,E,93,[[["self"]]]],[11,"set_unit_resolution",E,E,93,[[["weak",["rwlock"]],["self"],["rwlock",[R[170]]]]]],[11,"compute_products",E,"Compute products whose result lie in degrees up to (s, t)",93,[[["u32"],["i32"],["self"]]]],[11,"compute_product_step",E,"Target = result of the product Source = multiplicand",93,[[["u32"],["i32"],["cocycle"],["self"]]]],[11,"construct_maps_to_unit",E,E,93,[[["u32"],["self"],["i32"]]]],[11,"extend_maps_to_unit",E,"This ensures the chain_maps_to_unit_resolution are defined…",93,[[["u32"],["self"],["i32"]]]],[11,"add_self_map",E,"The return value is whether the self map was actually…",93,[[["str"],["u32"],["i32"],[R[45]],["self"]],["bool"]]],[11,"compute_self_maps",E,"We compute the products by self maps where the result has…",93,[[["u32"],["self"],["i32"]]]],[11,R[80],E,E,93,[[["self"]],[["arc",[R[69]]],[R[69]]]]],[11,"prime",E,E,93,[[["self"]],["u32"]]],[11,"module",E,E,93,[[["u32"],["self"]],[["arc",[R[114]]],[R[114]]]]],[11,R[11],E,E,93,[[["self"]],["i32"]]],[11,R[167],E,E,93,[[["u32"],["self"]],[[R[133],[R[114]]],["arc",[R[133]]]]]],[0,"resolution_homomorphism",R[24],E,N,N],[3,R[305],R[195],E,N,N],[12,"name",E,E,94,N],[12,"source",E,E,94,N],[12,"target",E,E,94,N],[12,"maps",E,E,94,N],[12,"homological_degree_shift",E,E,94,N],[12,"internal_degree_shift",E,E,94,N],[6,"ResolutionHomomorphismToUnit",E,E,N,N],[11,"new",E,E,94,[[[R[23]],["weak",[R[175]]],["u32"],["i32"],["weak"],[R[175]]],["self"]]],[11,"get_map_ensure_length",E,E,94,[[["u32"],["self"]],[R[133]]]],[11,"get_map",E,E,94,[[["u32"],["self"]],[R[133]]]],[11,"into_chain_maps",E,E,94,[[],[["vec",[R[133]]],[R[133]]]]],[11,"extend",E,"Extend the resolution homomorphism such that it is defined…",94,[[["u32"],["self"],["i32"]]]],[11,"extend_step",E,E,94,[[["u32"],["i32"],[R[45]],[R[4],[R[45]]],["self"]]]],[11,"extend_step_helper",E,E,94,[[["u32"],["i32"],[R[45]],[R[4],[R[45]]],["self"]],[R[45]]]],[0,"cli_module_loaders",R[24],E,N,N],[5,"get_gens","rust_ext::cli_module_loaders",E,N,[[["i32"]],[[R[0],["bivec","box"]],["bivec",["vec"]],["box",["error"]]]]],[5,"gens_to_json",E,E,N,[[["bivec"]],["value"]]],[5,"get_expression_to_vector",E,E,N,[[["str"],[R[33]],["f"]]]],[5,"interactive_module_define",E,E,N,[[],[[R[0],[R[23],"box"]],[R[23]],["box",["error"]]]]],[5,"interactive_module_define_fdmodule",E,E,N,[[["bool"],["u32"],["value"]],[[R[0],["value","box"]],["box",["error"]],["value"]]]],[5,"get_relation",E,E,N,[[[R[114]],[R[70]],[R[71]],[R[78]]],[[R[23]],[R[0],[R[23]]]]]],[5,"interactive_module_define_fpmodule",E,E,N,[[["bool"],["u32"],["value"]],[[R[0],["value","box"]],["box",["error"]],["value"]]]],[0,"yoneda",R[24],E,N,N],[5,"rate_operation","rust_ext::yoneda",E,N,[[["arc"],["usize"],["i32"]],["i32"]]],[5,"rate_adem_operation",E,E,N,[[[R[71]],["usize"],["i32"]],["i32"]]],[5,"operation_drop",E,E,N,[[[R[71]],["usize"],["i32"]],["i32"]]],[5,"split_mut_borrow",E,E,N,[[["usize"],["vec"]]]],[5,"yoneda_representative_element",E,E,N,[[["u32"],["usize"],["i32"],["arc"]],[[R[176]],[R[177],[R[176]]],[R[177]],[R[178],[R[176],R[177],R[177]]]]]],[5,"yoneda_representative",E,"This function produces a quasi-isomorphic quotient of `cc`…",N,[[["chainmap",[R[133]]],["arc"],[R[133]]],[[R[176]],[R[177],[R[176]]],[R[177]],[R[178],[R[176],R[177],R[177]]]]]],[5,"yoneda_representative_with_strategy",E,E,N,[[["chainmap",[R[133]]],[R[133]],["arc"],["f"]],[[R[176]],[R[177],[R[176]]],[R[177]],[R[178],[R[176],R[177],R[177]]]]]],[5,"compute_kernel_image",E,"This function does the following computation:",N,[[["qm"],["arc"],["i32"],[R[4],["arc"]],[R[41]],["g"],[R[4]],[R[4],[R[41]]]]]],[6,"Yoneda",E,E,N,N],[17,"PENALTY_UNIT",E,E,N,N],[6,"CCC",R[24],E,N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[5],E,E,0,[[[U]],[R[0]]]],[11,R[6],E,E,0,[[],[R[0]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[R[20]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[5],E,E,1,[[[U]],[R[0]]]],[11,R[6],E,E,1,[[],[R[0]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[R[20]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[180],E,E,2,[[["self"]],[R[23]]]],[11,R[5],E,E,2,[[[U]],[R[0]]]],[11,R[6],E,E,2,[[],[R[0]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[R[20]]]],[11,"into",R[179],E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"],[T]]]],[11,R[5],E,E,3,[[[U]],[R[0]]]],[11,R[6],E,E,3,[[],[R[0]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[R[20]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"],[T]]]],[11,R[5],E,E,4,[[[U]],[R[0]]]],[11,R[6],E,E,4,[[],[R[0]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[R[20]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"],[T]]]],[11,R[5],E,E,5,[[[U]],[R[0]]]],[11,R[6],E,E,5,[[],[R[0]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[R[20]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"],[T]]]],[11,R[5],E,E,6,[[[U]],[R[0]]]],[11,R[6],E,E,6,[[],[R[0]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[R[20]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[14],E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"],[T]]]],[11,R[5],E,E,7,[[[U]],[R[0]]]],[11,R[6],E,E,7,[[],[R[0]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[R[20]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[14],E,E,8,[[["self"]],[T]]],[11,R[15],E,E,8,[[["self"],[T]]]],[11,R[5],E,E,8,[[[U]],[R[0]]]],[11,R[6],E,E,8,[[],[R[0]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[R[20]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[185],E,E,9,[[],["i"]]],[11,R[5],E,E,9,[[[U]],[R[0]]]],[11,R[6],E,E,9,[[],[R[0]]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[R[20]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[5],E,E,10,[[[U]],[R[0]]]],[11,R[6],E,E,10,[[],[R[0]]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[["self"]],[R[20]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[5],E,E,11,[[[U]],[R[0]]]],[11,R[6],E,E,11,[[],[R[0]]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[["self"]],[R[20]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[14],E,E,12,[[["self"]],[T]]],[11,R[15],E,E,12,[[["self"],[T]]]],[11,R[180],E,E,12,[[["self"]],[R[23]]]],[11,R[5],E,E,12,[[[U]],[R[0]]]],[11,R[6],E,E,12,[[],[R[0]]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[["self"]],[R[20]]]],[11,"into",R[181],E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[14],E,E,14,[[["self"]],[T]]],[11,R[15],E,E,14,[[["self"],[T]]]],[11,R[180],E,E,14,[[["self"]],[R[23]]]],[11,R[5],E,E,14,[[[U]],[R[0]]]],[11,R[6],E,E,14,[[],[R[0]]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[8],E,E,14,[[["self"]],[T]]],[11,R[9],E,E,14,[[["self"]],[R[20]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[14],E,E,15,[[["self"]],[T]]],[11,R[15],E,E,15,[[["self"],[T]]]],[11,R[5],E,E,15,[[[U]],[R[0]]]],[11,R[6],E,E,15,[[],[R[0]]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[8],E,E,15,[[["self"]],[T]]],[11,R[9],E,E,15,[[["self"]],[R[20]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[5],E,E,16,[[[U]],[R[0]]]],[11,R[6],E,E,16,[[],[R[0]]]],[11,R[7],E,E,16,[[["self"]],[T]]],[11,R[8],E,E,16,[[["self"]],[T]]],[11,R[9],E,E,16,[[["self"]],[R[20]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[5],E,E,17,[[[U]],[R[0]]]],[11,R[6],E,E,17,[[],[R[0]]]],[11,R[7],E,E,17,[[["self"]],[T]]],[11,R[8],E,E,17,[[["self"]],[T]]],[11,R[9],E,E,17,[[["self"]],[R[20]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[5],E,E,18,[[[U]],[R[0]]]],[11,R[6],E,E,18,[[],[R[0]]]],[11,R[7],E,E,18,[[["self"]],[T]]],[11,R[8],E,E,18,[[["self"]],[T]]],[11,R[9],E,E,18,[[["self"]],[R[20]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[5],E,E,19,[[[U]],[R[0]]]],[11,R[6],E,E,19,[[],[R[0]]]],[11,R[7],E,E,19,[[["self"]],[T]]],[11,R[8],E,E,19,[[["self"]],[T]]],[11,R[9],E,E,19,[[["self"]],[R[20]]]],[11,"into",R[182],E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[5],E,E,20,[[[U]],[R[0]]]],[11,R[6],E,E,20,[[],[R[0]]]],[11,R[7],E,E,20,[[["self"]],[T]]],[11,R[8],E,E,20,[[["self"]],[T]]],[11,R[9],E,E,20,[[["self"]],[R[20]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[5],E,E,21,[[[U]],[R[0]]]],[11,R[6],E,E,21,[[],[R[0]]]],[11,R[7],E,E,21,[[["self"]],[T]]],[11,R[8],E,E,21,[[["self"]],[T]]],[11,R[9],E,E,21,[[["self"]],[R[20]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[5],E,E,22,[[[U]],[R[0]]]],[11,R[6],E,E,22,[[],[R[0]]]],[11,R[7],E,E,22,[[["self"]],[T]]],[11,R[8],E,E,22,[[["self"]],[T]]],[11,R[9],E,E,22,[[["self"]],[R[20]]]],[11,"into",R[57],E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[5],E,E,23,[[[U]],[R[0]]]],[11,R[6],E,E,23,[[],[R[0]]]],[11,R[7],E,E,23,[[["self"]],[T]]],[11,R[8],E,E,23,[[["self"]],[T]]],[11,R[9],E,E,23,[[["self"]],[R[20]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[5],E,E,24,[[[U]],[R[0]]]],[11,R[6],E,E,24,[[],[R[0]]]],[11,R[7],E,E,24,[[["self"]],[T]]],[11,R[8],E,E,24,[[["self"]],[T]]],[11,R[9],E,E,24,[[["self"]],[R[20]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[180],E,E,25,[[["self"]],[R[23]]]],[11,R[5],E,E,25,[[[U]],[R[0]]]],[11,R[6],E,E,25,[[],[R[0]]]],[11,R[7],E,E,25,[[["self"]],[T]]],[11,R[8],E,E,25,[[["self"]],[T]]],[11,R[9],E,E,25,[[["self"]],[R[20]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[5],E,E,26,[[[U]],[R[0]]]],[11,R[6],E,E,26,[[],[R[0]]]],[11,R[7],E,E,26,[[["self"]],[T]]],[11,R[8],E,E,26,[[["self"]],[T]]],[11,R[9],E,E,26,[[["self"]],[R[20]]]],[11,"into",R[183],E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[5],E,E,27,[[[U]],[R[0]]]],[11,R[6],E,E,27,[[],[R[0]]]],[11,R[7],E,E,27,[[["self"]],[T]]],[11,R[8],E,E,27,[[["self"]],[T]]],[11,R[9],E,E,27,[[["self"]],[R[20]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[14],E,E,28,[[["self"]],[T]]],[11,R[15],E,E,28,[[["self"],[T]]]],[11,R[180],E,E,28,[[["self"]],[R[23]]]],[11,R[5],E,E,28,[[[U]],[R[0]]]],[11,R[6],E,E,28,[[],[R[0]]]],[11,R[7],E,E,28,[[["self"]],[T]]],[11,R[8],E,E,28,[[["self"]],[T]]],[11,R[9],E,E,28,[[["self"]],[R[20]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[5],E,E,29,[[[U]],[R[0]]]],[11,R[6],E,E,29,[[],[R[0]]]],[11,R[7],E,E,29,[[["self"]],[T]]],[11,R[8],E,E,29,[[["self"]],[T]]],[11,R[9],E,E,29,[[["self"]],[R[20]]]],[11,"into",R[184],E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[5],E,E,30,[[[U]],[R[0]]]],[11,R[6],E,E,30,[[],[R[0]]]],[11,R[7],E,E,30,[[["self"]],[T]]],[11,R[8],E,E,30,[[["self"]],[T]]],[11,R[9],E,E,30,[[["self"]],[R[20]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[14],E,E,31,[[["self"]],[T]]],[11,R[15],E,E,31,[[["self"],[T]]]],[11,R[5],E,E,31,[[[U]],[R[0]]]],[11,R[6],E,E,31,[[],[R[0]]]],[11,R[7],E,E,31,[[["self"]],[T]]],[11,R[8],E,E,31,[[["self"]],[T]]],[11,R[9],E,E,31,[[["self"]],[R[20]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[14],E,E,32,[[["self"]],[T]]],[11,R[15],E,E,32,[[["self"],[T]]]],[11,R[180],E,E,32,[[["self"]],[R[23]]]],[11,R[5],E,E,32,[[[U]],[R[0]]]],[11,R[6],E,E,32,[[],[R[0]]]],[11,R[7],E,E,32,[[["self"]],[T]]],[11,R[8],E,E,32,[[["self"]],[T]]],[11,R[9],E,E,32,[[["self"]],[R[20]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[5],E,E,33,[[[U]],[R[0]]]],[11,R[6],E,E,33,[[],[R[0]]]],[11,R[7],E,E,33,[[["self"]],[T]]],[11,R[8],E,E,33,[[["self"]],[T]]],[11,R[9],E,E,33,[[["self"]],[R[20]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[185],E,E,34,[[],["i"]]],[11,R[5],E,E,34,[[[U]],[R[0]]]],[11,R[6],E,E,34,[[],[R[0]]]],[11,R[7],E,E,34,[[["self"]],[T]]],[11,R[8],E,E,34,[[["self"]],[T]]],[11,R[9],E,E,34,[[["self"]],[R[20]]]],[11,"into",R[186],E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[5],E,E,35,[[[U]],[R[0]]]],[11,R[6],E,E,35,[[],[R[0]]]],[11,R[7],E,E,35,[[["self"]],[T]]],[11,R[8],E,E,35,[[["self"]],[T]]],[11,R[9],E,E,35,[[["self"]],[R[20]]]],[11,"into",R[187],E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[180],E,E,38,[[["self"]],[R[23]]]],[11,R[5],E,E,38,[[[U]],[R[0]]]],[11,R[6],E,E,38,[[],[R[0]]]],[11,R[7],E,E,38,[[["self"]],[T]]],[11,R[8],E,E,38,[[["self"]],[T]]],[11,R[9],E,E,38,[[["self"]],[R[20]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[14],E,E,39,[[["self"]],[T]]],[11,R[15],E,E,39,[[["self"],[T]]]],[11,R[5],E,E,39,[[[U]],[R[0]]]],[11,R[6],E,E,39,[[],[R[0]]]],[11,R[7],E,E,39,[[["self"]],[T]]],[11,R[8],E,E,39,[[["self"]],[T]]],[11,R[9],E,E,39,[[["self"]],[R[20]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[14],E,E,40,[[["self"]],[T]]],[11,R[15],E,E,40,[[["self"],[T]]]],[11,R[5],E,E,40,[[[U]],[R[0]]]],[11,R[6],E,E,40,[[],[R[0]]]],[11,R[7],E,E,40,[[["self"]],[T]]],[11,R[8],E,E,40,[[["self"]],[T]]],[11,R[9],E,E,40,[[["self"]],[R[20]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[14],E,E,41,[[["self"]],[T]]],[11,R[15],E,E,41,[[["self"],[T]]]],[11,R[5],E,E,41,[[[U]],[R[0]]]],[11,R[6],E,E,41,[[],[R[0]]]],[11,R[7],E,E,41,[[["self"]],[T]]],[11,R[8],E,E,41,[[["self"]],[T]]],[11,R[9],E,E,41,[[["self"]],[R[20]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[14],E,E,42,[[["self"]],[T]]],[11,R[15],E,E,42,[[["self"],[T]]]],[11,R[5],E,E,42,[[[U]],[R[0]]]],[11,R[6],E,E,42,[[],[R[0]]]],[11,R[7],E,E,42,[[["self"]],[T]]],[11,R[8],E,E,42,[[["self"]],[T]]],[11,R[9],E,E,42,[[["self"]],[R[20]]]],[11,"into",R[188],E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[5],E,E,43,[[[U]],[R[0]]]],[11,R[6],E,E,43,[[],[R[0]]]],[11,R[7],E,E,43,[[["self"]],[T]]],[11,R[8],E,E,43,[[["self"]],[T]]],[11,R[9],E,E,43,[[["self"]],[R[20]]]],[11,"into",E,E,95,[[],[U]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[180],E,E,95,[[["self"]],[R[23]]]],[11,R[5],E,E,95,[[[U]],[R[0]]]],[11,R[6],E,E,95,[[],[R[0]]]],[11,R[7],E,E,95,[[["self"]],[T]]],[11,R[8],E,E,95,[[["self"]],[T]]],[11,R[9],E,E,95,[[["self"]],[R[20]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[180],E,E,44,[[["self"]],[R[23]]]],[11,R[5],E,E,44,[[[U]],[R[0]]]],[11,R[6],E,E,44,[[],[R[0]]]],[11,R[7],E,E,44,[[["self"]],[T]]],[11,R[8],E,E,44,[[["self"]],[T]]],[11,R[9],E,E,44,[[["self"]],[R[20]]]],[11,"into",R[88],E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[5],E,E,45,[[[U]],[R[0]]]],[11,R[6],E,E,45,[[],[R[0]]]],[11,R[7],E,E,45,[[["self"]],[T]]],[11,R[8],E,E,45,[[["self"]],[T]]],[11,R[9],E,E,45,[[["self"]],[R[20]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[5],E,E,46,[[[U]],[R[0]]]],[11,R[6],E,E,46,[[],[R[0]]]],[11,R[7],E,E,46,[[["self"]],[T]]],[11,R[8],E,E,46,[[["self"]],[T]]],[11,R[9],E,E,46,[[["self"]],[R[20]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[5],E,E,47,[[[U]],[R[0]]]],[11,R[6],E,E,47,[[],[R[0]]]],[11,R[7],E,E,47,[[["self"]],[T]]],[11,R[8],E,E,47,[[["self"]],[T]]],[11,R[9],E,E,47,[[["self"]],[R[20]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[5],E,E,48,[[[U]],[R[0]]]],[11,R[6],E,E,48,[[],[R[0]]]],[11,R[7],E,E,48,[[["self"]],[T]]],[11,R[8],E,E,48,[[["self"]],[T]]],[11,R[9],E,E,48,[[["self"]],[R[20]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[5],E,E,49,[[[U]],[R[0]]]],[11,R[6],E,E,49,[[],[R[0]]]],[11,R[7],E,E,49,[[["self"]],[T]]],[11,R[8],E,E,49,[[["self"]],[T]]],[11,R[9],E,E,49,[[["self"]],[R[20]]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[5],E,E,50,[[[U]],[R[0]]]],[11,R[6],E,E,50,[[],[R[0]]]],[11,R[7],E,E,50,[[["self"]],[T]]],[11,R[8],E,E,50,[[["self"]],[T]]],[11,R[9],E,E,50,[[["self"]],[R[20]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[5],E,E,51,[[[U]],[R[0]]]],[11,R[6],E,E,51,[[],[R[0]]]],[11,R[7],E,E,51,[[["self"]],[T]]],[11,R[8],E,E,51,[[["self"]],[T]]],[11,R[9],E,E,51,[[["self"]],[R[20]]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[5],E,E,52,[[[U]],[R[0]]]],[11,R[6],E,E,52,[[],[R[0]]]],[11,R[7],E,E,52,[[["self"]],[T]]],[11,R[8],E,E,52,[[["self"]],[T]]],[11,R[9],E,E,52,[[["self"]],[R[20]]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[5],E,E,53,[[[U]],[R[0]]]],[11,R[6],E,E,53,[[],[R[0]]]],[11,R[7],E,E,53,[[["self"]],[T]]],[11,R[8],E,E,53,[[["self"]],[T]]],[11,R[9],E,E,53,[[["self"]],[R[20]]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[5],E,E,54,[[[U]],[R[0]]]],[11,R[6],E,E,54,[[],[R[0]]]],[11,R[7],E,E,54,[[["self"]],[T]]],[11,R[8],E,E,54,[[["self"]],[T]]],[11,R[9],E,E,54,[[["self"]],[R[20]]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[180],E,E,55,[[["self"]],[R[23]]]],[11,R[5],E,E,55,[[[U]],[R[0]]]],[11,R[6],E,E,55,[[],[R[0]]]],[11,R[7],E,E,55,[[["self"]],[T]]],[11,R[8],E,E,55,[[["self"]],[T]]],[11,R[9],E,E,55,[[["self"]],[R[20]]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[180],E,E,56,[[["self"]],[R[23]]]],[11,R[5],E,E,56,[[[U]],[R[0]]]],[11,R[6],E,E,56,[[],[R[0]]]],[11,R[7],E,E,56,[[["self"]],[T]]],[11,R[8],E,E,56,[[["self"]],[T]]],[11,R[9],E,E,56,[[["self"]],[R[20]]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[5],E,E,57,[[[U]],[R[0]]]],[11,R[6],E,E,57,[[],[R[0]]]],[11,R[7],E,E,57,[[["self"]],[T]]],[11,R[8],E,E,57,[[["self"]],[T]]],[11,R[9],E,E,57,[[["self"]],[R[20]]]],[11,"into",R[189],E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[5],E,E,58,[[[U]],[R[0]]]],[11,R[6],E,E,58,[[],[R[0]]]],[11,R[7],E,E,58,[[["self"]],[T]]],[11,R[8],E,E,58,[[["self"]],[T]]],[11,R[9],E,E,58,[[["self"]],[R[20]]]],[11,"into",R[190],E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[5],E,E,59,[[[U]],[R[0]]]],[11,R[6],E,E,59,[[],[R[0]]]],[11,R[7],E,E,59,[[["self"]],[T]]],[11,R[8],E,E,59,[[["self"]],[T]]],[11,R[9],E,E,59,[[["self"]],[R[20]]]],[11,"into",R[191],E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[5],E,E,60,[[[U]],[R[0]]]],[11,R[6],E,E,60,[[],[R[0]]]],[11,R[7],E,E,60,[[["self"]],[T]]],[11,R[8],E,E,60,[[["self"]],[T]]],[11,R[9],E,E,60,[[["self"]],[R[20]]]],[11,"into",R[122],E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[5],E,E,61,[[[U]],[R[0]]]],[11,R[6],E,E,61,[[],[R[0]]]],[11,R[7],E,E,61,[[["self"]],[T]]],[11,R[8],E,E,61,[[["self"]],[T]]],[11,R[9],E,E,61,[[["self"]],[R[20]]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[5],E,E,62,[[[U]],[R[0]]]],[11,R[6],E,E,62,[[],[R[0]]]],[11,R[7],E,E,62,[[["self"]],[T]]],[11,R[8],E,E,62,[[["self"]],[T]]],[11,R[9],E,E,62,[[["self"]],[R[20]]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[5],E,E,63,[[[U]],[R[0]]]],[11,R[6],E,E,63,[[],[R[0]]]],[11,R[7],E,E,63,[[["self"]],[T]]],[11,R[8],E,E,63,[[["self"]],[T]]],[11,R[9],E,E,63,[[["self"]],[R[20]]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[5],E,E,64,[[[U]],[R[0]]]],[11,R[6],E,E,64,[[],[R[0]]]],[11,R[7],E,E,64,[[["self"]],[T]]],[11,R[8],E,E,64,[[["self"]],[T]]],[11,R[9],E,E,64,[[["self"]],[R[20]]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[5],E,E,65,[[[U]],[R[0]]]],[11,R[6],E,E,65,[[],[R[0]]]],[11,R[7],E,E,65,[[["self"]],[T]]],[11,R[8],E,E,65,[[["self"]],[T]]],[11,R[9],E,E,65,[[["self"]],[R[20]]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[5],E,E,66,[[[U]],[R[0]]]],[11,R[6],E,E,66,[[],[R[0]]]],[11,R[7],E,E,66,[[["self"]],[T]]],[11,R[8],E,E,66,[[["self"]],[T]]],[11,R[9],E,E,66,[[["self"]],[R[20]]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[5],E,E,67,[[[U]],[R[0]]]],[11,R[6],E,E,67,[[],[R[0]]]],[11,R[7],E,E,67,[[["self"]],[T]]],[11,R[8],E,E,67,[[["self"]],[T]]],[11,R[9],E,E,67,[[["self"]],[R[20]]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[5],E,E,68,[[[U]],[R[0]]]],[11,R[6],E,E,68,[[],[R[0]]]],[11,R[7],E,E,68,[[["self"]],[T]]],[11,R[8],E,E,68,[[["self"]],[T]]],[11,R[9],E,E,68,[[["self"]],[R[20]]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[5],E,E,69,[[[U]],[R[0]]]],[11,R[6],E,E,69,[[],[R[0]]]],[11,R[7],E,E,69,[[["self"]],[T]]],[11,R[8],E,E,69,[[["self"]],[T]]],[11,R[9],E,E,69,[[["self"]],[R[20]]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[5],E,E,70,[[[U]],[R[0]]]],[11,R[6],E,E,70,[[],[R[0]]]],[11,R[7],E,E,70,[[["self"]],[T]]],[11,R[8],E,E,70,[[["self"]],[T]]],[11,R[9],E,E,70,[[["self"]],[R[20]]]],[11,"into",R[192],E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[5],E,E,72,[[[U]],[R[0]]]],[11,R[6],E,E,72,[[],[R[0]]]],[11,R[7],E,E,72,[[["self"]],[T]]],[11,R[8],E,E,72,[[["self"]],[T]]],[11,R[9],E,E,72,[[["self"]],[R[20]]]],[11,"into",R[159],E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[5],E,E,78,[[[U]],[R[0]]]],[11,R[6],E,E,78,[[],[R[0]]]],[11,R[7],E,E,78,[[["self"]],[T]]],[11,R[8],E,E,78,[[["self"]],[T]]],[11,R[9],E,E,78,[[["self"]],[R[20]]]],[11,"into",E,E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[5],E,E,79,[[[U]],[R[0]]]],[11,R[6],E,E,79,[[],[R[0]]]],[11,R[7],E,E,79,[[["self"]],[T]]],[11,R[8],E,E,79,[[["self"]],[T]]],[11,R[9],E,E,79,[[["self"]],[R[20]]]],[11,"into",E,E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[5],E,E,80,[[[U]],[R[0]]]],[11,R[6],E,E,80,[[],[R[0]]]],[11,R[7],E,E,80,[[["self"]],[T]]],[11,R[8],E,E,80,[[["self"]],[T]]],[11,R[9],E,E,80,[[["self"]],[R[20]]]],[11,"into",E,E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[5],E,E,81,[[[U]],[R[0]]]],[11,R[6],E,E,81,[[],[R[0]]]],[11,R[7],E,E,81,[[["self"]],[T]]],[11,R[8],E,E,81,[[["self"]],[T]]],[11,R[9],E,E,81,[[["self"]],[R[20]]]],[11,"into",E,E,82,[[],[U]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[5],E,E,82,[[[U]],[R[0]]]],[11,R[6],E,E,82,[[],[R[0]]]],[11,R[7],E,E,82,[[["self"]],[T]]],[11,R[8],E,E,82,[[["self"]],[T]]],[11,R[9],E,E,82,[[["self"]],[R[20]]]],[11,"into",R[193],E,83,[[],[U]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[5],E,E,83,[[[U]],[R[0]]]],[11,R[6],E,E,83,[[],[R[0]]]],[11,R[7],E,E,83,[[["self"]],[T]]],[11,R[8],E,E,83,[[["self"]],[T]]],[11,R[9],E,E,83,[[["self"]],[R[20]]]],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[5],E,E,84,[[[U]],[R[0]]]],[11,R[6],E,E,84,[[],[R[0]]]],[11,R[7],E,E,84,[[["self"]],[T]]],[11,R[8],E,E,84,[[["self"]],[T]]],[11,R[9],E,E,84,[[["self"]],[R[20]]]],[11,"into",R[165],E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[5],E,E,85,[[[U]],[R[0]]]],[11,R[6],E,E,85,[[],[R[0]]]],[11,R[7],E,E,85,[[["self"]],[T]]],[11,R[8],E,E,85,[[["self"]],[T]]],[11,R[9],E,E,85,[[["self"]],[R[20]]]],[11,"into",R[194],E,90,[[],[U]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[5],E,E,90,[[[U]],[R[0]]]],[11,R[6],E,E,90,[[],[R[0]]]],[11,R[7],E,E,90,[[["self"]],[T]]],[11,R[8],E,E,90,[[["self"]],[T]]],[11,R[9],E,E,90,[[["self"]],[R[20]]]],[11,"into",E,E,91,[[],[U]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[14],E,E,91,[[["self"]],[T]]],[11,R[15],E,E,91,[[["self"],[T]]]],[11,R[5],E,E,91,[[[U]],[R[0]]]],[11,R[6],E,E,91,[[],[R[0]]]],[11,R[7],E,E,91,[[["self"]],[T]]],[11,R[8],E,E,91,[[["self"]],[T]]],[11,R[9],E,E,91,[[["self"]],[R[20]]]],[11,"into",E,E,92,[[],[U]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[5],E,E,92,[[[U]],[R[0]]]],[11,R[6],E,E,92,[[],[R[0]]]],[11,R[7],E,E,92,[[["self"]],[T]]],[11,R[8],E,E,92,[[["self"]],[T]]],[11,R[9],E,E,92,[[["self"]],[R[20]]]],[11,"into",E,E,93,[[],[U]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[5],E,E,93,[[[U]],[R[0]]]],[11,R[6],E,E,93,[[],[R[0]]]],[11,R[7],E,E,93,[[["self"]],[T]]],[11,R[8],E,E,93,[[["self"]],[T]]],[11,R[9],E,E,93,[[["self"]],[R[20]]]],[11,"into",R[195],E,94,[[],[U]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[5],E,E,94,[[[U]],[R[0]]]],[11,R[6],E,E,94,[[],[R[0]]]],[11,R[7],E,E,94,[[["self"]],[T]]],[11,R[8],E,E,94,[[["self"]],[T]]],[11,R[9],E,E,94,[[["self"]],[R[20]]]],[11,R[196],R[183],E,29,[[["usize"],["self"],["i32"]],["vec"]]],[11,R[197],E,E,29,[[["usize"],["self"],["i32"]],["vec"]]],[11,R[197],R[184],E,33,[[["usize"],["self"],["i32"]],["vec"]]],[11,R[196],E,E,33,[[["usize"],["self"],["i32"]],["vec"]]],[11,R[197],R[186],E,35,[[["usize"],["self"],["i32"]],["vec"]]],[11,R[196],E,E,35,[[["usize"],["self"],["i32"]],["vec"]]],[11,R[196],R[57],E,26,[[["usize"],["self"],["i32"]],["vec"]]],[11,R[197],E,E,26,[[["usize"],["self"],["i32"]],["vec"]]],[11,R[95],R[88],E,48,[[["usize"],["self"],["i32"]],["usize"]]],[11,R[81],E,E,48,[[["self"]],["arc"]]],[11,R[95],E,E,57,[[["usize"],["self"],["i32"]],["usize"]]],[11,R[81],E,E,57,[[["self"]],["arc"]]],[11,"source",R[122],E,61,[[["self"]],["arc"]]],[11,"target",E,E,61,[[["self"]],["arc"]]],[11,R[119],E,E,61,[[["self"]],["i32"]]],[11,R[198],E,E,61,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,R[120],E,E,61,[[["self"],["i32"]],[R[50]]]],[11,"kernel",E,E,61,[[["self"],["i32"]],[R[41]]]],[11,R[145],E,E,61,[[[R[45]],["self"],["i32"]]]],[11,R[199],E,E,61,[[["self"],["i32"]]]],[11,"source",E,E,62,[[["self"]],["arc"]]],[11,"target",E,E,62,[[["self"]],["arc"]]],[11,R[119],E,E,62,[[["self"]],["i32"]]],[11,R[198],E,E,62,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,R[120],E,E,62,[[["self"],["i32"]],[R[50]]]],[11,"kernel",E,E,62,[[["self"],["i32"]],[R[41]]]],[11,R[199],E,E,62,[[["self"],["i32"]]]],[11,"source",E,E,64,[[["self"]],["arc"]]],[11,"target",E,E,64,[[["self"]],["arc"]]],[11,R[119],E,E,64,[[["self"]],["i32"]]],[11,R[198],E,E,64,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,R[120],E,E,64,[[["self"],["i32"]],[R[50]]]],[11,"kernel",E,E,64,[[["self"],["i32"]],[R[41]]]],[11,R[199],E,E,64,[[["self"],["i32"]]]],[11,"source",E,E,63,[[["self"]],["arc"]]],[11,"target",E,E,63,[[["self"]],["arc"]]],[11,R[119],E,E,63,[[["self"]],["i32"]]],[11,R[11],E,E,63,[[["self"]],["i32"]]],[11,R[198],E,E,63,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,R[199],E,E,63,[[["self"],["i32"]]]],[11,R[120],E,E,63,[[["self"],["i32"]],[R[50]]]],[11,"kernel",E,E,63,[[["self"],["i32"]],[R[41]]]],[11,"source",E,E,67,[[["self"]],["arc"]]],[11,"target",E,E,67,[[["self"]],["arc"]]],[11,R[119],E,E,67,[[["self"]],["i32"]]],[11,R[198],E,E,67,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,"kernel",E,E,67,[[["self"],["i32"]],[R[41]]]],[11,R[120],E,E,67,[[["self"],["i32"]],[R[50]]]],[11,R[199],E,E,67,[[["self"],["i32"]]]],[11,"source",E,E,68,[[["self"]],["arc"]]],[11,"target",E,E,68,[[["self"]],["arc"]]],[11,R[119],E,E,68,[[["self"]],["i32"]]],[11,R[198],E,E,68,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,"kernel",E,E,68,[[["self"],["i32"]],[R[41]]]],[11,R[120],E,E,68,[[["self"],["i32"]],[R[50]]]],[11,R[199],E,E,68,[[["self"],["i32"]]]],[11,"source",E,E,69,[[["self"]],["arc"]]],[11,"target",E,E,69,[[["self"]],["arc"]]],[11,R[119],E,E,69,[[["self"]],["i32"]]],[11,R[198],E,E,69,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,"kernel",E,E,69,[[["self"],["i32"]],[R[41]]]],[11,R[120],E,E,69,[[["self"],["i32"]],[R[50]]]],[11,R[199],E,E,69,[[["self"],["i32"]]]],[11,"source",E,E,70,[[["self"]],["arc"]]],[11,"target",E,E,70,[[["self"]],["arc"]]],[11,R[119],E,E,70,[[["self"]],["i32"]]],[11,R[198],E,E,70,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,"kernel",E,E,70,[[["self"],["i32"]],[R[41]]]],[11,R[120],E,E,70,[[["self"],["i32"]],[R[50]]]],[11,R[199],E,E,70,[[["self"],["i32"]]]],[11,"source",E,E,66,[[["self"]],["arc"]]],[11,"target",E,E,66,[[["self"]],["arc"]]],[11,R[119],E,E,66,[[["self"]],["i32"]]],[11,R[198],E,E,66,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,R[120],E,E,66,[[["self"],["i32"]],[R[50]]]],[11,"kernel",E,E,66,[[["self"],["i32"]],[R[41]]]],[11,R[199],E,E,66,[[["self"],["i32"]]]],[11,"source",E,E,65,[[["self"]],["arc"]]],[11,"target",E,E,65,[[["self"]],["arc"]]],[11,R[119],E,E,65,[[["self"]],["i32"]]],[11,R[198],E,E,65,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,R[120],E,E,65,[[["self"],["i32"]],[R[50]]]],[11,"kernel",E,E,65,[[["self"],["i32"]],[R[41]]]],[11,R[199],E,E,65,[[["self"],["i32"]]]],[11,"source",R[193],E,84,[[["self"]],["arc"]]],[11,"target",E,E,84,[[["self"]],["arc"]]],[11,R[119],E,E,84,[[["self"]],["i32"]]],[11,R[198],E,R[201],84,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,"kernel",E,E,84,[[["self"],["i32"]],[R[41]]]],[11,R[120],E,E,84,[[["self"],["i32"]],[R[50]]]],[11,R[199],E,E,84,[[["self"],["i32"]]]],[11,R[200],E,E,84,[[[R[33]],["i32"],[R[33]],["self"]]]],[11,"source",R[165],E,85,[[["self"]],["arc"]]],[11,"target",E,E,85,[[["self"]],["arc"]]],[11,R[119],E,E,85,[[["self"]],["i32"]]],[11,R[198],E,R[201],85,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,"kernel",E,E,85,[[["self"],["i32"]],[R[41]]]],[11,R[120],E,E,85,[[["self"],["i32"]],[R[50]]]],[11,R[199],E,E,85,[[["self"],["i32"]]]],[11,R[200],E,E,85,[[[R[33]],["i32"],[R[33]],["self"]]]],[11,R[202],R[122],E,62,[[["i32"],["arc"],["arc"]],["self"]]],[11,R[202],E,E,64,[[["i32"],["arc"],["arc"]],["self"]]],[11,R[202],E,E,66,[[["arc"],["i32"],["arc"]],["self"]]],[11,R[202],E,E,65,[[[R[176]],["arc"],["i32"],["arc",[R[176]]]],["self"]]],[11,R[21],R[88],E,45,[[["self"]],["i32"]]],[11,R[21],E,E,49,[[["self"]],["i32"]]],[11,R[21],E,E,50,[[["self"]],["i32"]]],[11,R[21],E,E,53,[[["self"]],["i32"]]],[11,R[21],E,E,54,[[["self"]],["i32"]]],[11,R[21],E,E,57,[[["self"]],["i32"]]],[11,R[152],E,E,45,[[["i32"],["arc",[R[69]]],[R[69]]],["self"]]],[11,R[152],E,E,48,[[["i32"],["arc",[R[69]]],[R[69]]],["self"]]],[11,R[152],E,E,53,[[["i32"],["arc",[R[69]]],[R[69]]],["self"]]],[11,R[152],E,E,54,[[["i32"],["arc",[R[69]]],[R[69]]],["self"]]],[11,R[152],E,E,46,[[["i32"],["arc",[R[69]]],[R[69]]],["self"]]],[11,R[152],E,E,57,[[["i32"],["arc",[R[69]]],[R[69]]],["self"]]],[11,R[80],R[159],E,78,[[["self"]],[["arc",[R[69]]],[R[69]]]]],[11,R[11],E,E,78,[[["self"]],["i32"]]],[11,R[152],E,E,78,[[["self"]],["arc"]]],[11,"module",E,E,78,[[["u32"],["self"]],["arc"]]],[11,R[167],E,E,78,[[["u32"],["self"]],["arc"]]],[11,R[168],E,E,78,[[["u32"],["self"],["i32"]]]],[11,R[203],E,E,78,[[["u32"],["usize"],["i32"],["self"],["vec",["usize"]]]]],[11,R[204],E,E,78,[[["u32"],["self"],["i32"]],["vec"]]],[11,R[205],E,E,78,[[["u32"],["self"]],["i32"]]],[11,R[80],E,E,79,[[["self"]],[["arc",[R[69]]],[R[69]]]]],[11,R[11],E,E,79,[[["self"]],["i32"]]],[11,R[152],E,E,79,[[["self"]],["arc"]]],[11,"module",E,E,79,[[["u32"],["self"]],["arc"]]],[11,R[167],E,E,79,[[["u32"],["self"]],["arc"]]],[11,R[168],E,E,79,[[["u32"],["self"],["i32"]]]],[11,R[203],E,E,79,[[["u32"],["usize"],["i32"],["self"],["vec",["usize"]]]]],[11,R[204],E,E,79,[[["u32"],["self"],["i32"]],["vec"]]],[11,R[205],E,E,79,[[["u32"],["self"]],["i32"]]],[11,R[80],E,E,80,[[["self"]],[["arc",[R[69]]],[R[69]]]]],[11,R[11],E,E,80,[[["self"]],["i32"]]],[11,R[152],E,E,80,[[["self"]],["arc"]]],[11,"module",E,E,80,[[["u32"],["self"]],["arc"]]],[11,R[167],E,E,80,[[["u32"],["self"]],["arc"]]],[11,R[168],E,E,80,[[["u32"],["self"],["i32"]]]],[11,R[203],E,E,80,[[["u32"],["usize"],["i32"],["self"],["vec",["usize"]]]]],[11,R[204],E,E,80,[[["u32"],["self"],["i32"]],["vec"]]],[11,R[205],E,E,80,[[["u32"],["self"]],["i32"]]],[11,R[80],R[194],E,90,[[["self"]],[["arc",[R[69]]],[R[69]]]]],[11,"module",E,E,90,[[["u32"],["self"]],["arc"]]],[11,R[152],E,E,90,[[["self"]],["arc"]]],[11,R[11],E,E,90,[[["self"]],["i32"]]],[11,R[203],E,E,90,[[["u32"],["usize"],["i32"],["self"],["vec",["usize"]]]]],[11,R[204],E,E,90,[[["u32"],["self"],["i32"]],["vec"]]],[11,R[206],E,E,90,[[["u32"],["self"],["i32"]],["usize"]]],[11,R[205],E,E,90,[[["u32"],["self"]],["i32"]]],[11,R[167],E,E,90,[[["u32"],["self"]],["arc"]]],[11,R[168],E,E,90,[[["u32"],["self"],["i32"]]]],[11,"target",R[159],E,79,[[["self"]],["arc"]]],[11,R[207],E,"This currently crashes if `s` is greater than the s degree…",79,[[["u32"],["self"]],["arc"]]],[11,"target",E,E,80,[[["self"]],["arc"]]],[11,R[207],E,E,80,[[["u32"],["self"]],["arc"]]],[11,"target",R[194],E,90,[[["self"]],["arc"]]],[11,R[207],E,E,90,[[["u32"],["self"]],["arc"]]],[11,"max_s",R[159],E,78,[[["self"]],["u32"]]],[11,"max_s",E,E,79,[[["self"]],["u32"]]],[11,R[208],R[179],E,12,[[["self"],["usize"]]]],[11,R[25],E,E,12,[[["self"]],[R[32]]]],[11,R[209],E,E,12,[[["self"]],[R[32]]]],[11,"prime",E,E,12,[[["self"]],["u32"]]],[11,R[26],E,E,12,[[["self"]],["usize"]]],[11,"offset",E,E,12,[[["self"]],["usize"]]],[11,R[210],E,E,12,[[["self"]],["usize"]]],[11,"slice",E,E,12,[[["self"]]]],[11,R[36],E,E,12,[[["self"],["usize"]]]],[11,R[211],E,E,12,[[["self"]]]],[11,R[37],E,E,12,[[["self"]]]],[11,R[38],E,E,12,[[["self"]]]],[11,"min_limb",E,E,12,[[["self"]],["usize"]]],[11,"max_limb",E,E,12,[[["self"]],["usize"]]],[11,"limbs",E,E,12,[[["self"]],["vec"]]],[11,R[212],E,E,12,[[["self"]],["vec"]]],[11,R[213],E,E,12,[[["self"],["usize"]],["u64"]]],[11,R[214],E,E,12,[[["self"]]]],[11,R[43],E,E,12,[[["self"]]]],[11,R[215],E,E,12,[[["self"],[R[33]]]]],[11,"assign",E,E,12,[[["self"],[R[33]]]]],[11,R[216],E,E,12,[[["self"]],["bool"]]],[11,"is_zero",E,E,12,[[["self"]],["bool"]]],[11,"entry",E,E,12,[[["self"],["usize"]],["u32"]]],[11,R[217],E,E,12,[[["self"],["usize"],["u32"]]]],[11,R[218],E,E,12,[[["self"],["usize"],["u32"]]]],[11,"unpack",E,E,12,[[["self"]]]],[11,R[219],E,E,12,[[["self"]],[["u32"],["vec",["u32"]]]]],[11,"pack",E,E,12,[[["self"]]]],[11,R[220],E,E,12,[[["u32"],["usize"],[R[33]],["self"]]]],[11,"add",E,E,12,[[["self"],["u32"],[R[33]]]]],[11,R[221],E,E,12,[[["self"],["u32"],[R[33]]]]],[11,R[222],E,E,12,[[["self"],["u32"],[R[33]]]]],[11,R[223],E,E,12,[[["self"],["u32"],[R[33]]]]],[11,"scale",E,E,12,[[["self"],["u32"]]]],[11,R[208],E,E,5,[[["self"],["usize"]]]],[11,"prime",E,E,5,[[["self"]],["u32"]]],[11,R[25],E,E,5,[[["self"]],[R[32]]]],[11,R[209],E,E,5,[[["self"]],[R[32]]]],[11,R[208],E,E,6,[[["self"],["usize"]]]],[11,"prime",E,E,6,[[["self"]],["u32"]]],[11,R[25],E,E,6,[[["self"]],[R[32]]]],[11,R[209],E,E,6,[[["self"]],[R[32]]]],[11,R[208],E,E,7,[[["self"],["usize"]]]],[11,"prime",E,E,7,[[["self"]],["u32"]]],[11,R[25],E,E,7,[[["self"]],[R[32]]]],[11,R[209],E,E,7,[[["self"]],[R[32]]]],[11,R[208],E,E,8,[[["self"],["usize"]]]],[11,"prime",E,E,8,[[["self"]],["u32"]]],[11,R[25],E,E,8,[[["self"]],[R[32]]]],[11,R[209],E,E,8,[[["self"]],[R[32]]]],[11,R[224],R[183],E,29,[[["self"]],["str"]]],[11,"prime",E,E,29,[[["self"]],["u32"]]],[11,"name",E,E,29,[[["self"]],["str"]]],[11,R[225],E,E,29,[[["self"]],["vec"]]],[11,R[79],E,E,29,[[["self"],["i32"]]]],[11,R[26],E,E,29,[[["self"],["i32"]],["usize"]]],[11,R[226],E,E,29,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,R[227],E,E,29,[[["self"],["value"]]]],[11,R[228],E,E,29,[[["str"],["self"]],[["str"],[R[72],["str"]]]]],[11,R[229],E,E,29,[[["usize"],["self"],["i32"]],["value"]]],[11,R[147],E,E,29,[[["usize"],["self"],["i32"]],[R[23]]]],[11,R[81],E,E,29,[[["self"],["i32"]],[["usize"],["vec",["usize"]]]]],[11,R[230],E,E,29,[[["usize"],["self"],["i32"]],["vec"]]],[11,R[231],E,"We return Adem relations $b^2 = 0$, $P^i P^j = \\cdots$ for…",29,[[["self"],["i32"]],[["vec",["vec"]],["vec"]]]],[11,R[224],R[184],E,33,[[["self"]],["str"]]],[11,"prime",E,E,33,[[["self"]],["u32"]]],[11,"name",E,E,33,[[["self"]],["str"]]],[11,R[225],E,E,33,[[["self"]],["vec"]]],[11,R[79],E,E,33,[[["self"],["i32"]]]],[11,R[26],E,E,33,[[["self"],["i32"]],["usize"]]],[11,R[226],E,E,33,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,R[227],E,E,33,[[["self"],["value"]]]],[11,R[229],E,E,33,[[["usize"],["self"],["i32"]],["value"]]],[11,R[228],E,E,33,[[["str"],["self"]],[["str"],[R[72],["str"]]]]],[11,R[147],E,E,33,[[["usize"],["self"],["i32"]],[R[23]]]],[11,R[81],E,"We pick our generators to be Q_0 and all the P(...). This…",33,[[["self"],["i32"]],[["usize"],["vec",["usize"]]]]],[11,R[230],E,E,33,[[["usize"],["self"],["i32"]],["vec"]]],[11,R[231],E,E,33,[[["self"],["i32"]],[["vec",["vec"]],["vec"]]]],[11,R[224],R[186],E,35,[[["self"]],["str"]]],[11,"prime",E,E,35,[[["self"]],["u32"]]],[11,"name",E,E,35,[[["self"]],["str"]]],[11,R[79],E,E,35,[[["self"],["i32"]]]],[11,R[26],E,R[232],35,[[["self"],["i32"]],["usize"]]],[11,R[226],E,E,35,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,R[225],E,E,35,[[["self"]],["vec"]]],[11,R[227],E,R[233],35,[[["self"],["value"]]]],[11,R[229],E,E,35,[[["usize"],["self"],["i32"]],["value"]]],[11,R[147],E,R[234],35,[[["usize"],["self"],["i32"]],[R[23]]]],[11,R[148],E,E,35,[[[R[33]],["self"],["i32"]],[R[23]]]],[11,R[81],E,E,35,[[["self"],["i32"]],[["usize"],["vec",["usize"]]]]],[11,R[230],E,E,35,[[["usize"],["self"],["i32"]],["vec"]]],[11,R[231],E,E,35,[[["self"],["i32"]],[["vec",["vec"]],["vec"]]]],[11,R[224],R[57],E,26,[[["self"]],["str"]]],[11,"prime",E,E,26,[[["self"]],["u32"]]],[11,"name",E,E,26,[[["self"]],["str"]]],[11,R[79],E,E,26,[[["self"],["i32"]]]],[11,R[26],E,E,26,[[["self"],["i32"]],["usize"]]],[11,R[226],E,E,26,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,R[235],E,E,26,[[[R[33]],["u32"],["i32"],["usize"],[R[33]],["self"]]]],[11,R[236],E,E,26,[[[R[33]],["u32"],["i32"],[R[33]],["usize"],["self"]]]],[11,R[237],E,E,26,[[[R[33]],["u32"],["i32"],[R[33]],["self"]]]],[11,R[225],E,E,26,[[["self"]],["vec"]]],[11,R[227],E,E,26,[[["self"],["value"]]]],[11,R[229],E,E,26,[[["usize"],["self"],["i32"]],["value"]]],[11,R[228],E,E,26,[[["str"],["self"]],[["str"],[R[72],["str"]]]]],[11,R[147],E,E,26,[[["usize"],["self"],["i32"]],[R[23]]]],[11,R[148],E,E,26,[[[R[33]],["self"],["i32"]],[R[23]]]],[11,R[81],E,E,26,[[["self"],["i32"]],[["usize"],["vec",["usize"]]]]],[11,R[230],E,E,26,[[["usize"],["self"],["i32"]],["vec"]]],[11,R[231],E,E,26,[[["self"],["i32"]],[["vec",["vec"]],["vec"]]]],[11,"name",R[88],E,45,[[["self"]],["str"]]],[11,R[80],E,E,45,[[["self"]],[["arc",[R[69]]],[R[69]]]]],[11,R[11],E,E,45,[[["self"]],["i32"]]],[11,R[79],E,E,45,[[["self"],["i32"]]]],[11,R[26],E,E,45,[[["self"],["i32"]],["usize"]]],[11,R[147],E,E,45,[[["usize"],["self"],["i32"]],[R[23]]]],[11,"is_unit",E,E,45,[[["self"]],["bool"]]],[11,R[238],E,E,45,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,R[239],E,E,45,[[["self"]],["bool"]]],[11,R[240],E,E,45,[[["usize"],["i32"],["self"]],[R[33]]]],[11,R[80],E,E,48,[[["self"]],[["arc",[R[69]]],[R[69]]]]],[11,R[11],E,E,48,[[["self"]],["i32"]]],[11,"name",E,E,48,[[["self"]],["str"]]],[11,R[79],E,E,48,[[["self"],["i32"]]]],[11,R[26],E,E,48,[[["self"],["i32"]],["usize"]]],[11,R[238],E,E,48,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,R[147],E,E,48,[[["usize"],["self"],["i32"]],[R[23]]]],[11,R[80],E,E,49,[[["self"]],[["arc",[R[69]]],[R[69]]]]],[11,"name",E,E,49,[[["self"]],["str"]]],[11,R[11],E,E,49,[[["self"]],["i32"]]],[11,R[79],E,E,49,[[["self"],["i32"]]]],[11,R[26],E,E,49,[[["self"],["i32"]],["usize"]]],[11,R[238],E,E,49,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,R[147],E,E,49,[[["usize"],["self"],["i32"]],[R[23]]]],[11,R[80],E,E,50,[[["self"]],[["arc",[R[69]]],[R[69]]]]],[11,"name",E,E,50,[[["self"]],["str"]]],[11,R[11],E,E,50,[[["self"]],["i32"]]],[11,R[79],E,E,50,[[["self"],["i32"]]]],[11,R[26],E,E,50,[[["self"],["i32"]],["usize"]]],[11,R[238],E,E,50,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,R[147],E,E,50,[[["usize"],["self"],["i32"]],[R[23]]]],[11,"name",E,E,51,[[["self"]],["str"]]],[11,R[80],E,E,51,[[["self"]],[["arc",[R[69]]],[R[69]]]]],[11,R[11],E,E,51,[[["self"]],["i32"]]],[11,R[26],E,E,51,[[["self"],["i32"]],["usize"]]],[11,R[147],E,E,51,[[["usize"],["self"],["i32"]],[R[23]]]],[11,R[238],E,E,51,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,R[80],E,E,47,[[["self"]],[["arc",[R[69]]],[R[69]]]]],[11,"name",E,E,47,[[["self"]],["str"]]],[11,R[11],E,E,47,[[["self"]],["i32"]]],[11,R[79],E,E,47,[[["self"],["i32"]]]],[11,R[26],E,E,47,[[["self"],["i32"]],["usize"]]],[11,R[238],E,E,47,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,R[147],E,E,47,[[["usize"],["self"],["i32"]],[R[23]]]],[11,R[80],E,E,53,[[["self"]],[["arc",[R[69]]],[R[69]]]]],[11,"name",E,E,53,[[["self"]],["str"]]],[11,R[11],E,E,53,[[["self"]],["i32"]]],[11,R[79],E,E,53,[[["self"],["i32"]]]],[11,R[26],E,E,53,[[["self"],["i32"]],["usize"]]],[11,R[238],E,E,53,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,"act",E,E,53,[[[R[33]],["u32"],["i32"],["usize"],[R[33]],["self"]]]],[11,R[147],E,"TODO: Implement",53,[[["usize"],["self"],["i32"]],[R[23]]]],[11,R[80],E,E,54,[[["self"]],[["arc",[R[69]]],[R[69]]]]],[11,"name",E,E,54,[[["self"]],["str"]]],[11,R[11],E,E,54,[[["self"]],["i32"]]],[11,R[79],E,E,54,[[["self"],["i32"]]]],[11,R[26],E,E,54,[[["self"],["i32"]],["usize"]]],[11,R[238],E,E,54,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,R[147],E,E,54,[[["usize"],["self"],["i32"]],[R[23]]]],[11,"name",E,E,46,[[["self"]],["str"]]],[11,R[80],E,E,46,[[["self"]],[["arc",[R[69]]],[R[69]]]]],[11,R[11],E,E,46,[[["self"]],["i32"]]],[11,R[26],E,E,46,[[["self"],["i32"]],["usize"]]],[11,R[147],E,E,46,[[["usize"],["self"],["i32"]],[R[23]]]],[11,R[238],E,E,46,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,R[80],E,E,57,[[["self"]],[["arc",[R[69]]],[R[69]]]]],[11,"name",E,E,57,[[["self"]],["str"]]],[11,R[11],E,E,57,[[["self"]],["i32"]]],[11,R[79],E,E,57,[[["self"],["i32"]]]],[11,R[26],E,E,57,[[["self"],["i32"]],["usize"]]],[11,R[238],E,E,57,[[[R[33]],["u32"],["i32"],["usize"],["self"]]]],[11,R[147],E,E,57,[[["usize"],["self"],["i32"]],[R[23]]]],[11,"is_unit",E,E,57,[[["self"]],["bool"]]],[11,"prime",E,E,57,[[["self"]],["u32"]]],[11,R[239],E,E,57,[[["self"]],["bool"]]],[11,R[240],E,E,57,[[["usize"],["i32"],["self"]],[R[33]]]],[11,"act",E,E,57,[[[R[33]],["u32"],["i32"],["usize"],[R[33]],["self"]]]],[11,R[241],E,E,57,[[[R[33]],["u32"],["i32"],[R[33]],["self"]]]],[11,R[242],E,E,57,[[["self"],["i32"]],[R[23]]]],[11,R[148],E,E,57,[[[R[33]],["self"],["i32"]],[R[23]]]],[11,"drop",R[179],E,10,[[["self"]]]],[11,"drop",R[181],E,19,[[["self"]]]],[11,"from",R[179],E,12,[[[R[245]]],[R[33]]]],[11,"from",E,E,12,[[[R[246]]],[R[33]]]],[11,"from",E,E,12,[[[R[247]]],[R[33]]]],[11,"from",E,E,12,[[[R[248]]],[R[33]]]],[11,"from",R[57],E,26,[[[R[71]]],[R[69]]]],[11,"from",E,E,26,[[[R[70]]],[R[69]]]],[11,"from",E,E,26,[[["field"]],[R[69]]]],[11,"from",R[122],E,65,[[[R[129],[R[176]]],[R[176]]],["self"]]],[11,"from",E,E,65,[[[R[176]],["fpmodulehomomorphism",[R[176]]]],["self"]]],[11,"from",R[88],E,57,[[[R[150]]],[R[176]]]],[11,"from",E,E,57,[[[R[243]]],[R[176]]]],[11,"from",E,E,57,[[[R[149]]],[R[176]]]],[11,"from",R[159],E,78,[[[R[178]]],[R[158]]]],[11,"next",R[179],E,9,[[["self"]],[R[4]]]],[11,"next",R[184],E,34,[[["self"]],[R[4]]]],[11,"clone",R[179],E,3,[[["self"]],[R[244]]]],[11,"clone",E,E,12,[[["self"]],[R[33]]]],[11,"clone",E,E,4,[[["self"]],[R[32]]]],[11,"clone",E,E,5,[[["self"]],[R[245]]]],[11,"clone",E,E,6,[[["self"]],[R[246]]]],[11,"clone",E,E,7,[[["self"]],[R[247]]]],[11,"clone",E,E,8,[[["self"]],[R[248]]]],[11,"clone",R[181],E,14,[[["self"]],[R[45]]]],[11,"clone",E,E,15,[[["self"]],[R[41]]]],[11,"clone",R[183],E,28,[[["self"]],[R[54]]]],[11,"clone",R[184],E,31,[[["self"]],["qpart"]]],[11,"clone",E,E,32,[[["self"]],[R[64]]]],[11,"clone",R[187],E,39,[[["self"]],[R[249]]]],[11,"clone",E,E,40,[[["self"]],[R[74]]]],[11,"clone",E,E,41,[[["self"]],[R[75]]]],[11,"clone",E,E,42,[[["self"]],[R[73]]]],[11,"clone",R[194],E,91,[[["self"]],["cocycle"]]],[11,"default",R[184],E,31,[[],["qpart"]]],[11,R[250],R[181],E,14,[[["self"]]]],[11,R[250],R[88],E,57,[[["self"]]]],[11,"eq",R[179],E,12,[[["self"]],["bool"]]],[11,"eq",R[181],E,14,[[["self"],[R[45]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[45]]],["bool"]]],[11,"eq",R[183],E,28,[[["self"]],["bool"]]],[11,"eq",R[184],E,32,[[["self"]],["bool"]]],[11,"eq",R[88],E,45,[[["self"]],["bool"]]],[11,"eq",E,E,48,[[["self"]],["bool"]]],[11,"eq",E,E,46,[[["self"]],["bool"]]],[11,"eq",E,E,57,[[[R[176]],["self"]],["bool"]]],[11,"ne",E,E,57,[[[R[176]],["self"]],["bool"]]],[11,"fmt",R[179],E,12,[[["self"],[R[16]]],[[R[0],["error"]],["error"]]]],[11,"fmt",R[181],E,14,[[["self"],[R[16]]],[[R[0],["error"]],["error"]]]],[11,"fmt",R[183],E,28,[[["self"],[R[16]]],[[R[0],["error"]],["error"]]]],[11,"fmt",R[184],E,32,[[["self"],[R[16]]],[[R[0],["error"]],["error"]]]],[11,"fmt",R[57],E,25,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",R[187],E,38,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",R[188],E,95,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,44,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",R[88],E,55,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,56,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",R[24],E,2,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",R[179],E,12,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,4,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,5,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,6,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,7,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,8,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,11,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",R[181],E,14,[[["self"],[R[16]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,15,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,16,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",R[182],E,20,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,21,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,22,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",R[183],E,28,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",R[184],E,32,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",R[57],E,23,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,24,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,25,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",R[187],E,39,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,40,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,41,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,42,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,38,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",R[188],E,95,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,44,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",R[190],E,59,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",R[191],E,60,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",R[88],E,55,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",E,E,56,[[["self"],[R[16]]],[R[0]]]],[11,"fmt",R[24],E,2,[[["self"],[R[16]]],[R[0]]]],[11,"deref",R[179],E,10,[[["self"]],[R[33]]]],[11,"deref",R[181],E,14,[[["self"]]]],[11,"deref",E,E,17,[[["self"]],[R[45]]]],[11,"deref",E,E,18,[[["self"]],[R[45]]]],[11,"deref",E,E,19,[[["self"]],[R[45]]]],[11,"deref",R[183],E,27,[[["self"]],["vec"]]],[11,R[17],R[179],E,10,[[["self"]],[R[33]]]],[11,R[17],R[181],E,14,[[["self"]]]],[11,R[17],E,E,17,[[["self"]],[R[45]]]],[11,R[17],E,E,18,[[["self"]],[R[45]]]],[11,R[17],E,E,19,[[["self"]],[R[45]]]],[11,"index",E,E,14,[[["self"],["usize"]]]],[11,R[18],E,E,14,[[["self"],["usize"]]]],[11,"hash",R[183],E,28,[[["self"],["h"]]]],[11,"hash",R[184],E,32,[[["self"],["h"]]]],[11,R[6],R[179],E,12,[[],[[R[0],[R[245]]],[R[245]]]]],[11,R[6],E,E,12,[[],[[R[0],[R[246]]],[R[246]]]]],[11,R[6],E,E,12,[[],[[R[247]],[R[0],[R[247]]]]]],[11,R[6],E,E,12,[[],[[R[248]],[R[0],[R[248]]]]]],[11,R[6],R[57],E,26,[[],[[R[71]],[R[0],[R[71]]]]]],[11,R[6],E,E,26,[[],[[R[0],[R[70]]],[R[70]]]]],[11,R[6],E,E,26,[[],[["field"],[R[0],["field"]]]]],[11,R[6],R[88],E,57,[[],[[R[150]],[R[0],[R[150]]]]]],[11,R[6],E,E,57,[[],[[R[243]],[R[0],[R[243]]]]]],[11,R[6],E,E,57,[[],[[R[149]],[R[0],[R[149]]]]]],[11,R[251],R[57],E,25,[[["self"]],["str"]]],[11,R[251],R[187],E,38,[[["self"]],["str"]]],[11,R[251],R[188],E,95,[[["self"]],["str"]]],[11,R[251],E,E,44,[[["self"]],["str"]]],[11,R[251],R[88],E,55,[[["self"]],["str"]]],[11,R[251],E,E,56,[[["self"]],["str"]]],[11,R[251],R[24],E,2,[[["self"]],["str"]]],[11,R[252],R[179],E,12,[[["s"],["self"]],[R[0]]]],[11,R[253],E,E,12,[[["d"]],[R[0]]]],[11,R[253],R[57],E,23,[[["__d"]],[R[0]]]],[11,R[253],E,E,24,[[["__d"]],[R[0]]]],[11,R[253],R[191],E,60,[[["__d"]],[R[0]]]],[11,"save",R[179],E,12,[[["self"]],[R[0]]]],[11,"save",R[181],E,14,[[["self"]],[R[0]]]],[11,"save",E,E,15,[[["self"]],[R[0]]]],[11,"save",R[88],E,51,[[["self"]],[R[0]]]],[11,"save",R[122],E,61,[[["self"]],[R[0]]]],[11,"save",R[194],E,90,[[["self"]],[R[0]]]],[11,"save",E,E,93,[[["self"]],[R[0]]]],[11,"load",R[179],E,12,[[["u32"]],[R[0]]]],[11,"load",R[181],E,14,[[["u32"]],[R[0]]]],[11,"load",E,E,15,[[["u32"]],[R[0]]]],[11,"load",R[88],E,51,[[],[R[0]]]],[11,"load",R[122],E,61,[[],[R[0]]]],[11,"load",R[194],E,90,[[],[R[0]]]],[11,"load",E,E,93,[[],[R[0]]]],[11,"initialize",R[183],E,27,[[["self"]]]]],"p":[[3,"Config"],[3,R[254]],[3,R[255]],[3,R[256]],[3,R[257]],[3,R[27]],[3,R[28]],[3,R[29]],[3,R[30]],[3,R[258]],[3,R[259]],[3,R[260]],[4,"FpVector"],[8,R[261]],[3,"Matrix"],[3,"Subspace"],[3,R[262]],[3,R[263]],[3,R[264]],[3,R[265]],[3,R[266]],[3,R[267]],[3,R[268]],[3,R[269]],[3,R[270]],[3,R[271]],[4,R[272]],[3,R[56]],[3,R[273]],[3,R[53]],[3,R[274]],[3,"QPart"],[3,R[275]],[3,R[59]],[3,R[276]],[3,"Field"],[8,"Algebra"],[8,R[277]],[3,R[278]],[4,R[279]],[4,R[280]],[4,R[281]],[4,R[282]],[3,R[283]],[3,R[284]],[3,R[84]],[3,R[86]],[3,R[113]],[3,R[85]],[3,R[96]],[3,R[99]],[3,R[108]],[3,R[105]],[3,R[115]],[3,R[116]],[3,R[285]],[3,R[286]],[4,R[287]],[3,R[288]],[3,R[289]],[3,"RPSpec"],[3,R[121]],[3,R[125]],[3,R[130]],[3,R[126]],[3,R[143]],[3,R[141]],[3,R[134]],[3,R[135]],[3,R[138]],[3,R[139]],[8,R[144]],[4,"FMHI"],[8,R[290]],[8,R[291]],[8,R[292]],[8,"Module"],[8,R[293]],[3,R[160]],[3,R[161]],[3,R[162]],[3,R[294]],[4,R[295]],[3,R[296]],[3,R[297]],[3,R[298]],[8,R[299]],[8,R[300]],[8,R[301]],[8,R[302]],[3,R[303]],[3,"Cocycle"],[3,"SelfMap"],[3,R[304]],[3,R[305]],[3,R[306]]]};
searchIndex["saveload"]={"doc":"This crate provides a simple interface for saving and…","i":[[0,"default_impl","saveload",E,N,N],[8,"Save",E,E,N,N],[10,"save",E,"Example ``` # use saveload::{Save, Load}; # use…",0,[[["self"]],[R[0]]]],[8,"Load",E,E,N,N],[16,"AuxData",E,"The type of the auxiliary data needed for loading.",1,N],[10,"load",E,"The auxiliary data is a borrow. This is useful for…",1,[[],[R[0]]]]],"p":[[8,"Save"],[8,"Load"]]};
searchIndex["thread_token"]={"doc":E,"i":[[3,R[10],"thread_token","A `TokenBucket` is a bucket containing a fixed number of…",N,N],[12,"max_threads",E,E,0,N],[12,"running_threads",E,E,0,N],[12,"condvar",E,E,0,N],[3,"Token",E,"A `Token` is what `TokenBucket::take_token` returns. The…",N,N],[12,"bucket",E,E,1,N],[11,"new",E,"Constructs a new `TokenBucket` with a fixed number of…",0,[[["usize"]],["self"]]],[11,"take_token",E,"Attempts to take a token from the bucket. This will block…",0,[[["self"]],[R[3]]]],[11,"recv_or_release",E,R[2],0,[[[R[4]],["self"],[R[3]]],[R[3]]]],[11,"recv2_or_release",E,R[2],0,[[[R[3]],["self"],[R[4]]],[R[3]]]],[11,"release_token",E,E,0,[[["self"]]]],[11,"release",E,"This function does not do anything. It simply takes…",1,[[]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[5],E,E,0,[[[U]],[R[0]]]],[11,R[6],E,E,0,[[],[R[0]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[R[20]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[5],E,E,1,[[[U]],[R[0]]]],[11,R[6],E,E,1,[[],[R[0]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[R[20]]]],[11,"drop",E,E,1,[[["self"]]]]],"p":[[3,R[10]],[3,"Token"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);