var searchIndex={};
searchIndex["algebra"] = {"doc":"","i":[[3,"AdemAlgebra","algebra","",null,null],[12,"p","","",0,null],[12,"name","","",0,null],[12,"generic","","",0,null],[12,"unstable","","",0,null],[12,"next_degree","","",0,null],[12,"even_basis_table","","",0,null],[12,"basis_table","","",0,null],[12,"basis_element_to_index_map","","",0,null],[12,"multiplication_table","","",0,null],[12,"sort_order","","",0,null],[3,"MilnorAlgebra","","",null,null],[12,"profile","","",1,null],[12,"name","","",1,null],[12,"next_degree","","",1,null],[12,"p","","",1,null],[12,"generic","","",1,null],[12,"ppart_table","","",1,null],[12,"qpart_table","","",1,null],[12,"basis_table","","",1,null],[12,"basis_element_to_index_map","","",1,null],[3,"Field","","",null,null],[12,"prime","","",2,null],[4,"SteenrodAlgebra","","",null,null],[13,"AdemAlgebra","","",3,null],[13,"MilnorAlgebra","","",3,null],[0,"algebra","","",null,null],[0,"combinatorics","algebra::algebra","",null,null],[5,"adem_relation_coefficient","algebra::algebra::combinatorics","",null,[[["u32"],["validprime"]],["u32"]]],[5,"inadmissible_pairs","","",null,[[["i32"],["validprime"],["bool"]],["vec"]]],[5,"tau_degrees","","",null,[[["validprime"]]]],[5,"xi_degrees","","",null,[[["validprime"]]]],[7,"XI_DEGREES","","",null,null],[7,"TAU_DEGREES","","",null,null],[17,"MAX_XI_TAU","","",null,null],[0,"algebra_trait","algebra::algebra","",null,null],[8,"Algebra","algebra::algebra::algebra_trait","A graded algebra over F_p, finite dimensional in each…",null,null],[10,"algebra_type","","The \"type\" of the algebra, which is \"adem\" or \"milnor\".…",4,[[["self"]],["str"]]],[10,"prime","","Returns the prime the algebra is over.",4,[[["self"]],["validprime"]]],[11,"name","","",4,[[["self"]],["str"]]],[10,"compute_basis","","Computes the list of basis elements up to and including…",4,[[["self"],["i32"]]]],[10,"max_degree","","",4,[[["self"]],["i32"]]],[10,"dimension","","Gets the dimension of the algebra in degree `degree`.",4,[[["self"],["i32"]],["usize"]]],[10,"multiply_basis_elements","","Computes the product `r * s` of the two basis elements,…",4,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[11,"multiply_basis_element_by_element","","",4,[[["fpvector"],["u32"],["i32"],["usize"],["self"],["fpvector"]]]],[11,"multiply_element_by_basis_element","","",4,[[["fpvector"],["u32"],["i32"],["usize"],["self"],["fpvector"]]]],[11,"multiply_element_by_element","","",4,[[["fpvector"],["u32"],["i32"],["self"],["fpvector"]]]],[11,"default_filtration_one_products","","A filtration one element in Ext(k, k) is the same as an…",4,[[["self"]],["vec"]]],[11,"json_to_basis","","Converts a JSON object into a basis element. The way basis…",4,[[["value"],["self"]]]],[11,"json_from_basis","","",4,[[["usize"],["self"],["i32"]],["value"]]],[11,"basis_element_to_string","","Converts a basis element into a string for display.",4,[[["usize"],["self"],["i32"]],["string"]]],[11,"element_to_string","","Converts an element into a string for display.",4,[[["fpvector"],["self"],["i32"]],["string"]]],[11,"generators","","Given a degree `degree`, the function returns a list of…",4,[[["self"],["i32"]],[["usize"],["vec",["usize"]]]]],[11,"generator_to_string","","This returns the name of a generator. Note that the index…",4,[[["usize"],["self"],["i32"]],["string"]]],[11,"string_to_generator","","This parses a string and returns the generator described…",4,[[["str"],["self"]],[["str"],["iresult",["str"]]]]],[11,"decompose_basis_element","","Given a non-generator basis element of the algebra,…",4,[[["usize"],["self"],["i32"]],["vec"]]],[11,"relations_to_check","","Get any relations that the algebra wants checked to ensure…",4,[[["self"],["i32"]],[["vec"],["vec",["vec"]]]]],[0,"steenrod_algebra","algebra::algebra","",null,null],[3,"MilnorProfileOption","algebra::algebra::steenrod_algebra","",null,null],[12,"truncated","","",5,null],[12,"q_part","","",5,null],[12,"p_part","","",5,null],[3,"AlgebraSpec","","",null,null],[12,"p","","",6,null],[12,"algebra","","",6,null],[12,"profile","","",6,null],[3,"InvalidAlgebraError","","",null,null],[12,"name","","",7,null],[4,"SteenrodAlgebra","","",null,null],[13,"AdemAlgebra","","",3,null],[13,"MilnorAlgebra","","",3,null],[17,"_IMPL_DESERIALIZE_FOR_MilnorProfileOption","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_AlgebraSpec","","",null,null],[11,"from_json","algebra","",3,[[["string"],["value"]],[["result",["steenrodalgebra","box"]],["steenrodalgebra"],["box",["error"]]]]],[11,"to_json","","",3,[[["value"],["self"]]]],[0,"bialgebra_trait","algebra::algebra","",null,null],[8,"Bialgebra","algebra::algebra::bialgebra_trait","",null,null],[10,"decompose","","This function decomposes an element of the algebra as a…",8,[[["usize"],["self"],["i32"]],["vec"]]],[10,"coproduct","","Expresses Delta(x) as sum_j (A_{ij} (x) B_{ij}). Here x…",8,[[["usize"],["self"],["i32"]],["vec"]]],[0,"adem_algebra","algebra::algebra","",null,null],[3,"BOCKSTEIN_TABLE","algebra::algebra::adem_algebra","",null,null],[12,"__private_field","","",9,null],[3,"AdemBasisElement","","The format of the AdemBasisElement is as follows. To…",null,null],[12,"degree","","",10,null],[12,"excess","","",10,null],[12,"bocksteins","","",10,null],[12,"ps","","",10,null],[3,"AdemAlgebra","","",null,null],[12,"p","","",0,null],[12,"name","","",0,null],[12,"generic","","",0,null],[12,"unstable","","",0,null],[12,"next_degree","","",0,null],[12,"even_basis_table","","",0,null],[12,"basis_table","","",0,null],[12,"basis_element_to_index_map","","",0,null],[12,"multiplication_table","","",0,null],[12,"sort_order","","",0,null],[5,"adem_basis_element_excess_sort_order","","",null,[[["adembasiselement"]],["ordering"]]],[5,"adem_basis_element_length_sort_order","","",null,[[["adembasiselement"]],["ordering"]]],[5,"shift_vec","","",null,[[["isize"],["vec"]]]],[11,"new","algebra","",0,[[["validprime"],["bool"]],["self"]]],[11,"generate_basis_even","","",0,[[["self"],["i32"]]]],[11,"generate_basis_even_degreen","","",0,[[["self"],["i32"]]]],[11,"generate_basis2","","",0,[[["self"],["i32"]]]],[11,"generate_basis_generic","","",0,[[["self"],["i32"]]]],[11,"generate_basis_generic_degreen","","",0,[[["self"],["i32"]]]],[11,"generate_basis_element_to_index_map","","",0,[[["self"],["i32"]]]],[11,"basis_element_from_index","","",0,[[["usize"],["self"],["i32"]],["adembasiselement"]]],[11,"try_basis_element_to_index","","",0,[[["self"],["adembasiselement"]],[["option",["usize"]],["usize"]]]],[11,"basis_element_to_index","","",0,[[["self"],["adembasiselement"]],["usize"]]],[11,"tail_of_basis_element_to_index","","",0,[[["u32"],["adembasiselement"],["self"]],["usize"]]],[11,"generate_multiplication_table_2","","",0,[[["self"],["i32"]]]],[11,"generate_multiplication_table_2_step","","",0,[[["usize"],["i32"],["self"]],["fpvector"]]],[11,"generate_multiplication_table_generic","","",0,[[["self"],["i32"]]]],[11,"generate_multiplication_table_generic_step","","This function expresses $Sq^x$ (current) in terms of the…",0,[[["usize"],["i32"],["self"]],["fpvector"]]],[11,"multiply","","",0,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[11,"make_mono_admissible","","",0,[[["fpvector"],["u32"],["adembasiselement"],["i32"],["self"]]]],[11,"make_mono_admissible_2","","Reduce a Steenrod monomial at the prime 2. # Arguments: *…",0,[[["fpvector"],["adembasiselement"],["i32"],["self"],["bool"]]]],[11,"make_mono_admissible_generic","","",0,[[["fpvector"],["u32"],["adembasiselement"],["i32"],["self"],["bool"]]]],[11,"decompose_basis_element_2","","",0,[[["usize"],["self"],["i32"]],["vec"]]],[11,"decompose_basis_element_generic","","",0,[[["usize"],["self"],["i32"]],["vec"]]],[11,"beps_pn","","",0,[[["u32"],["self"]]]],[0,"milnor_algebra","algebra::algebra","",null,null],[3,"MilnorProfile","algebra::algebra::milnor_algebra","",null,null],[12,"truncated","","",11,null],[12,"q_part","","",11,null],[12,"p_part","","",11,null],[3,"QPart","","",null,null],[12,"degree","","",12,null],[12,"q_part","","",12,null],[3,"MilnorBasisElement","","",null,null],[12,"q_part","","",13,null],[12,"p_part","","",13,null],[12,"degree","","",13,null],[3,"MilnorAlgebra","","",null,null],[12,"profile","","",1,null],[12,"name","","",1,null],[12,"next_degree","","",1,null],[12,"p","","",1,null],[12,"generic","","",1,null],[12,"ppart_table","","",1,null],[12,"qpart_table","","",1,null],[12,"basis_table","","",1,null],[12,"basis_element_to_index_map","","",1,null],[3,"Matrix2D","","",null,null],[12,"cols","","",14,null],[12,"inner","","",14,null],[3,"PPartMultiplier","","",null,null],[12,"p","","",15,null],[12,"M","","",15,null],[12,"r","","",15,null],[12,"rows","","",15,null],[12,"cols","","",15,null],[12,"diag_num","","",15,null],[12,"init","","",15,null],[12,"diagonal","","",15,null],[5,"from_p","","",null,[[["i32"],["u32"],["vec",["u32"]]],["milnorbasiselement"]]],[6,"PPart","","",null,null],[17,"ZERO_QPART","","",null,null],[11,"is_trivial","","",11,[[["self"]],["bool"]]],[11,"new","algebra","",1,[[["validprime"]],["self"]]],[11,"basis_element_from_index","","",1,[[["usize"],["self"],["i32"]],["milnorbasiselement"]]],[11,"try_basis_element_to_index","","",1,[[["milnorbasiselement"],["self"]],[["option",["usize"]],["usize"]]]],[11,"basis_element_to_index","","",1,[[["milnorbasiselement"],["self"]],["usize"]]],[11,"compute_ppart","","",1,[[["self"],["i32"]]]],[11,"compute_qpart","","",1,[[["self"],["i32"]]]],[11,"generate_basis_generic","","",1,[[["self"],["i32"]]]],[11,"generate_basis_2","","",1,[[["self"],["i32"]]]],[11,"try_beps_pn","","",1,[[["u32"],["self"]],["option"]]],[11,"beps_pn","","",1,[[["u32"],["self"]]]],[11,"multiply_qpart","","",1,[[["milnorbasiselement"],["u32"],["self"]],["vec"]]],[11,"multiply","","",1,[[["milnorbasiselement"],["fpvector"],["u32"],["self"]]]],[11,"new","algebra::algebra::milnor_algebra","",14,[[["usize"]],["self"]]],[11,"prime","","",15,[[["self"]],["validprime"]]],[11,"new","","",15,[[["vec"],["validprime"]],["ppartmultiplier"]]],[11,"update","","",15,[[["self"]],["bool"]]],[11,"next","","",15,[[["self"],["milnorbasiselement"]],[["option",["u32"]],["u32"]]]],[11,"decompose_basis_element_qpart","algebra","",1,[[["usize"],["self"],["i32"]],["vec"]]],[11,"decompose_basis_element_ppart","","",1,[[["usize"],["self"],["i32"]],["vec"]]],[11,"increment_p_part","","Returns `true` if the new element is not within the bounds",1,[[["vec"]],["bool"]]],[0,"field","algebra::algebra","",null,null],[3,"Field","algebra::algebra::field","",null,null],[12,"prime","","",2,null],[11,"new","algebra","",2,[[["validprime"]],["self"]]],[0,"change_of_basis","","",null,null],[5,"adem_to_milnor_on_basis","algebra::change_of_basis","",null,[[["fpvector"],["u32"],["i32"],["usize"],["ademalgebra"],["milnoralgebra"]]]],[5,"adem_to_milnor","","",null,[[["fpvector"],["u32"],["i32"],["ademalgebra"],["milnoralgebra"],["fpvector"]]]],[5,"milnor_to_adem_on_basis","","",null,[[["fpvector"],["u32"],["i32"],["usize"],["ademalgebra"],["milnoralgebra"]]]],[5,"milnor_to_adem_on_basis_2","","",null,[[["fpvector"],["u32"],["i32"],["usize"],["ademalgebra"],["milnoralgebra"]]]],[5,"milnor_to_adem_on_basis_generic","","",null,[[["fpvector"],["u32"],["i32"],["usize"],["ademalgebra"],["milnoralgebra"]]]],[5,"milnor_to_adem","","",null,[[["fpvector"],["u32"],["i32"],["ademalgebra"],["milnoralgebra"],["fpvector"]]]],[5,"adem_q","","",null,[[["fpvector"],["u32"],["ademalgebra"],["milnoralgebra"]]]],[5,"adem_plist","","",null,[[["fpvector"],["u32"],["i32"],["ademalgebra"],["milnoralgebra"],["vec",["u32"]]]]],[0,"steenrod_parser","algebra","",null,null],[3,"ParseError","algebra::steenrod_parser","",null,null],[12,"info","","",16,null],[4,"AlgebraBasisElt","","",null,null],[13,"AList","","",17,null],[13,"PList","","",17,null],[13,"P","","",17,null],[13,"Q","","",17,null],[4,"AlgebraParseNode","","",null,null],[13,"Product","","",18,null],[13,"Sum","","",18,null],[13,"BasisElt","","",18,null],[13,"Scalar","","",18,null],[4,"ModuleParseNode","","",null,null],[13,"Act","","",19,null],[13,"Sum","","",19,null],[13,"ModuleBasisElt","","",19,null],[4,"BocksteinOrSq","","",null,null],[13,"Bockstein","","",20,null],[13,"Sq","","",20,null],[5,"digits","","",null,[[["str"]],[["str"],["u32"],["iresult",["str","u32"]]]]],[5,"comma_separated_integer_list","","",null,[[["str"]],[["iresult",["str","vec"]],["str"],["vec",["u32"]]]]],[5,"comma_separated_sequence","","",null,[[["str"]],[["iresult",["str","vec"]],["str"],["vec",["u32"]]]]],[5,"space_separated_integer_list","","",null,[[["str"]],[["iresult",["str","vec"]],["str"],["vec",["u32"]]]]],[5,"space_separated_sequence","","",null,[[["str"]],[["iresult",["str","vec"]],["str"],["vec",["u32"]]]]],[5,"bockstein_b","","",null,[[["str"]],[["str"],["iresult",["str","bocksteinorsq"]],["bocksteinorsq"]]]],[5,"sq_digits","","",null,[[["str"]],[["str"],["iresult",["str","bocksteinorsq"]],["bocksteinorsq"]]]],[5,"space_separated_bockstein_or_sq_list","","",null,[[["str"]],[["str"],["vec",["bocksteinorsq"]],["iresult",["str","vec"]]]]],[5,"space_separated_bockstein_or_sq_sequence","","",null,[[["str"]],[["str"],["vec",["bocksteinorsq"]],["iresult",["str","vec"]]]]],[5,"algebra_generator","","",null,[[["str"]],[["str"],["iresult",["str","algebraparsenode"]],["algebraparsenode"]]]],[5,"scalar","","",null,[[["str"]],[["str"],["iresult",["str","algebraparsenode"]],["algebraparsenode"]]]],[5,"algebra_parens","","",null,[[["str"]],[["str"],["iresult",["str","algebraparsenode"]],["algebraparsenode"]]]],[5,"algebra_factor","","",null,[[["str"]],[["str"],["iresult",["str","algebraparsenode"]],["algebraparsenode"]]]],[5,"algebra_term","","",null,[[["str"]],[["str"],["iresult",["str","algebraparsenode"]],["algebraparsenode"]]]],[5,"algebra_expr","","",null,[[["str"]],[["str"],["iresult",["str","algebraparsenode"]],["algebraparsenode"]]]],[5,"module_generator","","",null,[[["str"]],[["str"],["iresult",["str","moduleparsenode"]],["moduleparsenode"]]]],[5,"module_parens","","",null,[[["str"]],[["str"],["iresult",["str","moduleparsenode"]],["moduleparsenode"]]]],[5,"module_factor","","",null,[[["str"]],[["str"],["iresult",["str","moduleparsenode"]],["moduleparsenode"]]]],[5,"module_term","","",null,[[["str"]],[["str"],["iresult",["str","moduleparsenode"]],["moduleparsenode"]]]],[5,"module_expr","","",null,[[["str"]],[["str"],["iresult",["str","moduleparsenode"]],["moduleparsenode"]]]],[5,"parse_algebra","","",null,[[["str"]],[["box",["error"]],["algebraparsenode"],["result",["algebraparsenode","box"]]]]],[5,"parse_module","","",null,[[["str"]],[["moduleparsenode"],["result",["moduleparsenode","box"]],["box",["error"]]]]],[0,"steenrod_evaluator","algebra","",null,null],[3,"SteenrodCalculator","algebra::steenrod_evaluator","",null,null],[12,"adem_algebra","","",21,null],[12,"milnor_algebra","","",21,null],[3,"DegreeError","","",null,null],[3,"UnknownBasisElementError","","",null,null],[12,"name","","",22,null],[5,"evaluate_algebra_adem","","",null,[[["str"],["ademalgebra"],["milnoralgebra"]],[["box",["error"]],["result",["box"]]]]],[5,"evaluate_algebra_milnor","","",null,[[["str"],["ademalgebra"],["milnoralgebra"]],[["box",["error"]],["result",["box"]]]]],[5,"evaluate_algebra_tree","","",null,[[["ademalgebra"],["milnoralgebra"],["algebraparsenode"]],[["box",["error"]],["result",["box"]]]]],[5,"evaluate_algebra_tree_helper","","",null,[[["option",["i32"]],["i32"],["ademalgebra"],["milnoralgebra"],["algebraparsenode"]],[["box",["error"]],["result",["box"]]]]],[5,"evaluate_basis_element","","",null,[[["algebrabasiselt"],["option",["i32"]],["i32"],["ademalgebra"],["milnoralgebra"]],[["box",["error"]],["result",["box"]]]]],[5,"evaluate_module","","",null,[[["str"],["hashmap"],["m"],["ademalgebra"],["milnoralgebra"]],[["box",["error"]],["result",["box"]]]]],[5,"evaluate_module_tree","","",null,[[["moduleparsenode"],["hashmap"],["m"],["ademalgebra"],["milnoralgebra"]],[["box",["error"]],["result",["box"]]]]],[5,"evaluate_module_tree_helper","","",null,[[["option",["i32"]],["hashmap"],["m"],["i32"],["ademalgebra"],["milnoralgebra"],["moduleparsenode"]],[["box",["error"]],["result",["box"]]]]],[5,"evaluate_module_basis_element","","",null,[[["option",["i32"]],["hashmap"],["m"],["i32"],["ademalgebra"],["milnoralgebra"],["string"]],[["box",["error"]],["result",["box"]]]]],[5,"bockstein_or_sq_to_adem_basis_elt","","",null,[[["bocksteinorsq"],["i32"]],["adembasiselement"]]],[5,"evaluate_p_or_b_list","","",null,[[["ademalgebra"]]]],[11,"new","","",21,[[["validprime"]],["self"]]],[11,"compute_basis","","",21,[[["self"],["i32"]]]],[11,"evaluate_adem_to_string","","",21,[[["str"],["self"]],[["string"],["box",["error"]],["result",["string","box"]]]]],[11,"evaluate_milnor_to_string","","",21,[[["str"],["self"]],[["string"],["box",["error"]],["result",["string","box"]]]]],[11,"evaluate_adem","","",21,[[["str"],["self"]],[["box",["error"]],["result",["box"]]]]],[11,"evaluate_milnor","","",21,[[["str"],["self"]],[["box",["error"]],["result",["box"]]]]],[0,"module","algebra","",null,null],[3,"FDModule","algebra::module","",null,null],[12,"algebra","","",23,null],[12,"name","","",23,null],[12,"graded_dimension","","",23,null],[12,"gen_names","","",23,null],[12,"actions","","",23,null],[3,"FPModule","","",null,null],[12,"name","","",24,null],[12,"min_degree","","",24,null],[12,"generators","","",24,null],[12,"relations","","",24,null],[12,"map","","",24,null],[12,"index_table","","",24,null],[3,"FreeModule","","",null,null],[12,"algebra","","",25,null],[12,"name","","",25,null],[12,"min_degree","","",25,null],[12,"lock","","",25,null],[12,"gen_names","","",25,null],[12,"gen_deg_idx_to_internal_idx","","",25,null],[12,"table","","",25,null],[3,"FreeModuleTableEntry","","",null,null],[12,"num_gens","","",26,null],[12,"basis_element_to_opgen","","",26,null],[12,"generator_to_index","","",26,null],[3,"OperationGeneratorPair","","",null,null],[12,"operation_degree","","",27,null],[12,"operation_index","","",27,null],[12,"generator_degree","","",27,null],[12,"generator_index","","",27,null],[3,"HomModule","","",null,null],[12,"algebra","","",28,null],[12,"source","","",28,null],[12,"target","","",28,null],[12,"block_structures","","",28,null],[3,"QuotientModule","","Given a module `module`, this is the quotient of `module`…",null,null],[12,"module","","",29,null],[12,"subspaces","","",29,null],[12,"basis_list","","",29,null],[3,"RealProjectiveSpace","","This is $\\mathbb{RP}_{\\mathrm{min}}^{\\mathrm{max}}$. The…",null,null],[12,"algebra","","",30,null],[12,"min","","",30,null],[12,"clear_bottom","","",30,null],[12,"max","","",30,null],[3,"SumModule","","",null,null],[12,"algebra","","",31,null],[12,"min_degree","","",31,null],[12,"modules","","",31,null],[12,"block_structures","","",31,null],[3,"TensorModule","","",null,null],[12,"left","","",32,null],[12,"right","","",32,null],[12,"block_structures","","",32,null],[3,"TruncatedModule","","A module M where we quotient out everything above degree…",null,null],[12,"module","","",33,null],[12,"truncation","","",33,null],[3,"ModuleFailedRelationError","","",null,null],[12,"relation","","",34,null],[12,"value","","",34,null],[4,"FiniteModule","","",null,null],[13,"FDModule","","",35,null],[13,"FPModule","","",35,null],[13,"RealProjectiveSpace","","",35,null],[0,"finite_dimensional_module","","",null,null],[3,"FiniteDimensionalModule","algebra::module::finite_dimensional_module","",null,null],[12,"algebra","","",23,null],[12,"name","","",23,null],[12,"graded_dimension","","",23,null],[12,"gen_names","","",23,null],[12,"actions","","",23,null],[11,"test_equal","algebra::module","",23,[[["self"]],[["result",["string"]],["string"]]]],[11,"new","","",23,[[["arc"],["string"],["usize"],["bivec",["usize"]]],["self"]]],[11,"set_basis_element_name","","",23,[[["string"],["usize"],["i32"],["self"]]]],[11,"module_gens_from_json","","",23,[[["value"]]]],[11,"allocate_actions","","",23,[[["bivec"],["arc"]],[["bivec",["bivec"]],["bivec",["vec"]]]]],[11,"add_generator","","",23,[[["self"],["string"],["i32"]]]],[11,"string_to_basis_element","","",23,[[["str"],["self"]],["option"]]],[11,"set_action_vector","","",23,[[["usize"],["i32"],["self"],["fpvector"]]]],[11,"set_action","","",23,[[["u32"],["usize"],["i32"],["self"],["vec",["u32"]]]]],[11,"action","","This function will panic if you call it with input such…",23,[[["usize"],["i32"],["self"]],["fpvector"]]],[11,"action_mut","","This function will panic if you call it with input such…",23,[[["usize"],["i32"],["self"]],["fpvector"]]],[11,"from_json","","",23,[[["arc"],["value"]],["self"]]],[11,"to_json","","",23,[[["value"],["self"]]]],[11,"parse_action","","",23,[[["str"],["hashmap"],["self"],["bool"]],[["genericerror"],["result",["genericerror"]]]]],[11,"parse_element","","",23,[[["str"],["fpvector"],["i32"],["self"]],[["genericerror"],["result",["genericerror"]]]]],[11,"take_element","","",23,[[["str"]],[["str"],["iresult",["str"]]]]],[11,"check_validity","","",23,[[["self"],["i32"]],[["result",["modulefailedrelationerror"]],["modulefailedrelationerror"]]]],[11,"extend_actions","","",23,[[["self"],["i32"]]]],[11,"minimal_actions_to_json","","",23,[[["self"]],["value"]]],[11,"to_minimal_json","","",23,[[["self"]],["value"]]],[11,"actions_to_json","","",23,[[["self"]],["value"]]],[11,"gens_to_json","","",23,[[["self"]],["value"]]],[0,"finite_module","","",null,null],[3,"UnknownModuleTypeError","algebra::module::finite_module","",null,null],[12,"module_type","","",36,null],[4,"FiniteModule","","",null,null],[13,"FDModule","","",35,null],[13,"FPModule","","",35,null],[13,"RealProjectiveSpace","","",35,null],[11,"from_json","algebra::module","",35,[[["arc",["steenrodalgebra"]],["steenrodalgebra"],["value"]],[["result",["box"]],["box",["error"]]]]],[11,"to_json","","",35,[[["value"],["self"]]]],[11,"type_","","",35,[[["self"]],["str"]]],[11,"is_real_projective_space","","",35,[[["self"]],["bool"]]],[11,"is_fp_module","","",35,[[["self"]],["bool"]]],[11,"is_fd_module","","",35,[[["self"]],["bool"]]],[11,"into_real_projective_space","","",35,[[],[["option",["realprojectivespace"]],["realprojectivespace"]]]],[11,"into_fp_module","","",35,[[],[["option",["fpmodule"]],["fpmodule",["steenrodalgebra"]]]]],[11,"into_fd_module","","",35,[[],[["option",["fdmodule"]],["fdmodule",["steenrodalgebra"]]]]],[11,"as_real_projective_space","","",35,[[["self"]],[["realprojectivespace"],["option",["realprojectivespace"]]]]],[11,"as_fp_module","","",35,[[["self"]],[["fpmodule"],["option",["fpmodule"]]]]],[11,"as_fd_module","","",35,[[["self"]],[["option",["fdmodule"]],["fdmodule"]]]],[0,"finitely_presented_module","","",null,null],[3,"FPMIndexTable","algebra::module::finitely_presented_module","",null,null],[12,"gen_idx_to_fp_idx","","",37,null],[12,"fp_idx_to_gen_idx","","",37,null],[3,"FinitelyPresentedModule","","",null,null],[12,"name","","",24,null],[12,"min_degree","","",24,null],[12,"generators","","",24,null],[12,"relations","","",24,null],[12,"map","","",24,null],[12,"index_table","","",24,null],[11,"new","algebra::module","",24,[[["arc"],["string"],["i32"]],["self"]]],[11,"add_generators","","",24,[[["string"],["i32"],["vec",["string"]],["self"]]]],[11,"add_relations","","",24,[[["matrix"],["self"],["i32"]]]],[11,"module_gens_from_json","","",24,[[["value"]]]],[11,"from_json","","",24,[[["arc"],["value"]],["self"]]],[11,"to_json","","",24,[[["value"],["self"]]]],[11,"relations_to_json","","",24,[[["self"]],["value"]]],[11,"gen_idx_to_fp_idx","","",24,[[["usize"],["self"],["i32"]],["isize"]]],[11,"fp_idx_to_gen_idx","","",24,[[["usize"],["self"],["i32"]],["usize"]]],[0,"free_module","","",null,null],[3,"OperationGeneratorPair","algebra::module::free_module","",null,null],[12,"operation_degree","","",27,null],[12,"operation_index","","",27,null],[12,"generator_degree","","",27,null],[12,"generator_index","","",27,null],[3,"FreeModuleTableEntry","","",null,null],[12,"num_gens","","",26,null],[12,"basis_element_to_opgen","","",26,null],[12,"generator_to_index","","",26,null],[3,"FreeModule","","",null,null],[12,"algebra","","",25,null],[12,"name","","",25,null],[12,"min_degree","","",25,null],[12,"lock","","",25,null],[12,"gen_names","","",25,null],[12,"gen_deg_idx_to_internal_idx","","",25,null],[12,"table","","",25,null],[11,"new","algebra::module","",25,[[["arc"],["string"],["i32"]],["self"]]],[11,"lock","","",25,[[["self"]],["mutexguard"]]],[11,"max_computed_degree","","",25,[[["self"]],["i32"]]],[11,"number_of_gens_in_degree","","",25,[[["self"],["i32"]],["usize"]]],[11,"construct_table","","",25,[[["self"],["i32"]],["freemoduletableentry"]]],[11,"dimension_with_table","","",25,[[["freemoduletableentry"]],["usize"]]],[11,"add_generators","","",25,[[["option",["vec"]],["freemoduletableentry"],["i32"],["usize"],["mutexguard"],["self"],["vec",["string"]]]]],[11,"add_generators_to_table","","",25,[[["usize"],["i32"],["freemoduletableentry"],["self"]]]],[11,"generator_offset","","",25,[[["usize"],["self"],["i32"]],["usize"]]],[11,"operation_generator_to_index","","",25,[[["usize"],["i32"],["self"]],["usize"]]],[11,"operation_generator_pair_to_idx","","",25,[[["operationgeneratorpair"],["self"]],["usize"]]],[11,"index_to_op_gen","","",25,[[["usize"],["self"],["i32"]],["operationgeneratorpair"]]],[11,"element_to_json","","",25,[[["fpvector"],["self"],["i32"]],["value"]]],[11,"add_generators_immediate","","",25,[[["usize"],["i32"],["vec",["string"]],["option",["vec"]],["self"]]]],[11,"add_num_generators","","",25,[[["usize"],["i32"],["vec",["string"]],["mutexguard"],["self"],["option",["vec"]]]]],[11,"extend_by_zero","","",25,[[["self"],["i32"]]]],[11,"get_degrees_with_gens","","",25,[[["self"],["i32"]],[["i32"],["vec",["i32"]]]]],[11,"get_max_generator_degree","","",25,[[["self"]],["i32"]]],[0,"hom_module","","",null,null],[3,"HomModule","algebra::module::hom_module","",null,null],[12,"algebra","","",28,null],[12,"source","","",28,null],[12,"target","","",28,null],[12,"block_structures","","",28,null],[11,"new","algebra::module","",28,[[["arc"],["freemodule"],["arc",["freemodule"]]],["self"]]],[11,"source","","",28,[[["self"]],[["freemodule"],["arc",["freemodule"]]]]],[11,"target","","",28,[[["self"]],["arc"]]],[11,"element_to_homomorphism","","",28,[[["fpvector"],["self"],["i32"]],["freemodulehomomorphism"]]],[11,"evaluate_basis_map_on_element","","",28,[[["fpvector"],["u32"],["i32"],["usize"],["self"],["fpvector"]]]],[0,"quotient_module","","",null,null],[3,"QuotientModule","algebra::module::quotient_module","Given a module `module`, this is the quotient of `module`…",null,null],[12,"module","","",29,null],[12,"subspaces","","",29,null],[12,"basis_list","","",29,null],[11,"new","algebra::module","",29,[[["arc"]],["self"]]],[11,"quotient","","",29,[[["fpvector"],["self"],["i32"]]]],[11,"quotient_basis_elements","","",29,[[["self"],["i32"]]]],[11,"quotient_vectors","","",29,[[["i32"],["vec",["fpvector"]],["self"],["fpvector"]]]],[11,"flush","","",29,[[["self"],["i32"]]]],[11,"quotient_all","","",29,[[["self"],["i32"]]]],[11,"act_on_original_basis","","",29,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[11,"reduce","","",29,[[["fpvector"],["self"],["i32"]]]],[11,"old_basis_to_new","","",29,[[["fpvector"],["i32"],["self"],["fpvector"]]]],[0,"rpn","","",null,null],[3,"RealProjectiveSpace","algebra::module::rpn","This is $\\mathbb{RP}_{\\mathrm{min}}^{\\mathrm{max}}$. The…",null,null],[12,"algebra","","",30,null],[12,"min","","",30,null],[12,"clear_bottom","","",30,null],[12,"max","","",30,null],[3,"RPSpec","","",null,null],[12,"min","","",38,null],[12,"clear_bottom","","",38,null],[12,"max","","",38,null],[5,"coef_adem","","",null,[[["usize"],["i32"],["ademalgebra"]],["bool"]]],[5,"coef_milnor","","",null,[[["usize"],["i32"],["milnoralgebra"]],["bool"]]],[17,"_IMPL_DESERIALIZE_FOR_RPSpec","","",null,null],[11,"new","algebra::module","",30,[[["arc",["steenrodalgebra"]],["option",["i32"]],["i32"],["steenrodalgebra"],["bool"]],["self"]]],[11,"max_degree","","",30,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"from_json","","",30,[[["arc",["steenrodalgebra"]],["steenrodalgebra"],["value"]],[["box",["error"]],["result",["box"]]]]],[11,"to_json","","",30,[[["value"],["self"]]]],[0,"sum_module","","",null,null],[3,"SumModule","algebra::module::sum_module","",null,null],[12,"algebra","","",31,null],[12,"min_degree","","",31,null],[12,"modules","","",31,null],[12,"block_structures","","",31,null],[11,"new","algebra::module","",31,[[["vec",["arc"]],["arc"],["arc"],["i32"]],["self"]]],[11,"get_module_num","","",31,[[["usize"],["self"],["i32"]],["usize"]]],[11,"offset","","",31,[[["usize"],["self"],["i32"]],["usize"]]],[0,"tensor_module","","",null,null],[3,"TensorModule","algebra::module::tensor_module","",null,null],[12,"left","","",32,null],[12,"right","","",32,null],[12,"block_structures","","",32,null],[11,"new","algebra::module","",32,[[["arc"],["arc"]],["self"]]],[11,"seek_module_num","","",32,[[["usize"],["self"],["i32"]],["i32"]]],[11,"offset","","",32,[[["self"],["i32"]],["usize"]]],[11,"act_helper","","",32,[[["fpvector"],["u32"],["i32"],["usize"],["self"],["fpvector"]]]],[0,"truncated_module","","",null,null],[3,"TruncatedModule","algebra::module::truncated_module","A module M where we quotient out everything above degree…",null,null],[12,"module","","",33,null],[12,"truncation","","",33,null],[11,"new","algebra::module","",33,[[["arc"],["i32"]],["self"]]],[0,"zero_module","","",null,null],[8,"ZeroModule","algebra::module::zero_module","",null,null],[10,"zero_module","","",39,[[["arc"],["i32"]],["self"]]],[0,"bounded_module","algebra::module","",null,null],[8,"BoundedModule","algebra::module::bounded_module","",null,null],[10,"max_degree","","`max_degree` is the a degree such that if t >…",40,[[["self"]],["i32"]]],[11,"total_dimension","","",40,[[["self"]],["usize"]]],[11,"to_fd_module","","",40,[[["self"]],["fdmodule"]]],[0,"module_trait","algebra::module","",null,null],[3,"ModuleFailedRelationError","algebra::module::module_trait","",null,null],[12,"relation","","",34,null],[12,"value","","",34,null],[8,"Module","","",null,null],[16,"Algebra","","",41,null],[10,"algebra","","",41,[[["self"]],["arc"]]],[10,"name","","",41,[[["self"]],["string"]]],[10,"min_degree","","",41,[[["self"]],["i32"]]],[11,"compute_basis","","",41,[[["self"],["i32"]]]],[10,"dimension","","",41,[[["self"],["i32"]],["usize"]]],[10,"act_on_basis","","",41,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[10,"basis_element_to_string","","",41,[[["usize"],["self"],["i32"]],["string"]]],[11,"is_unit","","Whether this is the unit module.",41,[[["self"]],["bool"]]],[11,"prime","","",41,[[["self"]],["validprime"]]],[11,"borrow_output","","Whether act_on_basis_borrow is available.",41,[[["self"]],["bool"]]],[11,"act_on_basis_borrow","","Returns a borrow of the value of the corresponding action…",41,[[["usize"],["i32"],["self"]],["fpvector"]]],[11,"act","","",41,[[["fpvector"],["u32"],["i32"],["usize"],["self"],["fpvector"]]]],[11,"act_by_element","","",41,[[["fpvector"],["u32"],["i32"],["self"],["fpvector"]]]],[11,"generator_list_string","","",41,[[["self"],["i32"]],["string"]]],[11,"element_to_string","","",41,[[["fpvector"],["self"],["i32"]],["string"]]],[11,"truncate_to_fd_module","","This truncates the module to `max_dim` and represents it…",41,[[["arc"],["i32"]],["fdmodule"]]],[0,"block_structure","algebra::module","",null,null],[3,"GeneratorBasisEltPair","algebra::module::block_structure","",null,null],[12,"generator_degree","","",42,null],[12,"generator_index","","",42,null],[12,"basis_index","","",42,null],[3,"BlockStructure","","",null,null],[12,"total_dimension","","",43,null],[12,"basis_element_to_block_idx","","",43,null],[12,"block_starts","","",43,null],[3,"BlockStart","","",null,null],[12,"block_start_index","","",44,null],[12,"block_size","","",44,null],[11,"new","","",43,[[["bivec"]],["self"]]],[11,"generator_to_block","","",43,[[["usize"],["self"],["i32"]],["blockstart"]]],[11,"generator_basis_elt_to_index","","",43,[[["usize"],["i32"],["self"]],["usize"]]],[11,"index_to_generator_basis_elt","","",43,[[["self"],["usize"]],["generatorbasiseltpair"]]],[11,"add_block","","",43,[[["fpvector"],["u32"],["i32"],["usize"],["self"],["fpvector"]]]],[0,"homomorphism","algebra::module","",null,null],[3,"BoundedModuleHomomorphism","algebra::module::homomorphism","",null,null],[12,"lock","","",45,null],[12,"source","","",45,null],[12,"target","","",45,null],[12,"degree_shift","","",45,null],[12,"matrices","","",45,null],[12,"quasi_inverses","","",45,null],[12,"kernels","","",45,null],[3,"FiniteModuleHomomorphism","","",null,null],[12,"source","","",46,null],[12,"target","","",46,null],[12,"map","","",46,null],[3,"FPModuleHomomorphism","","",null,null],[12,"source","","",47,null],[12,"underlying_map","","",47,null],[3,"FreeModuleHomomorphism","","",null,null],[12,"source","","",48,null],[12,"target","","",48,null],[12,"outputs","","",48,null],[12,"kernel","","",48,null],[12,"quasi_inverse","","",48,null],[12,"min_degree","","",48,null],[12,"lock","","",48,null],[12,"degree_shift","","",48,null],[3,"GenericZeroHomomorphism","","",null,null],[12,"source","","",49,null],[12,"target","","",49,null],[12,"degree_shift","","",49,null],[3,"HomPullback","","Given a map `map`: A -> B and `source` = Hom(B, X),…",null,null],[12,"source","","",50,null],[12,"target","","",50,null],[12,"map","","",50,null],[12,"kernel","","",50,null],[12,"quasi_inverse","","",50,null],[3,"QuotientHomomorphism","","",null,null],[12,"f","","",51,null],[12,"s","","",51,null],[12,"t","","",51,null],[3,"QuotientHomomorphismSource","","",null,null],[12,"f","","",52,null],[12,"s","","",52,null],[12,"t","","",52,null],[3,"TruncatedHomomorphism","","",null,null],[12,"f","","",53,null],[12,"s","","",53,null],[12,"t","","",53,null],[3,"TruncatedHomomorphismSource","","",null,null],[12,"f","","",54,null],[12,"s","","",54,null],[12,"t","","",54,null],[0,"bounded_module_homomorphism","","",null,null],[3,"BoundedModuleHomomorphism","algebra::module::homomorphism::bounded_module_homomorphism","",null,null],[12,"lock","","",45,null],[12,"source","","",45,null],[12,"target","","",45,null],[12,"degree_shift","","",45,null],[12,"matrices","","",45,null],[12,"quasi_inverses","","",45,null],[12,"kernels","","",45,null],[11,"new","algebra::module::homomorphism","",45,[[["arc"],["arc"],["i32"]],["self"]]],[11,"from_matrices","","",45,[[["arc"],["i32"],["bivec",["matrix"]],["arc"],["matrix"]],["self"]]],[11,"from","","",45,[[["f"]],["self"]]],[11,"replace_source","","This function replaces the source of the…",45,[[["arc"],["boundedmodule"]],[["boundedmodulehomomorphism"],["boundedmodule"]]]],[11,"replace_target","","See `replace_source`",45,[[["arc"],["boundedmodule"]],[["boundedmodulehomomorphism"],["boundedmodule"]]]],[0,"finite_module_homomorphism","","",null,null],[3,"FiniteModuleHomomorphism","algebra::module::homomorphism::finite_module_homomorphism","",null,null],[12,"source","","",46,null],[12,"target","","",46,null],[12,"map","","",46,null],[4,"FMHI","","",null,null],[13,"FD","","",55,null],[13,"FP","","",55,null],[13,"RP","","",55,null],[0,"fp_module_homomorphism","algebra::module::homomorphism","",null,null],[3,"FPModuleHomomorphism","algebra::module::homomorphism::fp_module_homomorphism","",null,null],[12,"source","","",47,null],[12,"underlying_map","","",47,null],[8,"FPModuleT","","",null,null],[10,"gen_idx_to_fp_idx","","",56,[[["usize"],["self"],["i32"]],["isize"]]],[10,"fp_idx_to_gen_idx","","",56,[[["usize"],["self"],["i32"]],["usize"]]],[10,"generators","","",56,[[["self"]],["arc"]]],[0,"free_module_homomorphism","algebra::module::homomorphism","",null,null],[3,"FreeModuleHomomorphism","algebra::module::homomorphism::free_module_homomorphism","",null,null],[12,"source","","",48,null],[12,"target","","",48,null],[12,"outputs","","",48,null],[12,"kernel","","",48,null],[12,"quasi_inverse","","",48,null],[12,"min_degree","","",48,null],[12,"lock","","",48,null],[12,"degree_shift","","",48,null],[11,"new","algebra::module::homomorphism","",48,[[["i32"],["arc"],["freemodule"],["arc",["freemodule"]]],["self"]]],[11,"degree_shift","","",48,[[["self"]],["i32"]]],[11,"min_degree","","",48,[[["self"]],["i32"]]],[11,"next_degree","","",48,[[["self"]],["i32"]]],[11,"output","","",48,[[["usize"],["self"],["i32"]],["fpvector"]]],[11,"extend_by_zero_safe","","",48,[[["self"],["i32"]]]],[11,"extend_by_zero","","",48,[[["mutexguard"],["self"],["i32"]]]],[11,"add_generators_from_big_vector","","",48,[[["fpvector"],["i32"],["mutexguard"],["self"]]]],[11,"add_generators_from_matrix_rows","","",48,[[["i32"],["mutexguard"],["self"],["matrix"]]]],[11,"apply_to_generator","","",48,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[11,"apply_to_basis_element_with_table","","",48,[[["fpvector"],["u32"],["i32"],["freemoduletableentry"],["usize"],["self"]]]],[11,"get_matrix","","",48,[[["matrix"],["self"],["i32"]]]],[11,"get_matrix_with_table","","Arguments * `degree` - The internal degree of the target…",48,[[["matrix"],["freemoduletableentry"],["i32"],["self"]]]],[11,"lock","","",48,[[["self"]],["mutexguard"]]],[11,"set_kernel","","",48,[[["i32"],["mutexguard"],["self"],["subspace"]]]],[11,"set_quasi_inverse","","",48,[[["i32"],["quasiinverse"],["mutexguard"],["self"]]]],[11,"check_mutex","","",48,[[["mutexguard"],["self"]]]],[0,"generic_zero_homomorphism","","",null,null],[3,"GenericZeroHomomorphism","algebra::module::homomorphism::generic_zero_homomorphism","",null,null],[12,"source","","",49,null],[12,"target","","",49,null],[12,"degree_shift","","",49,null],[11,"new","algebra::module::homomorphism","",49,[[["arc"],["arc"],["i32"]],["self"]]],[0,"hom_pullback","","",null,null],[3,"HomPullback","algebra::module::homomorphism::hom_pullback","Given a map `map`: A -> B and `source` = Hom(B, X),…",null,null],[12,"source","","",50,null],[12,"target","","",50,null],[12,"map","","",50,null],[12,"kernel","","",50,null],[12,"quasi_inverse","","",50,null],[11,"new","algebra::module::homomorphism","",50,[[["hommodule"],["arc",["hommodule"]],["arc",["freemodulehomomorphism"]],["freemodulehomomorphism",["freemodule"]]],["self"]]],[0,"quotient_homomorphism","","",null,null],[3,"QuotientHomomorphism","algebra::module::homomorphism::quotient_homomorphism","",null,null],[12,"f","","",51,null],[12,"s","","",51,null],[12,"t","","",51,null],[3,"QuotientHomomorphismSource","","",null,null],[12,"f","","",52,null],[12,"s","","",52,null],[12,"t","","",52,null],[11,"new","algebra::module::homomorphism","",51,[[["arc"],["arc",["quotientmodule"]],["quotientmodule"],["arc",["quotientmodule"]],["quotientmodule"]],["self"]]],[11,"new","","",52,[[["arc"],["arc",["quotientmodule"]],["arc"],["quotientmodule"]],["self"]]],[0,"truncated_homomorphism","","",null,null],[3,"TruncatedHomomorphism","algebra::module::homomorphism::truncated_homomorphism","",null,null],[12,"f","","",53,null],[12,"s","","",53,null],[12,"t","","",53,null],[3,"TruncatedHomomorphismSource","","",null,null],[12,"f","","",54,null],[12,"s","","",54,null],[12,"t","","",54,null],[11,"new","algebra::module::homomorphism","",53,[[["arc"],["arc",["truncatedmodule"]],["truncatedmodule"],["arc",["truncatedmodule"]],["truncatedmodule"]],["self"]]],[11,"truncated_degree","","",53,[[["self"]],["i32"]]],[11,"new","","",54,[[["arc"],["arc",["truncatedmodule"]],["truncatedmodule"],["arc"]],["self"]]],[11,"truncated_degree","","",54,[[["self"]],["i32"]]],[8,"FPModuleT","","",null,null],[10,"gen_idx_to_fp_idx","","",56,[[["usize"],["self"],["i32"]],["isize"]]],[10,"fp_idx_to_gen_idx","","",56,[[["usize"],["self"],["i32"]],["usize"]]],[10,"generators","","",56,[[["self"]],["arc"]]],[8,"ModuleHomomorphism","","",null,null],[16,"Source","","",57,null],[16,"Target","","",57,null],[18,"CUSTOM_QI","","",57,null],[10,"source","","",57,[[["self"]],["arc"]]],[10,"target","","",57,[[["self"]],["arc"]]],[10,"degree_shift","","",57,[[["self"]],["i32"]]],[10,"apply_to_basis_element","","Calling this function when `input_idx <…",57,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[10,"kernel","","",57,[[["self"],["i32"]],["subspace"]]],[10,"quasi_inverse","","",57,[[["self"],["i32"]],["quasiinverse"]]],[10,"compute_kernels_and_quasi_inverses_through_degree","","",57,[[["self"],["i32"]]]],[11,"apply","","",57,[[["fpvector"],["u32"],["i32"],["self"],["fpvector"]]]],[11,"prime","","",57,[[["self"]],["validprime"]]],[11,"min_degree","","",57,[[["self"]],["i32"]]],[11,"image","","Returns the image of the module homomorphism in degree…",57,[[["self"],["i32"]],["option"]]],[11,"calculate_quasi_inverse","","A version of kernel_and_quasi_inverse that, in fact,…",57,[[["self"],["i32"]],["quasiinverse"]]],[11,"kernel_and_quasi_inverse","","",57,[[["self"],["i32"]]]],[11,"get_matrix","","The (sliced) dimensions of `matrix` must be equal to…",57,[[["matrix"],["self"],["i32"]]]],[11,"apply_quasi_inverse","","",57,[[["fpvector"],["i32"],["self"],["fpvector"]]]],[8,"ZeroHomomorphism","","",null,null],[10,"zero_homomorphism","","",58,[[["arc"],["arc"],["i32"]],["self"]]],[8,"IdentityHomomorphism","","",null,null],[10,"identity_homomorphism","","",59,[[["arc"]],["self"]]],[8,"ZeroModule","algebra::module","",null,null],[10,"zero_module","","",39,[[["arc"],["i32"]],["self"]]],[8,"BoundedModule","","",null,null],[10,"max_degree","","`max_degree` is the a degree such that if t >…",40,[[["self"]],["i32"]]],[11,"total_dimension","algebra::module::bounded_module","",40,[[["self"]],["usize"]]],[11,"to_fd_module","","",40,[[["self"]],["fdmodule"]]],[8,"Module","algebra::module","",null,null],[16,"Algebra","","",41,null],[10,"algebra","","",41,[[["self"]],["arc"]]],[10,"name","","",41,[[["self"]],["string"]]],[10,"min_degree","","",41,[[["self"]],["i32"]]],[11,"compute_basis","algebra::module::module_trait","",41,[[["self"],["i32"]]]],[10,"dimension","algebra::module","",41,[[["self"],["i32"]],["usize"]]],[10,"act_on_basis","","",41,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[10,"basis_element_to_string","","",41,[[["usize"],["self"],["i32"]],["string"]]],[11,"is_unit","algebra::module::module_trait","Whether this is the unit module.",41,[[["self"]],["bool"]]],[11,"prime","","",41,[[["self"]],["validprime"]]],[11,"borrow_output","","Whether act_on_basis_borrow is available.",41,[[["self"]],["bool"]]],[11,"act_on_basis_borrow","","Returns a borrow of the value of the corresponding action…",41,[[["usize"],["i32"],["self"]],["fpvector"]]],[11,"act","","",41,[[["fpvector"],["u32"],["i32"],["usize"],["self"],["fpvector"]]]],[11,"act_by_element","","",41,[[["fpvector"],["u32"],["i32"],["self"],["fpvector"]]]],[11,"generator_list_string","","",41,[[["self"],["i32"]],["string"]]],[11,"element_to_string","","",41,[[["fpvector"],["self"],["i32"]],["string"]]],[11,"truncate_to_fd_module","","This truncates the module to `max_dim` and represents it…",41,[[["arc"],["i32"]],["fdmodule"]]],[8,"SteenrodModule","algebra::module","",null,null],[0,"cli_module_loaders","algebra","",null,null],[5,"get_gens","algebra::cli_module_loaders","",null,[[["i32"]],[["result",["bivec","box"]],["box",["error"]],["bivec",["vec"]]]]],[5,"gens_to_json","","",null,[[["bivec"]],["value"]]],[5,"get_expression_to_vector","","",null,[[["str"],["fpvector"],["f"]]]],[5,"interactive_module_define","","",null,[[],[["string"],["box",["error"]],["result",["string","box"]]]]],[5,"interactive_module_define_fdmodule","","",null,[[["string"],["validprime"],["value"],["bool"]],[["box",["error"]],["result",["box"]]]]],[5,"get_relation","","",null,[[["freemodule"],["hashmap"],["ademalgebra"],["milnoralgebra"]],[["result",["string"]],["string"]]]],[5,"interactive_module_define_fpmodule","","",null,[[["string"],["validprime"],["value"],["bool"]],[["box",["error"]],["result",["box"]]]]],[0,"combinatorics","algebra","",null,null],[5,"adem_relation_coefficient","algebra::combinatorics","",null,[[["u32"],["validprime"]],["u32"]]],[5,"inadmissible_pairs","","",null,[[["i32"],["validprime"],["bool"]],["vec"]]],[5,"tau_degrees","","",null,[[["validprime"]]]],[5,"xi_degrees","","",null,[[["validprime"]]]],[17,"MAX_XI_TAU","","",null,null],[0,"adem_algebra","algebra","",null,null],[3,"AdemBasisElement","algebra::adem_algebra","The format of the AdemBasisElement is as follows. To…",null,null],[12,"degree","","",10,null],[12,"excess","","",10,null],[12,"bocksteins","","",10,null],[12,"ps","","",10,null],[3,"AdemAlgebra","","",null,null],[12,"p","","",0,null],[12,"name","","",0,null],[12,"generic","","",0,null],[12,"unstable","","",0,null],[12,"next_degree","","",0,null],[12,"even_basis_table","","",0,null],[12,"basis_table","","",0,null],[12,"basis_element_to_index_map","","",0,null],[12,"multiplication_table","","",0,null],[12,"sort_order","","",0,null],[0,"milnor_algebra","algebra","",null,null],[3,"MilnorProfile","algebra::milnor_algebra","",null,null],[12,"truncated","","",11,null],[12,"q_part","","",11,null],[12,"p_part","","",11,null],[3,"QPart","","",null,null],[12,"degree","","",12,null],[12,"q_part","","",12,null],[3,"MilnorBasisElement","","",null,null],[12,"q_part","","",13,null],[12,"p_part","","",13,null],[12,"degree","","",13,null],[3,"MilnorAlgebra","","",null,null],[12,"profile","","",1,null],[12,"name","","",1,null],[12,"next_degree","","",1,null],[12,"p","","",1,null],[12,"generic","","",1,null],[12,"ppart_table","","",1,null],[12,"qpart_table","","",1,null],[12,"basis_table","","",1,null],[12,"basis_element_to_index_map","","",1,null],[0,"field","algebra","",null,null],[3,"Field","algebra::field","",null,null],[12,"prime","","",2,null],[0,"utils","algebra","",null,null],[3,"GenericError","algebra::utils","",null,null],[12,"0","","",60,null],[8,"Algebra","algebra","A graded algebra over F_p, finite dimensional in each…",null,null],[10,"algebra_type","","The \"type\" of the algebra, which is \"adem\" or \"milnor\".…",4,[[["self"]],["str"]]],[10,"prime","","Returns the prime the algebra is over.",4,[[["self"]],["validprime"]]],[11,"name","algebra::algebra::algebra_trait","",4,[[["self"]],["str"]]],[10,"compute_basis","algebra","Computes the list of basis elements up to and including…",4,[[["self"],["i32"]]]],[10,"max_degree","","",4,[[["self"]],["i32"]]],[10,"dimension","","Gets the dimension of the algebra in degree `degree`.",4,[[["self"],["i32"]],["usize"]]],[10,"multiply_basis_elements","","Computes the product `r * s` of the two basis elements,…",4,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[11,"multiply_basis_element_by_element","algebra::algebra::algebra_trait","",4,[[["fpvector"],["u32"],["i32"],["usize"],["self"],["fpvector"]]]],[11,"multiply_element_by_basis_element","","",4,[[["fpvector"],["u32"],["i32"],["usize"],["self"],["fpvector"]]]],[11,"multiply_element_by_element","","",4,[[["fpvector"],["u32"],["i32"],["self"],["fpvector"]]]],[11,"default_filtration_one_products","","A filtration one element in Ext(k, k) is the same as an…",4,[[["self"]],["vec"]]],[11,"json_to_basis","","Converts a JSON object into a basis element. The way basis…",4,[[["value"],["self"]]]],[11,"json_from_basis","","",4,[[["usize"],["self"],["i32"]],["value"]]],[11,"basis_element_to_string","","Converts a basis element into a string for display.",4,[[["usize"],["self"],["i32"]],["string"]]],[11,"element_to_string","","Converts an element into a string for display.",4,[[["fpvector"],["self"],["i32"]],["string"]]],[11,"generators","","Given a degree `degree`, the function returns a list of…",4,[[["self"],["i32"]],[["usize"],["vec",["usize"]]]]],[11,"generator_to_string","","This returns the name of a generator. Note that the index…",4,[[["usize"],["self"],["i32"]],["string"]]],[11,"string_to_generator","","This parses a string and returns the generator described…",4,[[["str"],["self"]],[["str"],["iresult",["str"]]]]],[11,"decompose_basis_element","","Given a non-generator basis element of the algebra,…",4,[[["usize"],["self"],["i32"]],["vec"]]],[11,"relations_to_check","","Get any relations that the algebra wants checked to ensure…",4,[[["self"],["i32"]],[["vec"],["vec",["vec"]]]]],[8,"Bialgebra","algebra","",null,null],[10,"decompose","","This function decomposes an element of the algebra as a…",8,[[["usize"],["self"],["i32"]],["vec"]]],[10,"coproduct","","Expresses Delta(x) as sum_j (A_{ij} (x) B_{ij}). Here x…",8,[[["usize"],["self"],["i32"]],["vec"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","algebra::algebra::steenrod_algebra","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","algebra::algebra::adem_algebra","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","algebra::algebra::milnor_algebra","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","algebra::steenrod_parser","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_string","","",16,[[["self"]],["string"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","algebra::steenrod_evaluator","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_string","","",61,[[["self"]],["string"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_string","","",22,[[["self"]],["string"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","algebra::module","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_string","","",34,[[["self"]],["string"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","algebra::module::finite_module","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_string","","",36,[[["self"]],["string"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","algebra::module::finitely_presented_module","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","algebra::module::rpn","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","algebra::module::block_structure","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","algebra::module::homomorphism","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","algebra::module::homomorphism::finite_module_homomorphism","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","algebra::utils","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_string","","",60,[[["self"]],["string"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"decompose","algebra","",3,[[["usize"],["self"],["i32"]],["vec"]]],[11,"coproduct","","",3,[[["usize"],["self"],["i32"]],["vec"]]],[11,"decompose","","",0,[[["usize"],["self"],["i32"]],["vec"]]],[11,"coproduct","","",0,[[["usize"],["self"],["i32"]],["vec"]]],[11,"coproduct","","",1,[[["usize"],["self"],["i32"]],["vec"]]],[11,"decompose","","",1,[[["usize"],["self"],["i32"]],["vec"]]],[11,"coproduct","","",2,[[["usize"],["self"],["i32"]],["vec"]]],[11,"decompose","","",2,[[["usize"],["self"],["i32"]],["vec"]]],[11,"zero_module","algebra::module","",23,[[["arc"],["i32"]],["self"]]],[11,"zero_module","","",24,[[["arc"],["i32"]],["self"]]],[11,"zero_module","","",30,[[["arc",["steenrodalgebra"]],["steenrodalgebra"],["i32"]],["self"]]],[11,"zero_module","","",31,[[["arc"],["i32"]],["self"]]],[11,"zero_module","","",32,[[["arc"],["i32"]],["self"]]],[11,"zero_module","","",35,[[["arc",["steenrodalgebra"]],["steenrodalgebra"],["i32"]],["self"]]],[11,"max_degree","","",23,[[["self"]],["i32"]]],[11,"max_degree","","",29,[[["self"]],["i32"]]],[11,"max_degree","","",31,[[["self"]],["i32"]]],[11,"max_degree","","",32,[[["self"]],["i32"]]],[11,"max_degree","","",33,[[["self"]],["i32"]]],[11,"max_degree","","",35,[[["self"]],["i32"]]],[11,"name","","",23,[[["self"]],["string"]]],[11,"algebra","","",23,[[["self"]],["arc"]]],[11,"min_degree","","",23,[[["self"]],["i32"]]],[11,"compute_basis","","",23,[[["self"],["i32"]]]],[11,"dimension","","",23,[[["self"],["i32"]],["usize"]]],[11,"basis_element_to_string","","",23,[[["usize"],["self"],["i32"]],["string"]]],[11,"is_unit","","",23,[[["self"]],["bool"]]],[11,"act_on_basis","","",23,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[11,"borrow_output","","",23,[[["self"]],["bool"]]],[11,"act_on_basis_borrow","","",23,[[["usize"],["i32"],["self"]],["fpvector"]]],[11,"algebra","","",35,[[["self"]],["arc"]]],[11,"name","","",35,[[["self"]],["string"]]],[11,"min_degree","","",35,[[["self"]],["i32"]]],[11,"compute_basis","","",35,[[["self"],["i32"]]]],[11,"dimension","","",35,[[["self"],["i32"]],["usize"]]],[11,"act_on_basis","","",35,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[11,"act","","",35,[[["fpvector"],["u32"],["i32"],["usize"],["self"],["fpvector"]]]],[11,"act_by_element","","",35,[[["fpvector"],["u32"],["i32"],["self"],["fpvector"]]]],[11,"basis_element_to_string","","",35,[[["usize"],["self"],["i32"]],["string"]]],[11,"is_unit","","",35,[[["self"]],["bool"]]],[11,"prime","","",35,[[["self"]],["validprime"]]],[11,"borrow_output","","Whether act_on_basis_borrow is available.",35,[[["self"]],["bool"]]],[11,"act_on_basis_borrow","","",35,[[["usize"],["i32"],["self"]],["fpvector"]]],[11,"algebra","","",24,[[["self"]],["arc"]]],[11,"min_degree","","",24,[[["self"]],["i32"]]],[11,"name","","",24,[[["self"]],["string"]]],[11,"compute_basis","","",24,[[["self"],["i32"]]]],[11,"dimension","","",24,[[["self"],["i32"]],["usize"]]],[11,"act_on_basis","","",24,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[11,"basis_element_to_string","","",24,[[["usize"],["self"],["i32"]],["string"]]],[11,"name","","",25,[[["self"]],["string"]]],[11,"algebra","","",25,[[["self"]],["arc"]]],[11,"min_degree","","",25,[[["self"]],["i32"]]],[11,"dimension","","",25,[[["self"],["i32"]],["usize"]]],[11,"basis_element_to_string","","",25,[[["usize"],["self"],["i32"]],["string"]]],[11,"act_on_basis","","",25,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[11,"algebra","","",28,[[["self"]],["arc"]]],[11,"name","","",28,[[["self"]],["string"]]],[11,"min_degree","","",28,[[["self"]],["i32"]]],[11,"compute_basis","","",28,[[["self"],["i32"]]]],[11,"dimension","","",28,[[["self"],["i32"]],["usize"]]],[11,"act_on_basis","","",28,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[11,"basis_element_to_string","","",28,[[["usize"],["self"],["i32"]],["string"]]],[11,"algebra","","",29,[[["self"]],["arc"]]],[11,"name","","",29,[[["self"]],["string"]]],[11,"min_degree","","",29,[[["self"]],["i32"]]],[11,"compute_basis","","",29,[[["self"],["i32"]]]],[11,"dimension","","",29,[[["self"],["i32"]],["usize"]]],[11,"act_on_basis","","",29,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[11,"basis_element_to_string","","",29,[[["usize"],["self"],["i32"]],["string"]]],[11,"name","","",30,[[["self"]],["string"]]],[11,"algebra","","",30,[[["self"]],[["arc",["steenrodalgebra"]],["steenrodalgebra"]]]],[11,"min_degree","","",30,[[["self"]],["i32"]]],[11,"dimension","","",30,[[["self"],["i32"]],["usize"]]],[11,"basis_element_to_string","","",30,[[["usize"],["self"],["i32"]],["string"]]],[11,"act_on_basis","","",30,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[11,"algebra","","",31,[[["self"]],["arc"]]],[11,"name","","",31,[[["self"]],["string"]]],[11,"min_degree","","",31,[[["self"]],["i32"]]],[11,"compute_basis","","",31,[[["self"],["i32"]]]],[11,"dimension","","",31,[[["self"],["i32"]],["usize"]]],[11,"act_on_basis","","",31,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[11,"basis_element_to_string","","",31,[[["usize"],["self"],["i32"]],["string"]]],[11,"algebra","","",32,[[["self"]],["arc"]]],[11,"name","","",32,[[["self"]],["string"]]],[11,"min_degree","","",32,[[["self"]],["i32"]]],[11,"compute_basis","","",32,[[["self"],["i32"]]]],[11,"dimension","","",32,[[["self"],["i32"]],["usize"]]],[11,"act_on_basis","","",32,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[11,"act","","",32,[[["fpvector"],["u32"],["i32"],["usize"],["self"],["fpvector"]]]],[11,"basis_element_to_string","","",32,[[["usize"],["self"],["i32"]],["string"]]],[11,"algebra","","",33,[[["self"]],["arc"]]],[11,"name","","",33,[[["self"]],["string"]]],[11,"min_degree","","",33,[[["self"]],["i32"]]],[11,"compute_basis","","",33,[[["self"],["i32"]]]],[11,"dimension","","",33,[[["self"],["i32"]],["usize"]]],[11,"act_on_basis","","",33,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[11,"basis_element_to_string","","",33,[[["usize"],["self"],["i32"]],["string"]]],[11,"fp_idx_to_gen_idx","","",35,[[["usize"],["self"],["i32"]],["usize"]]],[11,"gen_idx_to_fp_idx","","",35,[[["usize"],["self"],["i32"]],["isize"]]],[11,"generators","","",35,[[["self"]],["arc"]]],[11,"fp_idx_to_gen_idx","","",24,[[["usize"],["self"],["i32"]],["usize"]]],[11,"gen_idx_to_fp_idx","","",24,[[["usize"],["self"],["i32"]],["isize"]]],[11,"generators","","",24,[[["self"]],["arc"]]],[11,"source","algebra::module::homomorphism","",45,[[["self"]],["arc"]]],[11,"target","","",45,[[["self"]],["arc"]]],[11,"degree_shift","","",45,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","",45,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[11,"quasi_inverse","","",45,[[["self"],["i32"]],["quasiinverse"]]],[11,"kernel","","",45,[[["self"],["i32"]],["subspace"]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",45,[[["self"],["i32"]]]],[11,"source","","",46,[[["self"]],["arc"]]],[11,"target","","",46,[[["self"]],["arc"]]],[11,"degree_shift","","",46,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","",46,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[11,"quasi_inverse","","",46,[[["self"],["i32"]],["quasiinverse"]]],[11,"kernel","","",46,[[["self"],["i32"]],["subspace"]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",46,[[["self"],["i32"]]]],[11,"source","","",47,[[["self"]],["arc"]]],[11,"target","","",47,[[["self"]],["arc"]]],[11,"degree_shift","","",47,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","",47,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[11,"quasi_inverse","","",47,[[["self"],["i32"]],["quasiinverse"]]],[11,"kernel","","",47,[[["self"],["i32"]],["subspace"]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",47,[[["self"],["i32"]]]],[11,"source","","",48,[[["self"]],["arc"]]],[11,"target","","",48,[[["self"]],["arc"]]],[11,"degree_shift","","",48,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","",48,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[11,"quasi_inverse","","",48,[[["self"],["i32"]],["quasiinverse"]]],[11,"kernel","","",48,[[["self"],["i32"]],["subspace"]]],[11,"get_matrix","","",48,[[["matrix"],["self"],["i32"]]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",48,[[["self"],["i32"]]]],[11,"source","","",49,[[["self"]],["arc"]]],[11,"target","","",49,[[["self"]],["arc"]]],[11,"degree_shift","","",49,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","",49,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[11,"quasi_inverse","","",49,[[["self"],["i32"]],["quasiinverse"]]],[11,"kernel","","",49,[[["self"],["i32"]],["subspace"]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",49,[[["self"],["i32"]]]],[11,"source","","",50,[[["self"]],["arc"]]],[11,"target","","",50,[[["self"]],["arc"]]],[11,"degree_shift","","",50,[[["self"]],["i32"]]],[11,"min_degree","","",50,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","",50,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",50,[[["self"],["i32"]]]],[11,"quasi_inverse","","",50,[[["self"],["i32"]],["quasiinverse"]]],[11,"kernel","","",50,[[["self"],["i32"]],["subspace"]]],[11,"source","","",51,[[["self"]],["arc"]]],[11,"target","","",51,[[["self"]],["arc"]]],[11,"degree_shift","","",51,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","",51,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[11,"kernel","","",51,[[["self"],["i32"]],["subspace"]]],[11,"quasi_inverse","","",51,[[["self"],["i32"]],["quasiinverse"]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",51,[[["self"],["i32"]]]],[11,"source","","",52,[[["self"]],["arc"]]],[11,"target","","",52,[[["self"]],["arc"]]],[11,"degree_shift","","",52,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","",52,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[11,"kernel","","",52,[[["self"],["i32"]],["subspace"]]],[11,"quasi_inverse","","",52,[[["self"],["i32"]],["quasiinverse"]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",52,[[["self"],["i32"]]]],[11,"source","","",53,[[["self"]],["arc"]]],[11,"target","","",53,[[["self"]],["arc"]]],[11,"degree_shift","","",53,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","",53,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[11,"kernel","","",53,[[["self"],["i32"]],["subspace"]]],[11,"quasi_inverse","","",53,[[["self"],["i32"]],["quasiinverse"]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",53,[[["self"],["i32"]]]],[11,"source","","",54,[[["self"]],["arc"]]],[11,"target","","",54,[[["self"]],["arc"]]],[11,"degree_shift","","",54,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","",54,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[11,"kernel","","",54,[[["self"],["i32"]],["subspace"]]],[11,"quasi_inverse","","",54,[[["self"],["i32"]],["quasiinverse"]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",54,[[["self"],["i32"]]]],[11,"zero_homomorphism","","",45,[[["arc"],["arc"],["i32"]],["self"]]],[11,"zero_homomorphism","","",46,[[["finitemodule"],["i32"],["arc"],["arc",["finitemodule"]]],["self"]]],[11,"zero_homomorphism","","",47,[[["arc"],["arc"],["i32"]],["self"]]],[11,"zero_homomorphism","","",49,[[["arc"],["arc"],["i32"]],["self"]]],[11,"identity_homomorphism","","",45,[[["arc"]],["self"]]],[11,"identity_homomorphism","","",46,[[["arc",["finitemodule"]],["finitemodule"]],["self"]]],[11,"identity_homomorphism","","",47,[[["arc"]],["self"]]],[11,"algebra_type","algebra","",3,[[["self"]],["str"]]],[11,"prime","","",3,[[["self"]],["validprime"]]],[11,"name","","",3,[[["self"]],["str"]]],[11,"compute_basis","","",3,[[["self"],["i32"]]]],[11,"max_degree","","",3,[[["self"]],["i32"]]],[11,"dimension","","",3,[[["self"],["i32"]],["usize"]]],[11,"multiply_basis_elements","","",3,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[11,"multiply_basis_element_by_element","","",3,[[["fpvector"],["u32"],["i32"],["usize"],["self"],["fpvector"]]]],[11,"multiply_element_by_basis_element","","",3,[[["fpvector"],["u32"],["i32"],["usize"],["self"],["fpvector"]]]],[11,"multiply_element_by_element","","",3,[[["fpvector"],["u32"],["i32"],["self"],["fpvector"]]]],[11,"default_filtration_one_products","","",3,[[["self"]],["vec"]]],[11,"json_to_basis","","",3,[[["value"],["self"]]]],[11,"json_from_basis","","",3,[[["usize"],["self"],["i32"]],["value"]]],[11,"basis_element_to_string","","",3,[[["usize"],["self"],["i32"]],["string"]]],[11,"element_to_string","","",3,[[["fpvector"],["self"],["i32"]],["string"]]],[11,"generators","","",3,[[["self"],["i32"]],[["usize"],["vec",["usize"]]]]],[11,"generator_to_string","","",3,[[["usize"],["self"],["i32"]],["string"]]],[11,"string_to_generator","","",3,[[["str"],["self"]],[["str"],["iresult",["str"]]]]],[11,"decompose_basis_element","","",3,[[["usize"],["self"],["i32"]],["vec"]]],[11,"relations_to_check","","",3,[[["self"],["i32"]],[["vec"],["vec",["vec"]]]]],[11,"algebra_type","","",0,[[["self"]],["str"]]],[11,"prime","","",0,[[["self"]],["validprime"]]],[11,"name","","",0,[[["self"]],["str"]]],[11,"default_filtration_one_products","","",0,[[["self"]],["vec"]]],[11,"max_degree","","",0,[[["self"]],["i32"]]],[11,"compute_basis","","",0,[[["self"],["i32"]]]],[11,"dimension","","",0,[[["self"],["i32"]],["usize"]]],[11,"multiply_basis_elements","","",0,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[11,"json_to_basis","","",0,[[["value"],["self"]]]],[11,"string_to_generator","","",0,[[["str"],["self"]],[["str"],["iresult",["str"]]]]],[11,"generator_to_string","","",0,[[["usize"],["self"],["i32"]],["string"]]],[11,"json_from_basis","","",0,[[["usize"],["self"],["i32"]],["value"]]],[11,"basis_element_to_string","","",0,[[["usize"],["self"],["i32"]],["string"]]],[11,"generators","","",0,[[["self"],["i32"]],[["usize"],["vec",["usize"]]]]],[11,"decompose_basis_element","","",0,[[["usize"],["self"],["i32"]],["vec"]]],[11,"relations_to_check","","We return Adem relations $b^2 = 0$, $P^i P^j = \\cdots$ for…",0,[[["self"],["i32"]],[["vec"],["vec",["vec"]]]]],[11,"algebra_type","","",1,[[["self"]],["str"]]],[11,"prime","","",1,[[["self"]],["validprime"]]],[11,"name","","",1,[[["self"]],["str"]]],[11,"default_filtration_one_products","","",1,[[["self"]],["vec"]]],[11,"max_degree","","",1,[[["self"]],["i32"]]],[11,"compute_basis","","",1,[[["self"],["i32"]]]],[11,"dimension","","",1,[[["self"],["i32"]],["usize"]]],[11,"multiply_basis_elements","","",1,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[11,"json_to_basis","","",1,[[["value"],["self"]]]],[11,"json_from_basis","","",1,[[["usize"],["self"],["i32"]],["value"]]],[11,"string_to_generator","","",1,[[["str"],["self"]],[["str"],["iresult",["str"]]]]],[11,"generator_to_string","","",1,[[["usize"],["self"],["i32"]],["string"]]],[11,"basis_element_to_string","","",1,[[["usize"],["self"],["i32"]],["string"]]],[11,"generators","","",1,[[["self"],["i32"]],[["usize"],["vec",["usize"]]]]],[11,"decompose_basis_element","","",1,[[["usize"],["self"],["i32"]],["vec"]]],[11,"relations_to_check","","",1,[[["self"],["i32"]],[["vec"],["vec",["vec"]]]]],[11,"algebra_type","","",2,[[["self"]],["str"]]],[11,"prime","","Returns the prime the algebra is over.",2,[[["self"]],["validprime"]]],[11,"name","","",2,[[["self"]],["str"]]],[11,"max_degree","","",2,[[["self"]],["i32"]]],[11,"compute_basis","","",2,[[["self"],["i32"]]]],[11,"dimension","","Gets the dimension of the algebra in degree `degree`.",2,[[["self"],["i32"]],["usize"]]],[11,"multiply_basis_elements","","",2,[[["fpvector"],["u32"],["i32"],["usize"],["self"]]]],[11,"default_filtration_one_products","","",2,[[["self"]],["vec"]]],[11,"json_to_basis","","Converts a JSON object into a basis element. The way basis…",2,[[["value"],["self"]]]],[11,"json_from_basis","","",2,[[["usize"],["self"],["i32"]],["value"]]],[11,"basis_element_to_string","","Converts a basis element into a string for display.",2,[[["usize"],["self"],["i32"]],["string"]]],[11,"element_to_string","","",2,[[["fpvector"],["self"],["i32"]],["string"]]],[11,"generators","","",2,[[["self"],["i32"]],[["usize"],["vec",["usize"]]]]],[11,"decompose_basis_element","","",2,[[["usize"],["self"],["i32"]],["vec"]]],[11,"relations_to_check","","",2,[[["self"],["i32"]],[["vec"],["vec",["vec"]]]]],[11,"from","","",3,[[["ademalgebra"]],["steenrodalgebra"]]],[11,"from","","",3,[[["milnoralgebra"]],["steenrodalgebra"]]],[11,"from","algebra::module","",35,[[["fpmodule",["steenrodalgebra"]],["steenrodalgebra"]],["self"]]],[11,"from","","",35,[[["steenrodalgebra"],["fdmodule",["steenrodalgebra"]]],["self"]]],[11,"from","","",35,[[["realprojectivespace"]],["self"]]],[11,"from","algebra::module::homomorphism","",46,[[["boundedmodulehomomorphism",["finitemodule"]],["finitemodule"]],["self"]]],[11,"from","","",46,[[["fpmodulehomomorphism",["finitemodule"]],["finitemodule"]],["self"]]],[11,"clone","algebra::algebra::adem_algebra","",10,[[["self"]],["adembasiselement"]]],[11,"clone","algebra::algebra::milnor_algebra","",12,[[["self"]],["qpart"]]],[11,"clone","","",13,[[["self"]],["milnorbasiselement"]]],[11,"clone","algebra::steenrod_parser","",17,[[["self"]],["algebrabasiselt"]]],[11,"clone","","",18,[[["self"]],["algebraparsenode"]]],[11,"clone","","",19,[[["self"]],["moduleparsenode"]]],[11,"clone","","",20,[[["self"]],["bocksteinorsq"]]],[11,"clone","algebra::module","",23,[[["self"]],["self"]]],[11,"clone","","",27,[[["self"]],["operationgeneratorpair"]]],[11,"clone","","",26,[[["self"]],["freemoduletableentry"]]],[11,"clone","algebra::module::homomorphism","",45,[[["self"]],["self"]]],[11,"default","algebra::algebra::milnor_algebra","",12,[[],["qpart"]]],[11,"eq","algebra::algebra::adem_algebra","",10,[[["self"]],["bool"]]],[11,"eq","algebra::algebra::milnor_algebra","",13,[[["self"]],["bool"]]],[11,"eq","algebra::module","",23,[[["self"]],["bool"]]],[11,"eq","","",35,[[["finitemodule"],["self"]],["bool"]]],[11,"ne","","",35,[[["finitemodule"],["self"]],["bool"]]],[11,"eq","","",24,[[["self"]],["bool"]]],[11,"eq","","",30,[[["self"]],["bool"]]],[11,"deref","algebra::algebra::adem_algebra","",9,[[["self"]],["vec"]]],[11,"fmt","algebra::algebra::steenrod_algebra","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","algebra::algebra::adem_algebra","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","algebra::algebra::milnor_algebra","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","algebra::steenrod_parser","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","algebra::steenrod_evaluator","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","algebra::module::finite_module","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","algebra::module","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","algebra::module::rpn","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","algebra::module","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","algebra::module::block_structure","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","algebra::utils","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","algebra::algebra::steenrod_algebra","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","algebra::algebra::adem_algebra","",10,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","algebra::algebra::milnor_algebra","",13,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","algebra::steenrod_parser","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","algebra::steenrod_evaluator","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","algebra::module::finite_module","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","algebra::module","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","algebra::utils","",60,[[["self"],["formatter"]],["result"]]],[11,"index","algebra::algebra::milnor_algebra","",14,[[["self"],["usize"]]]],[11,"index_mut","","",14,[[["self"],["usize"]]]],[11,"hash","algebra::algebra::adem_algebra","",10,[[["self"],["h"]]]],[11,"hash","algebra::algebra::milnor_algebra","",13,[[["self"],["h"]]]],[11,"try_into","algebra","",3,[[],[["result",["ademalgebra"]],["ademalgebra"]]]],[11,"try_into","","",3,[[],[["milnoralgebra"],["result",["milnoralgebra"]]]]],[11,"description","algebra::algebra::steenrod_algebra","",7,[[["self"]],["str"]]],[11,"description","algebra::steenrod_parser","",16,[[["self"]],["str"]]],[11,"description","algebra::steenrod_evaluator","",61,[[["self"]],["str"]]],[11,"description","","",22,[[["self"]],["str"]]],[11,"description","algebra::module::finite_module","",36,[[["self"]],["str"]]],[11,"description","algebra::module","",34,[[["self"]],["str"]]],[11,"save","","",25,[[["self"]],["result"]]],[11,"save","algebra::module::homomorphism","",48,[[["self"]],["result"]]],[11,"load","algebra::module","",25,[[],["result"]]],[11,"load","algebra::module::homomorphism","",48,[[],["result"]]],[11,"deserialize","algebra::algebra::steenrod_algebra","",5,[[["__d"]],["result"]]],[11,"deserialize","","",6,[[["__d"]],["result"]]],[11,"deserialize","algebra::module::rpn","",38,[[["__d"]],["result"]]],[11,"initialize","algebra::algebra::adem_algebra","",9,[[["self"]]]]],"p":[[3,"AdemAlgebra"],[3,"MilnorAlgebra"],[3,"Field"],[4,"SteenrodAlgebra"],[8,"Algebra"],[3,"MilnorProfileOption"],[3,"AlgebraSpec"],[3,"InvalidAlgebraError"],[8,"Bialgebra"],[3,"BOCKSTEIN_TABLE"],[3,"AdemBasisElement"],[3,"MilnorProfile"],[3,"QPart"],[3,"MilnorBasisElement"],[3,"Matrix2D"],[3,"PPartMultiplier"],[3,"ParseError"],[4,"AlgebraBasisElt"],[4,"AlgebraParseNode"],[4,"ModuleParseNode"],[4,"BocksteinOrSq"],[3,"SteenrodCalculator"],[3,"UnknownBasisElementError"],[3,"FDModule"],[3,"FPModule"],[3,"FreeModule"],[3,"FreeModuleTableEntry"],[3,"OperationGeneratorPair"],[3,"HomModule"],[3,"QuotientModule"],[3,"RealProjectiveSpace"],[3,"SumModule"],[3,"TensorModule"],[3,"TruncatedModule"],[3,"ModuleFailedRelationError"],[4,"FiniteModule"],[3,"UnknownModuleTypeError"],[3,"FPMIndexTable"],[3,"RPSpec"],[8,"ZeroModule"],[8,"BoundedModule"],[8,"Module"],[3,"GeneratorBasisEltPair"],[3,"BlockStructure"],[3,"BlockStart"],[3,"BoundedModuleHomomorphism"],[3,"FiniteModuleHomomorphism"],[3,"FPModuleHomomorphism"],[3,"FreeModuleHomomorphism"],[3,"GenericZeroHomomorphism"],[3,"HomPullback"],[3,"QuotientHomomorphism"],[3,"QuotientHomomorphismSource"],[3,"TruncatedHomomorphism"],[3,"TruncatedHomomorphismSource"],[4,"FMHI"],[8,"FPModuleT"],[8,"ModuleHomomorphism"],[8,"ZeroHomomorphism"],[8,"IdentityHomomorphism"],[3,"GenericError"],[3,"DegreeError"]]};
searchIndex["bivec"] = {"doc":"","i":[[3,"BiVec","bivec","A BiVec is like a Vec, except we allow indices to be…",null,null],[12,"data","","",0,null],[12,"min_degree","","",0,null],[11,"new","","",0,[[["i32"]],["self"]]],[11,"from_vec","","",0,[[["vec"],["i32"]],["self"]]],[11,"into_vec","","",0,[[["bivec"]],["vec"]]],[11,"with_capacity","","",0,[[["i32"]],["self"]]],[11,"min_degree","","",0,[[["self"]],["i32"]]],[11,"max_degree","","This returns the largest degree in the bivector. This is…",0,[[["self"]],["i32"]]],[11,"len","","This returns the \"length\" of the bivector, defined to be…",0,[[["self"]],["i32"]]],[11,"is_empty","","",0,[[["self"]],["bool"]]],[11,"push","","",0,[[["self"],["t"]]]],[11,"get","","",0,[[["self"],["i32"]],[["t"],["option"]]]],[11,"last","","",0,[[["self"]],[["t"],["option"]]]],[11,"iter","","",0,[[["self"]],["iter"]]],[11,"iter_mut","","",0,[[["self"]],["itermut"]]],[11,"iter_enum","","",0,[[["self"]]]],[11,"extend_with","","Extends the bivec such that `max_degree()` is at least…",0,[[["self"],["f"],["i32"]]]],[11,"reserve","","",0,[[["self"],["usize"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["bivec"]]],[11,"eq","","",0,[[["bivec"],["self"]],["bool"]]],[11,"ne","","",0,[[["bivec"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"index","","",0,[[["self"],["i32"]],["t"]]],[11,"index_mut","","",0,[[["self"],["i32"]],["t"]]],[11,"serialize","","",0,[[["s"],["self"]],["result"]]],[11,"deserialize","","",0,[[["d"]],["result"]]],[11,"save","","",0,[[["self"]],["result"]]],[11,"load","","",0,[[],["result"]]]],"p":[[3,"BiVec"]]};
searchIndex["ext"] = {"doc":"","i":[[0,"combinatorics","ext","",null,null],[17,"MAX_XI_TAU","ext::combinatorics","",null,null],[5,"adem_relation_coefficient","","",null,[[["validprime"],["u32"]],["u32"]]],[5,"inadmissible_pairs","","",null,[[["i32"],["validprime"],["bool"]],["vec"]]],[5,"tau_degrees","","",null,[[["validprime"]]]],[5,"xi_degrees","","",null,[[["validprime"]]]],[0,"block_structure","ext","",null,null],[3,"GeneratorBasisEltPair","ext::block_structure","",null,null],[12,"generator_degree","","",0,null],[12,"generator_index","","",0,null],[12,"basis_index","","",0,null],[3,"BlockStructure","","",null,null],[12,"total_dimension","","",1,null],[12,"basis_element_to_block_idx","","",1,null],[12,"block_starts","","",1,null],[3,"BlockStart","","",null,null],[12,"block_start_index","","",2,null],[12,"block_size","","",2,null],[0,"change_of_basis","ext","",null,null],[5,"adem_to_milnor_on_basis","ext::change_of_basis","",null,[[["u32"],["usize"],["ademalgebra"],["i32"],["milnoralgebra"],["fpvector"]]]],[5,"adem_to_milnor","","",null,[[["fpvector"],["u32"],["ademalgebra"],["i32"],["milnoralgebra"],["fpvector"]]]],[5,"milnor_to_adem_on_basis","","",null,[[["u32"],["usize"],["ademalgebra"],["i32"],["milnoralgebra"],["fpvector"]]]],[5,"milnor_to_adem","","",null,[[["fpvector"],["u32"],["ademalgebra"],["i32"],["milnoralgebra"],["fpvector"]]]],[5,"adem_q","","",null,[[["u32"],["ademalgebra"],["milnoralgebra"],["fpvector"]]]],[5,"adem_plist","","",null,[[["u32"],["ademalgebra"],["i32"],["milnoralgebra"],["fpvector"],["vec",["u32"]]]]],[0,"steenrod_parser","ext","",null,null],[4,"AlgebraBasisElt","ext::steenrod_parser","",null,null],[13,"AList","","",3,null],[13,"PList","","",3,null],[13,"P","","",3,null],[13,"Q","","",3,null],[4,"AlgebraParseNode","","",null,null],[13,"Product","","",4,null],[13,"Sum","","",4,null],[13,"BasisElt","","",4,null],[13,"Scalar","","",4,null],[4,"ModuleParseNode","","",null,null],[13,"Act","","",5,null],[13,"Sum","","",5,null],[13,"ModuleBasisElt","","",5,null],[4,"BocksteinOrSq","","",null,null],[13,"Bockstein","","",6,null],[13,"Sq","","",6,null],[5,"parse_algebra","","",null,[[["str"]],[["box",["error"]],["result",["algebraparsenode","box"]],["algebraparsenode"]]]],[5,"parse_module","","",null,[[["str"]],[["box",["error"]],["result",["moduleparsenode","box"]],["moduleparsenode"]]]],[3,"ParseError","","",null,null],[12,"info","","",7,null],[0,"steenrod_evaluator","ext","",null,null],[3,"SteenrodCalculator","ext::steenrod_evaluator","",null,null],[12,"adem_algebra","","",8,null],[12,"milnor_algebra","","",8,null],[5,"evaluate_algebra_adem","","",null,[[["str"],["milnoralgebra"],["ademalgebra"]],[["result",["box"]],["box",["error"]]]]],[5,"evaluate_algebra_milnor","","",null,[[["str"],["milnoralgebra"],["ademalgebra"]],[["result",["box"]],["box",["error"]]]]],[5,"evaluate_module","","",null,[[["str"],["m"],["ademalgebra"],["milnoralgebra"],["hashmap"]],[["result",["box"]],["box",["error"]]]]],[3,"DegreeError","","",null,null],[3,"UnknownBasisElementError","","",null,null],[12,"name","","",9,null],[0,"module","ext","",null,null],[0,"block_structure","ext::module","",null,null],[3,"GeneratorBasisEltPair","ext::module::block_structure","",null,null],[12,"generator_degree","","",0,null],[12,"generator_index","","",0,null],[12,"basis_index","","",0,null],[3,"BlockStructure","","",null,null],[12,"total_dimension","","",1,null],[12,"basis_element_to_block_idx","","",1,null],[12,"block_starts","","",1,null],[3,"BlockStart","","",null,null],[12,"block_start_index","","",2,null],[12,"block_size","","",2,null],[0,"homomorphism","ext::module","",null,null],[8,"ModuleHomomorphism","ext::module::homomorphism","",null,null],[16,"Source","","",10,null],[16,"Target","","",10,null],[18,"CUSTOM_QI","","",10,null],[10,"source","","",10,[[["self"]],["arc"]]],[10,"target","","",10,[[["self"]],["arc"]]],[10,"degree_shift","","",10,[[["self"]],["i32"]]],[10,"apply_to_basis_element","","Calling this function when `input_idx <…",10,[[["u32"],["usize"],["i32"],["self"],["fpvector"]]]],[10,"kernel","","",10,[[["self"],["i32"]],["subspace"]]],[10,"quasi_inverse","","",10,[[["self"],["i32"]],["quasiinverse"]]],[10,"compute_kernels_and_quasi_inverses_through_degree","","",10,[[["self"],["i32"]]]],[11,"apply","","",10,[[["fpvector"],["u32"],["i32"],["self"],["fpvector"]]]],[11,"prime","","",10,[[["self"]],["validprime"]]],[11,"min_degree","","",10,[[["self"]],["i32"]]],[11,"image","","Returns the image of the module homomorphism in degree…",10,[[["self"],["i32"]],["option"]]],[11,"calculate_quasi_inverse","","A version of kernel_and_quasi_inverse that, in fact,…",10,[[["self"],["i32"]],["quasiinverse"]]],[11,"kernel_and_quasi_inverse","","",10,[[["self"],["i32"]]]],[11,"get_matrix","","The (sliced) dimensions of `matrix` must be equal to…",10,[[["matrix"],["self"],["i32"]]]],[11,"apply_quasi_inverse","","",10,[[["fpvector"],["i32"],["self"],["fpvector"]]]],[8,"ZeroHomomorphism","","",null,null],[10,"zero_homomorphism","","",11,[[["arc"],["i32"],["arc"]],["self"]]],[8,"IdentityHomomorphism","","",null,null],[10,"identity_homomorphism","","",12,[[["arc"]],["self"]]],[3,"BoundedModuleHomomorphism","","",null,null],[12,"lock","","",13,null],[12,"source","","",13,null],[12,"target","","",13,null],[12,"degree_shift","","",13,null],[12,"matrices","","",13,null],[12,"quasi_inverses","","",13,null],[12,"kernels","","",13,null],[3,"FiniteModuleHomomorphism","","",null,null],[12,"source","","",14,null],[12,"target","","",14,null],[12,"map","","",14,null],[3,"FPModuleHomomorphism","","",null,null],[12,"source","","",15,null],[12,"underlying_map","","",15,null],[8,"FPModuleT","","",null,null],[10,"gen_idx_to_fp_idx","","",16,[[["usize"],["self"],["i32"]],["isize"]]],[10,"fp_idx_to_gen_idx","","",16,[[["usize"],["self"],["i32"]],["usize"]]],[10,"generators","","",16,[[["self"]],["arc"]]],[3,"FreeModuleHomomorphism","","",null,null],[12,"source","","",17,null],[12,"target","","",17,null],[12,"outputs","","",17,null],[12,"kernel","","",17,null],[12,"quasi_inverse","","",17,null],[12,"min_degree","","",17,null],[12,"lock","","",17,null],[12,"degree_shift","","",17,null],[3,"GenericZeroHomomorphism","","",null,null],[12,"source","","",18,null],[12,"target","","",18,null],[12,"degree_shift","","",18,null],[3,"HomPullback","","Given a map `map`: A -> B and `source` = Hom(B, X),…",null,null],[12,"source","","",19,null],[12,"target","","",19,null],[12,"map","","",19,null],[12,"kernel","","",19,null],[12,"quasi_inverse","","",19,null],[3,"QuotientHomomorphism","","",null,null],[12,"f","","",20,null],[12,"s","","",20,null],[12,"t","","",20,null],[3,"QuotientHomomorphismSource","","",null,null],[12,"f","","",21,null],[12,"s","","",21,null],[12,"t","","",21,null],[3,"TruncatedHomomorphism","","",null,null],[12,"f","","",22,null],[12,"s","","",22,null],[12,"t","","",22,null],[3,"TruncatedHomomorphismSource","","",null,null],[12,"f","","",23,null],[12,"s","","",23,null],[12,"t","","",23,null],[8,"SteenrodModule","ext::module","",null,null],[3,"FDModule","","",null,null],[12,"algebra","","",24,null],[12,"name","","",24,null],[12,"graded_dimension","","",24,null],[12,"gen_names","","",24,null],[12,"actions","","",24,null],[4,"FiniteModule","","",null,null],[13,"FDModule","","",25,null],[13,"FPModule","","",25,null],[13,"RealProjectiveSpace","","",25,null],[3,"FPModule","","",null,null],[12,"name","","",26,null],[12,"min_degree","","",26,null],[12,"generators","","",26,null],[12,"relations","","",26,null],[12,"map","","",26,null],[12,"index_table","","",26,null],[3,"FreeModule","","",null,null],[12,"algebra","","",27,null],[12,"name","","",27,null],[12,"min_degree","","",27,null],[12,"lock","","",27,null],[12,"gen_names","","",27,null],[12,"gen_deg_idx_to_internal_idx","","",27,null],[12,"table","","",27,null],[3,"FreeModuleTableEntry","","",null,null],[12,"num_gens","","",28,null],[12,"basis_element_to_opgen","","",28,null],[12,"generator_to_index","","",28,null],[3,"OperationGeneratorPair","","",null,null],[12,"operation_degree","","",29,null],[12,"operation_index","","",29,null],[12,"generator_degree","","",29,null],[12,"generator_index","","",29,null],[3,"HomModule","","",null,null],[12,"algebra","","",30,null],[12,"source","","",30,null],[12,"target","","",30,null],[12,"block_structures","","",30,null],[3,"QuotientModule","","Given a module `module`, this is the quotient of `module`…",null,null],[12,"module","","",31,null],[12,"subspaces","","",31,null],[12,"basis_list","","",31,null],[3,"RealProjectiveSpace","","This is $\\mathbb{RP}_{\\mathrm{min}}^{\\mathrm{max}}$. The…",null,null],[12,"algebra","","",32,null],[12,"min","","",32,null],[12,"clear_bottom","","",32,null],[12,"max","","",32,null],[3,"SumModule","","",null,null],[12,"algebra","","",33,null],[12,"min_degree","","",33,null],[12,"modules","","",33,null],[12,"block_structures","","",33,null],[3,"TensorModule","","",null,null],[12,"left","","",34,null],[12,"right","","",34,null],[12,"block_structures","","",34,null],[3,"TruncatedModule","","A module M where we quotient out everything above degree…",null,null],[12,"module","","",35,null],[12,"truncation","","",35,null],[8,"ZeroModule","","",null,null],[10,"zero_module","","",36,[[["arc"],["i32"]],["self"]]],[8,"BoundedModule","","",null,null],[10,"max_degree","","`max_degree` is the a degree such that if t >…",37,[[["self"]],["i32"]]],[11,"total_dimension","","",37,[[["self"]],["usize"]]],[11,"to_fd_module","","",37,[[["self"]],["finitedimensionalmodule"]]],[8,"Module","","",null,null],[16,"Algebra","","",38,null],[10,"algebra","","",38,[[["self"]],["arc"]]],[10,"name","","",38,[[["self"]],["string"]]],[10,"min_degree","","",38,[[["self"]],["i32"]]],[11,"compute_basis","","",38,[[["self"],["i32"]]]],[10,"dimension","","",38,[[["self"],["i32"]],["usize"]]],[10,"act_on_basis","","",38,[[["u32"],["usize"],["i32"],["self"],["fpvector"]]]],[10,"basis_element_to_string","","",38,[[["usize"],["self"],["i32"]],["string"]]],[11,"is_unit","","Whether this is the unit module.",38,[[["self"]],["bool"]]],[11,"prime","","",38,[[["self"]],["validprime"]]],[11,"borrow_output","","Whether act_on_basis_borrow is available.",38,[[["self"]],["bool"]]],[11,"act_on_basis_borrow","","Returns a borrow of the value of the corresponding action…",38,[[["usize"],["i32"],["self"]],["fpvector"]]],[11,"act","","",38,[[["fpvector"],["u32"],["usize"],["i32"],["self"],["fpvector"]]]],[11,"act_by_element","","",38,[[["fpvector"],["u32"],["i32"],["self"],["fpvector"]]]],[11,"generator_list_string","","",38,[[["self"],["i32"]],["string"]]],[11,"element_to_string","","",38,[[["fpvector"],["self"],["i32"]],["string"]]],[11,"truncate_to_fd_module","","This truncates the module to `max_dim` and represents it…",38,[[["arc"],["i32"]],["finitedimensionalmodule"]]],[3,"ModuleFailedRelationError","","",null,null],[12,"relation","","",39,null],[12,"value","","",39,null],[0,"cli_module_loaders","ext","",null,null],[5,"get_gens","ext::cli_module_loaders","",null,[[["i32"]],[["box",["error"]],["bivec",["vec"]],["result",["bivec","box"]]]]],[5,"gens_to_json","","",null,[[["bivec"]],["value"]]],[5,"get_expression_to_vector","","",null,[[["str"],["fpvector"],["f"]]]],[5,"interactive_module_define","","",null,[[],[["string"],["box",["error"]],["result",["string","box"]]]]],[5,"interactive_module_define_fdmodule","","",null,[[["string"],["value"],["validprime"],["bool"]],[["box",["error"]],["result",["box"]]]]],[5,"interactive_module_define_fpmodule","","",null,[[["string"],["value"],["validprime"],["bool"]],[["box",["error"]],["result",["box"]]]]],[0,"chain_complex","ext","",null,null],[3,"FiniteAugmentedChainComplex","ext::chain_complex","",null,null],[12,"modules","","",40,null],[12,"zero_module","","",40,null],[12,"differentials","","",40,null],[12,"target_cc","","",40,null],[12,"chain_maps","","",40,null],[3,"FiniteChainComplex","","",null,null],[12,"modules","","",41,null],[12,"zero_module","","",41,null],[12,"differentials","","",41,null],[3,"TensorChainComplex","","",null,null],[12,"lock","","",42,null],[12,"left_cc","","",42,null],[12,"right_cc","","",42,null],[12,"modules","","",42,null],[12,"zero_module","","",42,null],[12,"differentials","","",42,null],[3,"ChainMap","","`chain_maps` is required to be non-empty",null,null],[12,"s_shift","","",43,null],[12,"chain_maps","","",43,null],[4,"ChainComplexGrading","","",null,null],[13,"Homological","","",44,null],[13,"Cohomological","","",44,null],[0,"finite_chain_complex","","",null,null],[3,"FiniteChainComplex","ext::chain_complex::finite_chain_complex","",null,null],[12,"modules","","",41,null],[12,"zero_module","","",41,null],[12,"differentials","","",41,null],[3,"FiniteAugmentedChainComplex","","",null,null],[12,"modules","","",40,null],[12,"zero_module","","",40,null],[12,"differentials","","",40,null],[12,"target_cc","","",40,null],[12,"chain_maps","","",40,null],[11,"max_degree","ext::chain_complex","",41,[[["self"]],["i32"]]],[11,"pop","","",41,[[["self"]]]],[11,"ccdz","","",41,[[["arc"]],["self"]]],[0,"hom_complex","","",null,null],[3,"HomChainComplex","ext::chain_complex::hom_complex","",null,null],[12,"lock","","",45,null],[12,"source_cc","","",45,null],[12,"target_cc","","",45,null],[12,"modules","","",45,null],[12,"zero_module","","",45,null],[12,"differentials","","",45,null],[3,"HomChainMap","","",null,null],[12,"source_cc","","",46,null],[12,"target_cc","","",46,null],[12,"lock","","",46,null],[12,"source","","",46,null],[12,"target","","",46,null],[12,"quasi_inverses","","",46,null],[6,"SHM","","",null,null],[11,"new","","",45,[[["arc"],["arc",["finitechaincomplex"]],["finitechaincomplex"]],["self"]]],[11,"source_cc","","",45,[[["self"]],["arc"]]],[11,"target_cc","","",45,[[["self"]],[["arc",["finitechaincomplex"]],["finitechaincomplex"]]]],[0,"tensor_product_chain_complex","ext::chain_complex","",null,null],[3,"TensorChainComplex","ext::chain_complex::tensor_product_chain_complex","",null,null],[12,"lock","","",42,null],[12,"left_cc","","",42,null],[12,"right_cc","","",42,null],[12,"modules","","",42,null],[12,"zero_module","","",42,null],[12,"differentials","","",42,null],[3,"TensorChainMap","","",null,null],[12,"left_cc","","",47,null],[12,"right_cc","","",47,null],[12,"source_s","","",47,null],[12,"lock","","",47,null],[12,"source","","",47,null],[12,"target","","",47,null],[12,"quasi_inverses","","",47,null],[6,"STM","","",null,null],[6,"TensorSquareCC","","",null,null],[11,"new","ext::chain_complex","",42,[[["arc"],["arc"]],["self"]]],[11,"left_cc","","",42,[[["self"]],["arc"]]],[11,"right_cc","","",42,[[["self"]],["arc"]]],[11,"swap","","This function sends a (x) b to b (x) a. This makes sense…",42,[[["fpvector"],["u32"],["i32"],["fpvector"],["self"]]]],[11,"calculate_quasi_inverse","ext::chain_complex::tensor_product_chain_complex","",47,[[["self"],["i32"]]]],[8,"FreeChainComplex","ext::chain_complex","",null,null],[11,"graded_dimension_string","","",48,[[["u32"],["self"],["i32"]],["string"]]],[8,"ChainComplex","","A chain complex is defined to start in degree 0. The…",null,null],[16,"Algebra","","",49,null],[16,"Module","","",49,null],[16,"Homomorphism","","",49,null],[11,"prime","","",49,[[["self"]],["validprime"]]],[10,"algebra","","",49,[[["self"]],["arc"]]],[10,"min_degree","","",49,[[["self"]],["i32"]]],[10,"zero_module","","",49,[[["self"]],["arc"]]],[10,"module","","",49,[[["u32"],["self"]],["arc"]]],[10,"differential","","",49,[[["u32"],["self"]],["arc"]]],[10,"compute_through_bidegree","","",49,[[["u32"],["self"],["i32"]]]],[10,"set_homology_basis","","",49,[[["u32"],["usize"],["i32"],["self"],["vec",["usize"]]]]],[10,"homology_basis","","",49,[[["u32"],["self"],["i32"]],["vec"]]],[10,"max_homology_degree","","",49,[[["u32"],["self"]],["i32"]]],[11,"compute_homology_through_bidegree","","",49,[[["u32"],["self"],["i32"]]]],[11,"homology_dimension","","",49,[[["u32"],["self"],["i32"]],["usize"]]],[11,"homology_gen_to_cocyle","","",49,[[["u32"],["usize"],["i32"],["fpvector"],["self"]]]],[11,"compute_homology","","",49,[[["u32"],["self"],["i32"]]]],[8,"CochainComplex","","",null,null],[16,"Algebra","","",50,null],[16,"Module","","",50,null],[16,"Homomorphism","","",50,null],[11,"prime","","",50,[[["self"]],["validprime"]]],[10,"algebra","","",50,[[["self"]],["arc"]]],[10,"min_degree","","",50,[[["self"]],["i32"]]],[10,"zero_module","","",50,[[["self"]],["arc"]]],[10,"module","","",50,[[["u32"],["self"]],["arc"]]],[10,"differential","","",50,[[["u32"],["self"]],["arc"]]],[10,"compute_through_bidegree","","",50,[[["u32"],["self"],["i32"]]]],[10,"set_cohomology_basis","","",50,[[["u32"],["usize"],["i32"],["self"],["vec",["usize"]]]]],[10,"cohomology_basis","","",50,[[["u32"],["self"],["i32"]],["vec"]]],[10,"max_cohomology_degree","","",50,[[["u32"],["self"]],["i32"]]],[11,"compute_cohomology_through_bidegree","","",50,[[["u32"],["self"],["i32"]]]],[11,"cohomology_dimension","","",50,[[["u32"],["self"],["i32"]],["usize"]]],[11,"homology_gen_to_cocyle","","",50,[[["u32"],["usize"],["i32"],["fpvector"],["self"]]]],[11,"compute_cohomology","","",50,[[["u32"],["self"],["i32"]]]],[8,"AugmentedChainComplex","","An augmented chain complex is a map of chain complexes C…",null,null],[16,"TargetComplex","","",51,null],[16,"ChainMap","","",51,null],[10,"target","","",51,[[["self"]],["arc"]]],[10,"chain_map","","",51,[[["u32"],["self"]],["arc"]]],[8,"BoundedChainComplex","","A bounded chain complex is a chain complex C for which C_s…",null,null],[10,"max_s","","",52,[[["self"]],["u32"]]],[8,"UnitChainComplex","","",null,null],[10,"unit_chain_complex","","",53,[[["arc"]],["self"]]],[0,"resolution","ext","",null,null],[3,"ResolutionInner","ext::resolution","ResolutionInner contains the data of the actual…",null,null],[12,"complex","","",54,null],[12,"modules","","",54,null],[12,"zero_module","","",54,null],[12,"chain_maps","","",54,null],[12,"differentials","","",54,null],[12,"kernels","","",54,null],[3,"Cocycle","","",null,null],[12,"s","","",55,null],[12,"t","","",55,null],[12,"class","","",55,null],[12,"name","","",55,null],[3,"SelfMap","","",null,null],[12,"s","","",56,null],[12,"t","","",56,null],[12,"name","","",56,null],[12,"map_data","","",56,null],[12,"map","","",56,null],[3,"Resolution","","Fields * `kernels` - For each internal degree, store the…",null,null],[12,"inner","","",57,null],[12,"next_s","","",57,null],[12,"next_t","","",57,null],[12,"add_class","","",57,null],[12,"add_structline","","",57,null],[12,"filtration_one_products","","",57,null],[12,"unit_resolution","","",57,null],[12,"unit_resolution_owner","","",57,null],[12,"product_names","","",57,null],[12,"product_list","","",57,null],[12,"chain_maps_to_unit_resolution","","",57,null],[12,"max_product_homological_degree","","",57,null],[12,"self_maps","","",57,null],[5,"ptr_eq","","Hack to compare two pointers of different types (in this…",null,[[["arc"],["arc"]],["bool"]]],[6,"AddClassFn","","",null,null],[6,"AddStructlineFn","","",null,null],[11,"new","","",54,[[["arc"]],["self"]]],[11,"extend_through_degree","","This function prepares the ResolutionInner object to…",54,[[["u32"],["i32"],["self"]]]],[11,"step_resolution","","Call our resolution $X$, and the chain complex to resolve…",54,[[["u32"],["self"],["i32"]]]],[11,"cocycle_string","","",54,[[["u32"],["usize"],["i32"],["self"]],["string"]]],[11,"complex","","",54,[[["self"]],["arc"]]],[11,"number_of_gens_in_bidegree","","",54,[[["u32"],["self"],["i32"]],["usize"]]],[11,"prime","","",54,[[["self"]],["validprime"]]],[11,"new","","",57,[[["arc"],["option",["addclassfn"]],["addstructlinefn"],["option",["addstructlinefn"]],["addclassfn"]],["self"]]],[11,"new_with_inner","","",57,[[["resolutioninner"],["option",["addclassfn"]],["addstructlinefn"],["option",["addstructlinefn"]],["addclassfn"]],["self"]]],[11,"resolve_through_bidegree","","",57,[[["u32"],["self"],["i32"]]]],[11,"resolve_through_degree","","",57,[[["self"],["i32"]]]],[11,"step_after","","",57,[[["u32"],["self"],["i32"]]]],[11,"compute_filtration_one_products","","",57,[[["u32"],["self"],["i32"]]]],[11,"add_structline","","",57,[[["str"],["u32"],["vec",["vec"]],["i32"],["vec",["u32"]],["self"],["bool"]]]],[11,"max_computed_degree","","",57,[[["self"]],["i32"]]],[11,"max_computed_homological_degree","","",57,[[["self"]],["u32"]]],[11,"graded_dimension_vec","","",57,[[["self"]],[["vec",["vec"]],["vec",["usize"]]]]],[11,"graded_dimension_string","","",57,[[["self"]],["string"]]],[11,"catch_up_products","","This function computes the products between the element…",57,[[["self"]]]],[11,"add_product","","The return value is whether the product was actually…",57,[[["str"],["u32"],["i32"],["self"],["vec",["u32"]]],["bool"]]],[11,"construct_unit_resolution","","",57,[[["self"]]]],[11,"set_unit_resolution","","",57,[[["self"],["rwlock",["resolution"]],["weak",["rwlock"]]]]],[11,"compute_products","","Compute products whose result lie in degrees up to (s, t)",57,[[["u32"],["i32"],["self"]]]],[11,"compute_product_step","","Target = result of the product Source = multiplicand",57,[[["u32"],["cocycle"],["i32"],["self"]]]],[11,"construct_maps_to_unit","","",57,[[["u32"],["self"],["i32"]]]],[11,"extend_maps_to_unit","","This ensures the chain_maps_to_unit_resolution are defined…",57,[[["u32"],["self"],["i32"]]]],[11,"add_self_map","","The return value is whether the self map was actually…",57,[[["str"],["u32"],["i32"],["self"],["matrix"]],["bool"]]],[11,"compute_self_maps","","We compute the products by self maps where the result has…",57,[[["u32"],["self"],["i32"]]]],[11,"algebra","","",57,[[["self"]],["arc"]]],[11,"prime","","",57,[[["self"]],["validprime"]]],[11,"module","","",57,[[["u32"],["self"]],[["arc",["freemodule"]],["freemodule"]]]],[11,"min_degree","","",57,[[["self"]],["i32"]]],[11,"differential","","",57,[[["u32"],["self"]],[["freemodulehomomorphism",["freemodule"]],["arc",["freemodulehomomorphism"]]]]],[0,"resolution_homomorphism","ext","",null,null],[3,"ResolutionHomomorphism","ext::resolution_homomorphism","",null,null],[12,"name","","",58,null],[12,"source","","",58,null],[12,"target","","",58,null],[12,"maps","","",58,null],[12,"homological_degree_shift","","",58,null],[12,"internal_degree_shift","","",58,null],[6,"ResolutionHomomorphismToUnit","","",null,null],[11,"new","","",58,[[["string"],["u32"],["i32"],["weak"],["weak"]],["self"]]],[11,"get_map_ensure_length","","",58,[[["u32"],["self"]],["freemodulehomomorphism"]]],[11,"get_map","","",58,[[["u32"],["self"]],["freemodulehomomorphism"]]],[11,"into_chain_maps","","",58,[[],[["freemodulehomomorphism"],["vec",["freemodulehomomorphism"]]]]],[11,"extend","","Extend the resolution homomorphism such that it is defined…",58,[[["u32"],["self"],["i32"]]]],[11,"extend_step","","",58,[[["u32"],["matrix"],["i32"],["self"],["option",["matrix"]]]]],[11,"extend_step_helper","","",58,[[["u32"],["matrix"],["i32"],["self"],["option",["matrix"]]],["matrix"]]],[11,"from_module_homomorphism","","",58,[[["string"],["arc",["resolutioninner"]],["arc"],["finitemodulehomomorphism"],["resolutioninner",["ccc"]]],["self"]]],[11,"act","","",58,[[["u32"],["usize"],["i32"],["fpvector"],["self"]]]],[0,"yoneda","ext","",null,null],[5,"rate_operation","ext::yoneda","",null,[[["arc"],["usize"],["i32"]],["i32"]]],[5,"rate_adem_operation","","",null,[[["i32"],["usize"],["ademalgebra"]],["i32"]]],[5,"operation_drop","","",null,[[["i32"],["usize"],["ademalgebra"]],["i32"]]],[5,"split_mut_borrow","","",null,[[["vec"],["usize"]]]],[5,"yoneda_representative_element","","",null,[[["u32"],["usize"],["i32"],["arc"]],["yoneda"]]],[5,"yoneda_representative","","This function produces a quasi-isomorphic quotient of `cc`…",null,[[["chainmap",["freemodulehomomorphism"]],["freemodulehomomorphism"],["arc"]],["yoneda"]]],[5,"yoneda_representative_with_strategy","","",null,[[["f"],["chainmap",["freemodulehomomorphism"]],["freemodulehomomorphism"],["arc"]],["yoneda"]]],[5,"compute_kernel_image","","This function does the following computation:",null,[[["option",["arc"]],["arc"],["option"],["i32"],["subspace"],["option",["subspace"]],["g"],["qm"]]]],[6,"Yoneda","","",null,null],[17,"PENALTY_UNIT","","",null,null],[0,"utils","ext","",null,null],[3,"Config","ext::utils","",null,null],[12,"module_paths","","",59,null],[12,"module_file_name","","",59,null],[12,"algebra_name","","",59,null],[12,"max_degree","","",59,null],[3,"AlgebraicObjectsBundle","","",null,null],[12,"chain_complex","","",60,null],[12,"module","","",60,null],[12,"resolution","","",60,null],[3,"ModuleFileNotFoundError","","",null,null],[12,"name","","",61,null],[5,"construct","","",null,[[["config"]],[["algebraicobjectsbundle"],["result",["algebraicobjectsbundle","box"]],["box",["error"]]]]],[5,"construct_from_json","","",null,[[["value"],["string"]],[["algebraicobjectsbundle"],["result",["algebraicobjectsbundle","box"]],["box",["error"]]]]],[5,"load_module_from_file","","",null,[[["config"]],[["string"],["box",["error"]],["result",["string","box"]]]]],[6,"CCC","ext","",null,null],[11,"from","ext::module::block_structure","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","ext::steenrod_parser","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","ext::steenrod_evaluator","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_string","","",62,[[["self"]],["string"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","ext::module::homomorphism","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","ext::module","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","ext::chain_complex","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","ext::chain_complex::hom_complex","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","ext::chain_complex::tensor_product_chain_complex","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","ext::resolution","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","ext::resolution_homomorphism","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","ext::utils","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_string","","",61,[[["self"]],["string"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"source","ext::module::homomorphism","",21,[[["self"]],["arc"]]],[11,"target","","",21,[[["self"]],["arc"]]],[11,"degree_shift","","",21,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","",21,[[["u32"],["usize"],["i32"],["self"],["fpvector"]]]],[11,"kernel","","",21,[[["self"],["i32"]],["subspace"]]],[11,"quasi_inverse","","",21,[[["self"],["i32"]],["quasiinverse"]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",21,[[["self"],["i32"]]]],[11,"source","","",13,[[["self"]],["arc"]]],[11,"target","","",13,[[["self"]],["arc"]]],[11,"degree_shift","","",13,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","",13,[[["u32"],["usize"],["i32"],["self"],["fpvector"]]]],[11,"quasi_inverse","","",13,[[["self"],["i32"]],["quasiinverse"]]],[11,"kernel","","",13,[[["self"],["i32"]],["subspace"]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",13,[[["self"],["i32"]]]],[11,"source","","",17,[[["self"]],["arc"]]],[11,"target","","",17,[[["self"]],["arc"]]],[11,"degree_shift","","",17,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","",17,[[["u32"],["usize"],["i32"],["self"],["fpvector"]]]],[11,"quasi_inverse","","",17,[[["self"],["i32"]],["quasiinverse"]]],[11,"kernel","","",17,[[["self"],["i32"]],["subspace"]]],[11,"get_matrix","","",17,[[["matrix"],["self"],["i32"]]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",17,[[["self"],["i32"]]]],[11,"source","","",19,[[["self"]],["arc"]]],[11,"target","","",19,[[["self"]],["arc"]]],[11,"degree_shift","","",19,[[["self"]],["i32"]]],[11,"min_degree","","",19,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","",19,[[["u32"],["usize"],["i32"],["self"],["fpvector"]]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",19,[[["self"],["i32"]]]],[11,"quasi_inverse","","",19,[[["self"],["i32"]],["quasiinverse"]]],[11,"kernel","","",19,[[["self"],["i32"]],["subspace"]]],[11,"source","","",23,[[["self"]],["arc"]]],[11,"target","","",23,[[["self"]],["arc"]]],[11,"degree_shift","","",23,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","",23,[[["u32"],["usize"],["i32"],["self"],["fpvector"]]]],[11,"kernel","","",23,[[["self"],["i32"]],["subspace"]]],[11,"quasi_inverse","","",23,[[["self"],["i32"]],["quasiinverse"]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",23,[[["self"],["i32"]]]],[11,"source","","",20,[[["self"]],["arc"]]],[11,"target","","",20,[[["self"]],["arc"]]],[11,"degree_shift","","",20,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","",20,[[["u32"],["usize"],["i32"],["self"],["fpvector"]]]],[11,"kernel","","",20,[[["self"],["i32"]],["subspace"]]],[11,"quasi_inverse","","",20,[[["self"],["i32"]],["quasiinverse"]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",20,[[["self"],["i32"]]]],[11,"source","","",15,[[["self"]],["arc"]]],[11,"target","","",15,[[["self"]],["arc"]]],[11,"degree_shift","","",15,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","",15,[[["u32"],["usize"],["i32"],["self"],["fpvector"]]]],[11,"quasi_inverse","","",15,[[["self"],["i32"]],["quasiinverse"]]],[11,"kernel","","",15,[[["self"],["i32"]],["subspace"]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",15,[[["self"],["i32"]]]],[11,"source","","",14,[[["self"]],["arc"]]],[11,"target","","",14,[[["self"]],["arc"]]],[11,"degree_shift","","",14,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","",14,[[["u32"],["usize"],["i32"],["self"],["fpvector"]]]],[11,"quasi_inverse","","",14,[[["self"],["i32"]],["quasiinverse"]]],[11,"kernel","","",14,[[["self"],["i32"]],["subspace"]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",14,[[["self"],["i32"]]]],[11,"source","","",22,[[["self"]],["arc"]]],[11,"target","","",22,[[["self"]],["arc"]]],[11,"degree_shift","","",22,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","",22,[[["u32"],["usize"],["i32"],["self"],["fpvector"]]]],[11,"kernel","","",22,[[["self"],["i32"]],["subspace"]]],[11,"quasi_inverse","","",22,[[["self"],["i32"]],["quasiinverse"]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",22,[[["self"],["i32"]]]],[11,"source","","",18,[[["self"]],["arc"]]],[11,"target","","",18,[[["self"]],["arc"]]],[11,"degree_shift","","",18,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","",18,[[["u32"],["usize"],["i32"],["self"],["fpvector"]]]],[11,"quasi_inverse","","",18,[[["self"],["i32"]],["quasiinverse"]]],[11,"kernel","","",18,[[["self"],["i32"]],["subspace"]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",18,[[["self"],["i32"]]]],[11,"save","","",17,[[["self"]],[["error"],["result",["error"]]]]],[11,"save","ext::module","",27,[[["self"]],[["error"],["result",["error"]]]]],[11,"zero_module","","",34,[[["arc"],["i32"]],["tensormodule"]]],[11,"zero_module","","",25,[[["steenrodalgebra"],["i32"],["arc",["steenrodalgebra"]]],["finitemodule"]]],[11,"zero_module","","",32,[[["steenrodalgebra"],["i32"],["arc",["steenrodalgebra"]]],["realprojectivespace"]]],[11,"zero_module","","",24,[[["arc"],["i32"]],["finitedimensionalmodule"]]],[11,"zero_module","","",26,[[["arc"],["i32"]],["finitelypresentedmodule"]]],[11,"zero_module","","",33,[[["arc"],["i32"]],["summodule"]]],[11,"zero_homomorphism","ext::module::homomorphism","",18,[[["arc"],["i32"],["arc"]],["genericzerohomomorphism"]]],[11,"zero_homomorphism","","",14,[[["finitemodule"],["i32"],["arc"],["arc",["finitemodule"]]],["finitemodulehomomorphism"]]],[11,"zero_homomorphism","","",13,[[["arc"],["i32"],["arc"]],["boundedmodulehomomorphism"]]],[11,"zero_homomorphism","","",15,[[["arc"],["arc"],["i32"]],["fpmodulehomomorphism"]]],[11,"description","ext::module","",39,[[["self"]],["str"]]],[11,"description","ext::steenrod_evaluator","",9,[[["self"]],["str"]]],[11,"description","ext::steenrod_parser","",7,[[["self"]],["str"]]],[11,"description","ext::steenrod_evaluator","",62,[[["self"]],["str"]]],[11,"fmt","ext::module","",39,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","ext::steenrod_parser","",7,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","ext::steenrod_evaluator","",9,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",62,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"load","ext::module::homomorphism","",17,[[],[["result",["freemodulehomomorphism","error"]],["error"],["freemodulehomomorphism"]]]],[11,"load","ext::module","",27,[[],[["result",["freemodule","error"]],["error"],["freemodule"]]]],[11,"eq","","",24,[[["finitedimensionalmodule"],["self"]],["bool"]]],[11,"eq","","",26,[[["finitelypresentedmodule"],["self"]],["bool"]]],[11,"eq","","",25,[[["self"],["finitemodule"]],["bool"]]],[11,"ne","","",25,[[["self"],["finitemodule"]],["bool"]]],[11,"eq","","",32,[[["self"],["realprojectivespace"]],["bool"]]],[11,"fp_idx_to_gen_idx","","",25,[[["usize"],["self"],["i32"]],["usize"]]],[11,"gen_idx_to_fp_idx","","",25,[[["usize"],["self"],["i32"]],["isize"]]],[11,"generators","","",25,[[["self"]],["arc"]]],[11,"fp_idx_to_gen_idx","","",26,[[["usize"],["self"],["i32"]],["usize"]]],[11,"gen_idx_to_fp_idx","","",26,[[["usize"],["self"],["i32"]],["isize"]]],[11,"generators","","",26,[[["self"]],["arc"]]],[11,"clone","ext::module::homomorphism","",13,[[["self"]],["boundedmodulehomomorphism"]]],[11,"clone","ext::steenrod_parser","",4,[[["self"]],["algebraparsenode"]]],[11,"clone","","",5,[[["self"]],["moduleparsenode"]]],[11,"clone","ext::module","",24,[[["self"]],["finitedimensionalmodule"]]],[11,"clone","ext::steenrod_parser","",3,[[["self"]],["algebrabasiselt"]]],[11,"clone","","",6,[[["self"]],["bocksteinorsq"]]],[11,"clone","ext::module","",28,[[["self"]],["freemoduletableentry"]]],[11,"clone","","",29,[[["self"]],["operationgeneratorpair"]]],[11,"fmt","ext::module::block_structure","",0,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","ext::module","",39,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","ext::steenrod_parser","",6,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","ext::steenrod_evaluator","",9,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","ext::module::block_structure","",1,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","ext::steenrod_parser","",4,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","ext::module::block_structure","",2,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","ext::steenrod_evaluator","",62,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","ext::module","",29,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"identity_homomorphism","ext::module::homomorphism","",15,[[["arc"]],["fpmodulehomomorphism"]]],[11,"identity_homomorphism","","",13,[[["arc"]],["boundedmodulehomomorphism"]]],[11,"identity_homomorphism","","",14,[[["finitemodule"],["arc",["finitemodule"]]],[["finitemodule"],["finitemodulehomomorphism",["finitemodule"]]]]],[11,"algebra","ext::module","",31,[[["self"]],["arc"]]],[11,"name","","",31,[[["self"]],["string"]]],[11,"min_degree","","",31,[[["self"]],["i32"]]],[11,"compute_basis","","",31,[[["self"],["i32"]]]],[11,"dimension","","",31,[[["self"],["i32"]],["usize"]]],[11,"act_on_basis","","",31,[[["u32"],["usize"],["i32"],["self"],["fpvector"]]]],[11,"basis_element_to_string","","",31,[[["usize"],["self"],["i32"]],["string"]]],[11,"algebra","","",33,[[["self"]],["arc"]]],[11,"name","","",33,[[["self"]],["string"]]],[11,"min_degree","","",33,[[["self"]],["i32"]]],[11,"compute_basis","","",33,[[["self"],["i32"]]]],[11,"dimension","","",33,[[["self"],["i32"]],["usize"]]],[11,"act_on_basis","","",33,[[["u32"],["usize"],["i32"],["self"],["fpvector"]]]],[11,"basis_element_to_string","","",33,[[["usize"],["self"],["i32"]],["string"]]],[11,"algebra","","",25,[[["self"]],["arc"]]],[11,"name","","",25,[[["self"]],["string"]]],[11,"min_degree","","",25,[[["self"]],["i32"]]],[11,"compute_basis","","",25,[[["self"],["i32"]]]],[11,"dimension","","",25,[[["self"],["i32"]],["usize"]]],[11,"act_on_basis","","",25,[[["u32"],["usize"],["i32"],["self"],["fpvector"]]]],[11,"act","","",25,[[["fpvector"],["u32"],["usize"],["i32"],["self"],["fpvector"]]]],[11,"act_by_element","","",25,[[["fpvector"],["u32"],["i32"],["self"],["fpvector"]]]],[11,"basis_element_to_string","","",25,[[["usize"],["self"],["i32"]],["string"]]],[11,"is_unit","","",25,[[["self"]],["bool"]]],[11,"prime","","",25,[[["self"]],["validprime"]]],[11,"borrow_output","","Whether act_on_basis_borrow is available.",25,[[["self"]],["bool"]]],[11,"act_on_basis_borrow","","",25,[[["usize"],["i32"],["self"]],["fpvector"]]],[11,"name","","",32,[[["self"]],["string"]]],[11,"algebra","","",32,[[["self"]],[["steenrodalgebra"],["arc",["steenrodalgebra"]]]]],[11,"min_degree","","",32,[[["self"]],["i32"]]],[11,"dimension","","",32,[[["self"],["i32"]],["usize"]]],[11,"basis_element_to_string","","",32,[[["usize"],["self"],["i32"]],["string"]]],[11,"act_on_basis","","",32,[[["u32"],["usize"],["i32"],["self"],["fpvector"]]]],[11,"name","","",24,[[["self"]],["string"]]],[11,"algebra","","",24,[[["self"]],["arc"]]],[11,"min_degree","","",24,[[["self"]],["i32"]]],[11,"compute_basis","","",24,[[["self"],["i32"]]]],[11,"dimension","","",24,[[["self"],["i32"]],["usize"]]],[11,"basis_element_to_string","","",24,[[["usize"],["self"],["i32"]],["string"]]],[11,"is_unit","","",24,[[["self"]],["bool"]]],[11,"act_on_basis","","",24,[[["u32"],["usize"],["i32"],["self"],["fpvector"]]]],[11,"borrow_output","","",24,[[["self"]],["bool"]]],[11,"act_on_basis_borrow","","",24,[[["usize"],["i32"],["self"]],["fpvector"]]],[11,"algebra","","",26,[[["self"]],["arc"]]],[11,"min_degree","","",26,[[["self"]],["i32"]]],[11,"name","","",26,[[["self"]],["string"]]],[11,"compute_basis","","",26,[[["self"],["i32"]]]],[11,"dimension","","",26,[[["self"],["i32"]],["usize"]]],[11,"act_on_basis","","",26,[[["u32"],["usize"],["i32"],["self"],["fpvector"]]]],[11,"basis_element_to_string","","",26,[[["usize"],["self"],["i32"]],["string"]]],[11,"name","","",27,[[["self"]],["string"]]],[11,"algebra","","",27,[[["self"]],["arc"]]],[11,"min_degree","","",27,[[["self"]],["i32"]]],[11,"dimension","","",27,[[["self"],["i32"]],["usize"]]],[11,"basis_element_to_string","","",27,[[["usize"],["self"],["i32"]],["string"]]],[11,"act_on_basis","","",27,[[["u32"],["usize"],["i32"],["self"],["fpvector"]]]],[11,"algebra","","",34,[[["self"]],["arc"]]],[11,"name","","",34,[[["self"]],["string"]]],[11,"min_degree","","",34,[[["self"]],["i32"]]],[11,"compute_basis","","",34,[[["self"],["i32"]]]],[11,"dimension","","",34,[[["self"],["i32"]],["usize"]]],[11,"act_on_basis","","",34,[[["u32"],["usize"],["i32"],["self"],["fpvector"]]]],[11,"act","","",34,[[["fpvector"],["u32"],["usize"],["i32"],["self"],["fpvector"]]]],[11,"basis_element_to_string","","",34,[[["usize"],["self"],["i32"]],["string"]]],[11,"algebra","","",30,[[["self"]],["arc"]]],[11,"name","","",30,[[["self"]],["string"]]],[11,"min_degree","","",30,[[["self"]],["i32"]]],[11,"compute_basis","","",30,[[["self"],["i32"]]]],[11,"dimension","","",30,[[["self"],["i32"]],["usize"]]],[11,"act_on_basis","","",30,[[["u32"],["usize"],["i32"],["self"],["fpvector"]]]],[11,"basis_element_to_string","","",30,[[["usize"],["self"],["i32"]],["string"]]],[11,"algebra","","",35,[[["self"]],["arc"]]],[11,"name","","",35,[[["self"]],["string"]]],[11,"min_degree","","",35,[[["self"]],["i32"]]],[11,"compute_basis","","",35,[[["self"],["i32"]]]],[11,"dimension","","",35,[[["self"],["i32"]],["usize"]]],[11,"act_on_basis","","",35,[[["u32"],["usize"],["i32"],["self"],["fpvector"]]]],[11,"basis_element_to_string","","",35,[[["usize"],["self"],["i32"]],["string"]]],[11,"max_degree","","",34,[[["self"]],["i32"]]],[11,"max_degree","","",24,[[["self"]],["i32"]]],[11,"max_degree","","",33,[[["self"]],["i32"]]],[11,"max_degree","","",31,[[["self"]],["i32"]]],[11,"max_degree","","",35,[[["self"]],["i32"]]],[11,"max_degree","","",25,[[["self"]],["i32"]]],[11,"from","ext::module::homomorphism","",14,[[["fpmodulehomomorphism",["finitemodule"]],["finitemodule"]],["finitemodulehomomorphism"]]],[11,"from","ext::module","",25,[[["steenrodalgebra"],["finitelypresentedmodule",["steenrodalgebra"]]],["finitemodule"]]],[11,"from","ext::module::homomorphism","",14,[[["finitemodule"],["boundedmodulehomomorphism",["finitemodule"]]],["finitemodulehomomorphism"]]],[11,"from","ext::module","",25,[[["steenrodalgebra"],["finitedimensionalmodule",["steenrodalgebra"]]],["finitemodule"]]],[11,"from","","",25,[[["realprojectivespace"]],["finitemodule"]]],[11,"algebra","ext::chain_complex","",41,[[["self"]],["arc"]]],[11,"min_degree","","",41,[[["self"]],["i32"]]],[11,"zero_module","","",41,[[["self"]],["arc"]]],[11,"module","","",41,[[["u32"],["self"]],["arc"]]],[11,"differential","","",41,[[["u32"],["self"]],["arc"]]],[11,"compute_through_bidegree","","",41,[[["u32"],["self"],["i32"]]]],[11,"set_homology_basis","","",41,[[["u32"],["usize"],["i32"],["self"],["vec",["usize"]]]]],[11,"homology_basis","","",41,[[["u32"],["self"],["i32"]],["vec"]]],[11,"max_homology_degree","","",41,[[["u32"],["self"]],["i32"]]],[11,"algebra","","",40,[[["self"]],["arc"]]],[11,"min_degree","","",40,[[["self"]],["i32"]]],[11,"zero_module","","",40,[[["self"]],["arc"]]],[11,"module","","",40,[[["u32"],["self"]],["arc"]]],[11,"differential","","",40,[[["u32"],["self"]],["arc"]]],[11,"compute_through_bidegree","","",40,[[["u32"],["self"],["i32"]]]],[11,"set_homology_basis","","",40,[[["u32"],["usize"],["i32"],["self"],["vec",["usize"]]]]],[11,"homology_basis","","",40,[[["u32"],["self"],["i32"]],["vec"]]],[11,"max_homology_degree","","",40,[[["u32"],["self"]],["i32"]]],[11,"algebra","","",42,[[["self"]],["arc"]]],[11,"min_degree","","",42,[[["self"]],["i32"]]],[11,"zero_module","","",42,[[["self"]],["arc"]]],[11,"module","","",42,[[["u32"],["self"]],["arc"]]],[11,"differential","","",42,[[["u32"],["self"]],["arc"]]],[11,"compute_through_bidegree","","",42,[[["u32"],["self"],["i32"]]]],[11,"set_homology_basis","","",42,[[["u32"],["usize"],["i32"],["self"],["vec",["usize"]]]]],[11,"homology_basis","","",42,[[["u32"],["self"],["i32"]],["vec"]]],[11,"max_homology_degree","","",42,[[["u32"],["self"]],["i32"]]],[11,"algebra","ext::resolution","",54,[[["self"]],["arc"]]],[11,"module","","",54,[[["u32"],["self"]],["arc"]]],[11,"zero_module","","",54,[[["self"]],["arc"]]],[11,"min_degree","","",54,[[["self"]],["i32"]]],[11,"set_homology_basis","","",54,[[["u32"],["usize"],["i32"],["self"],["vec",["usize"]]]]],[11,"homology_basis","","",54,[[["u32"],["self"],["i32"]],["vec"]]],[11,"homology_dimension","","",54,[[["u32"],["self"],["i32"]],["usize"]]],[11,"max_homology_degree","","",54,[[["u32"],["self"]],["i32"]]],[11,"differential","","",54,[[["u32"],["self"]],["arc"]]],[11,"compute_through_bidegree","","",54,[[["u32"],["self"],["i32"]]]],[11,"target","ext::chain_complex","",40,[[["self"]],["arc"]]],[11,"chain_map","","This currently crashes if `s` is greater than the s degree…",40,[[["u32"],["self"]],["arc"]]],[11,"target","","",42,[[["self"]],["arc"]]],[11,"chain_map","","",42,[[["u32"],["self"]],["arc"]]],[11,"target","ext::resolution","",54,[[["self"]],["arc"]]],[11,"chain_map","","",54,[[["u32"],["self"]],["arc"]]],[11,"max_s","ext::chain_complex","",41,[[["self"]],["u32"]]],[11,"max_s","","",40,[[["self"]],["u32"]]],[11,"unit_chain_complex","ext","",63,[[["arc"]],["self"]]],[11,"from","ext::chain_complex","",41,[[["finiteaugmentedchaincomplex"]],["finitechaincomplex"]]],[11,"clone","ext::resolution","",55,[[["self"]],["cocycle"]]],[11,"fmt","ext::utils","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"description","","",61,[[["self"]],["str"]]],[11,"source","ext::chain_complex::hom_complex","",46,[[["self"]],["arc"]]],[11,"target","","",46,[[["self"]],["arc"]]],[11,"degree_shift","","",46,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","At the moment, this is off by a sign. However, we only use…",46,[[["u32"],["usize"],["i32"],["fpvector"],["self"]]]],[11,"kernel","","",46,[[["self"],["i32"]],["subspace"]]],[11,"quasi_inverse","","",46,[[["self"],["i32"]],["quasiinverse"]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",46,[[["self"],["i32"]]]],[11,"apply_quasi_inverse","","",46,[[["fpvector"],["i32"],["fpvector"],["self"]]]],[11,"source","ext::chain_complex::tensor_product_chain_complex","",47,[[["self"]],["arc"]]],[11,"target","","",47,[[["self"]],["arc"]]],[11,"degree_shift","","",47,[[["self"]],["i32"]]],[11,"apply_to_basis_element","","At the moment, this is off by a sign. However, we only use…",47,[[["u32"],["usize"],["i32"],["fpvector"],["self"]]]],[11,"kernel","","",47,[[["self"],["i32"]],["subspace"]]],[11,"quasi_inverse","","",47,[[["self"],["i32"]],["quasiinverse"]]],[11,"compute_kernels_and_quasi_inverses_through_degree","","",47,[[["self"],["i32"]]]],[11,"apply_quasi_inverse","","",47,[[["fpvector"],["i32"],["fpvector"],["self"]]]],[11,"load","ext::resolution","",54,[[],["result"]]],[11,"load","","",57,[[],["result"]]],[11,"save","","",54,[[["self"]],["result"]]],[11,"save","","",57,[[["self"]],["result"]]],[11,"new","ext::module::block_structure","",1,[[["bivec"]],["blockstructure"]]],[11,"generator_to_block","","",1,[[["usize"],["self"],["i32"]],["blockstart"]]],[11,"generator_basis_elt_to_index","","",1,[[["usize"],["i32"],["self"]],["usize"]]],[11,"index_to_generator_basis_elt","","",1,[[["self"],["usize"]],["generatorbasiseltpair"]]],[11,"add_block","","",1,[[["fpvector"],["u32"],["usize"],["i32"],["self"],["fpvector"]]]],[11,"new","ext::steenrod_evaluator","",8,[[["validprime"]],["steenrodcalculator"]]],[11,"compute_basis","","",8,[[["self"],["i32"]]]],[11,"evaluate_adem_to_string","","",8,[[["str"],["self"]],[["string"],["box",["error"]],["result",["string","box"]]]]],[11,"evaluate_milnor_to_string","","",8,[[["str"],["self"]],[["string"],["box",["error"]],["result",["string","box"]]]]],[11,"evaluate_adem","","",8,[[["str"],["self"]],[["result",["box"]],["box",["error"]]]]],[11,"evaluate_milnor","","",8,[[["str"],["self"]],[["result",["box"]],["box",["error"]]]]],[11,"new","ext::module::homomorphism","",13,[[["arc"],["i32"],["arc"]],["boundedmodulehomomorphism"]]],[11,"from_matrices","","",13,[[["bivec",["matrix"]],["arc"],["i32"],["matrix"],["arc"]],["boundedmodulehomomorphism"]]],[11,"from","","",13,[[["f"]],["boundedmodulehomomorphism"]]],[11,"replace_source","","This function replaces the source of the…",13,[[["arc"]],["boundedmodulehomomorphism"]]],[11,"replace_target","","See `replace_source`",13,[[["arc"]],["boundedmodulehomomorphism"]]],[11,"new","","",17,[[["freemodule"],["i32"],["arc"],["arc",["freemodule"]]],["freemodulehomomorphism"]]],[11,"degree_shift","","",17,[[["self"]],["i32"]]],[11,"min_degree","","",17,[[["self"]],["i32"]]],[11,"next_degree","","",17,[[["self"]],["i32"]]],[11,"output","","",17,[[["usize"],["self"],["i32"]],["fpvector"]]],[11,"extend_by_zero_safe","","",17,[[["self"],["i32"]]]],[11,"extend_by_zero","","",17,[[["i32"],["self"],["mutexguard"]]]],[11,"add_generators_from_big_vector","","",17,[[["mutexguard"],["i32"],["self"],["fpvector"]]]],[11,"add_generators_from_matrix_rows","","",17,[[["mutexguard"],["i32"],["self"],["matrix"]]]],[11,"apply_to_generator","","",17,[[["u32"],["usize"],["i32"],["self"],["fpvector"]]]],[11,"apply_to_basis_element_with_table","","",17,[[["u32"],["usize"],["i32"],["freemoduletableentry"],["self"],["fpvector"]]]],[11,"get_matrix","","",17,[[["matrix"],["self"],["i32"]]]],[11,"get_matrix_with_table","","Arguments * `degree` - The internal degree of the target…",17,[[["i32"],["matrix"],["self"],["freemoduletableentry"]]]],[11,"lock","","",17,[[["self"]],[["mutexguard",["rawmutex"]],["rawmutex"]]]],[11,"set_kernel","","",17,[[["mutexguard"],["i32"],["subspace"],["self"]]]],[11,"set_quasi_inverse","","",17,[[["mutexguard"],["i32"],["self"],["quasiinverse"]]]],[11,"new","","",18,[[["arc"],["i32"],["arc"]],["genericzerohomomorphism"]]],[11,"new","","",19,[[["arc",["freemodulehomomorphism"]],["hommodule"],["arc",["hommodule"]],["freemodulehomomorphism",["freemodule"]]],["hompullback"]]],[11,"new","","",20,[[["quotientmodule"],["arc"],["arc",["quotientmodule"]],["arc",["quotientmodule"]],["quotientmodule"]],["quotienthomomorphism"]]],[11,"new","","",21,[[["arc"],["quotientmodule"],["arc"],["arc",["quotientmodule"]]],["quotienthomomorphismsource"]]],[11,"new","","",22,[[["arc",["truncatedmodule"]],["truncatedmodule"],["arc",["truncatedmodule"]],["arc"],["truncatedmodule"]],["truncatedhomomorphism"]]],[11,"new","","",23,[[["arc",["truncatedmodule"]],["truncatedmodule"],["arc"],["arc"]],["truncatedhomomorphismsource"]]],[11,"test_equal","ext::module","",24,[[["finitedimensionalmodule"],["self"]],[["result",["string"]],["string"]]]],[11,"new","","",24,[[["bivec",["usize"]],["usize"],["arc"],["string"]],["finitedimensionalmodule"]]],[11,"set_basis_element_name","","",24,[[["usize"],["i32"],["self"],["string"]]]],[11,"add_generator","","",24,[[["string"],["self"],["i32"]]]],[11,"string_to_basis_element","","",24,[[["str"],["self"]],["option"]]],[11,"set_action_vector","","",24,[[["fpvector"],["usize"],["i32"],["self"]]]],[11,"set_action","","",24,[[["u32"],["usize"],["i32"],["vec",["u32"]],["self"]]]],[11,"action","","This function will panic if you call it with input such…",24,[[["usize"],["i32"],["self"]],["fpvector"]]],[11,"action_mut","","This function will panic if you call it with input such…",24,[[["usize"],["i32"],["self"]],["fpvector"]]],[11,"from_json","","",24,[[["arc"],["value"]],["finitedimensionalmodule"]]],[11,"to_json","","",24,[[["value"],["self"]]]],[11,"parse_action","","",24,[[["str"],["hashmap"],["self"],["bool"]],[["genericerror"],["result",["genericerror"]]]]],[11,"parse_element","","",24,[[["str"],["i32"],["self"],["fpvector"]],[["genericerror"],["result",["genericerror"]]]]],[11,"check_validity","","",24,[[["self"],["i32"]],[["modulefailedrelationerror"],["result",["modulefailedrelationerror"]]]]],[11,"extend_actions","","",24,[[["self"],["i32"]]]],[11,"minimal_actions_to_json","","",24,[[["self"]],["value"]]],[11,"to_minimal_json","","",24,[[["self"]],["value"]]],[11,"actions_to_json","","",24,[[["self"]],["value"]]],[11,"gens_to_json","","",24,[[["self"]],["value"]]],[11,"from_json","","",25,[[["steenrodalgebra"],["value"],["arc",["steenrodalgebra"]]],[["finitemodule"],["box",["error"]],["result",["finitemodule","box"]]]]],[11,"to_json","","",25,[[["value"],["self"]]]],[11,"type_","","",25,[[["self"]],["str"]]],[11,"is_real_projective_space","","",25,[[["self"]],["bool"]]],[11,"is_fp_module","","",25,[[["self"]],["bool"]]],[11,"is_fd_module","","",25,[[["self"]],["bool"]]],[11,"into_real_projective_space","","",25,[[],[["option",["realprojectivespace"]],["realprojectivespace"]]]],[11,"into_fp_module","","",25,[[],[["option",["finitelypresentedmodule"]],["finitelypresentedmodule",["steenrodalgebra"]]]]],[11,"into_fd_module","","",25,[[],[["finitedimensionalmodule",["steenrodalgebra"]],["option",["finitedimensionalmodule"]]]]],[11,"as_real_projective_space","","",25,[[["self"]],[["option",["realprojectivespace"]],["realprojectivespace"]]]],[11,"as_fp_module","","",25,[[["self"]],[["option",["finitelypresentedmodule"]],["finitelypresentedmodule"]]]],[11,"as_fd_module","","",25,[[["self"]],[["finitedimensionalmodule"],["option",["finitedimensionalmodule"]]]]],[11,"new","","",26,[[["arc"],["i32"],["string"]],["finitelypresentedmodule"]]],[11,"add_generators","","",26,[[["vec",["string"]],["i32"],["self"],["string"]]]],[11,"add_relations","","",26,[[["matrix"],["self"],["i32"]]]],[11,"from_json","","",26,[[["arc"],["value"]],["finitelypresentedmodule"]]],[11,"to_json","","",26,[[["value"],["self"]]]],[11,"relations_to_json","","",26,[[["self"]],["value"]]],[11,"gen_idx_to_fp_idx","","",26,[[["usize"],["self"],["i32"]],["isize"]]],[11,"fp_idx_to_gen_idx","","",26,[[["usize"],["self"],["i32"]],["usize"]]],[11,"new","","",27,[[["arc"],["i32"],["string"]],["freemodule"]]],[11,"lock","","",27,[[["self"]],[["mutexguard",["rawmutex"]],["rawmutex"]]]],[11,"max_computed_degree","","",27,[[["self"]],["i32"]]],[11,"number_of_gens_in_degree","","",27,[[["self"],["i32"]],["usize"]]],[11,"construct_table","","",27,[[["self"],["i32"]],["freemoduletableentry"]]],[11,"dimension_with_table","","",27,[[["freemoduletableentry"]],["usize"]]],[11,"add_generators","","",27,[[["vec",["string"]],["mutexguard"],["i32"],["freemoduletableentry"],["usize"],["self"],["option",["vec"]]]]],[11,"generator_offset","","",27,[[["usize"],["self"],["i32"]],["usize"]]],[11,"operation_generator_to_index","","",27,[[["usize"],["i32"],["self"]],["usize"]]],[11,"operation_generator_pair_to_idx","","",27,[[["operationgeneratorpair"],["self"]],["usize"]]],[11,"index_to_op_gen","","",27,[[["usize"],["self"],["i32"]],["operationgeneratorpair"]]],[11,"element_to_json","","",27,[[["fpvector"],["self"],["i32"]],["value"]]],[11,"add_generators_immediate","","",27,[[["usize"],["i32"],["vec",["string"]],["option",["vec"]],["self"]]]],[11,"add_num_generators","","",27,[[["mutexguard"],["i32"],["usize"],["option",["vec"]],["self"],["vec",["string"]]]]],[11,"extend_by_zero","","",27,[[["self"],["i32"]]]],[11,"get_degrees_with_gens","","",27,[[["self"],["i32"]],[["vec",["i32"]],["i32"]]]],[11,"get_max_generator_degree","","",27,[[["self"]],["i32"]]],[11,"new","","",30,[[["arc"],["freemodule"],["arc",["freemodule"]]],["hommodule"]]],[11,"source","","",30,[[["self"]],[["freemodule"],["arc",["freemodule"]]]]],[11,"target","","",30,[[["self"]],["arc"]]],[11,"element_to_homomorphism","","",30,[[["fpvector"],["self"],["i32"]],["freemodulehomomorphism"]]],[11,"evaluate_basis_map_on_element","","",30,[[["fpvector"],["u32"],["usize"],["i32"],["self"],["fpvector"]]]],[11,"new","","",31,[[["arc"]],["quotientmodule"]]],[11,"quotient","","",31,[[["fpvector"],["self"],["i32"]]]],[11,"quotient_basis_elements","","",31,[[["self"],["i32"]]]],[11,"quotient_vectors","","",31,[[["fpvector"],["i32"],["self"],["vec",["fpvector"]]]]],[11,"quotient_all","","",31,[[["self"],["i32"]]]],[11,"act_on_original_basis","","",31,[[["u32"],["usize"],["i32"],["self"],["fpvector"]]]],[11,"reduce","","",31,[[["fpvector"],["self"],["i32"]]]],[11,"old_basis_to_new","","",31,[[["fpvector"],["i32"],["fpvector"],["self"]]]],[11,"new","","",32,[[["i32"],["steenrodalgebra"],["arc",["steenrodalgebra"]],["option",["i32"]],["bool"]],["realprojectivespace"]]],[11,"max_degree","","",32,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"from_json","","",32,[[["steenrodalgebra"],["value"],["arc",["steenrodalgebra"]]],[["box",["error"]],["result",["realprojectivespace","box"]],["realprojectivespace"]]]],[11,"to_json","","",32,[[["value"],["self"]]]],[11,"new","","",33,[[["arc"],["vec",["arc"]],["arc"],["i32"]],["summodule"]]],[11,"get_module_num","","",33,[[["usize"],["self"],["i32"]],["usize"]]],[11,"offset","","",33,[[["usize"],["self"],["i32"]],["usize"]]],[11,"new","","",34,[[["arc"],["arc"]],["tensormodule"]]],[11,"seek_module_num","","",34,[[["usize"],["self"],["i32"]],["i32"]]],[11,"offset","","",34,[[["self"],["i32"]],["usize"]]],[11,"new","","",35,[[["arc"],["i32"]],["truncatedmodule"]]]],"p":[[3,"GeneratorBasisEltPair"],[3,"BlockStructure"],[3,"BlockStart"],[4,"AlgebraBasisElt"],[4,"AlgebraParseNode"],[4,"ModuleParseNode"],[4,"BocksteinOrSq"],[3,"ParseError"],[3,"SteenrodCalculator"],[3,"UnknownBasisElementError"],[8,"ModuleHomomorphism"],[8,"ZeroHomomorphism"],[8,"IdentityHomomorphism"],[3,"BoundedModuleHomomorphism"],[3,"FiniteModuleHomomorphism"],[3,"FPModuleHomomorphism"],[8,"FPModuleT"],[3,"FreeModuleHomomorphism"],[3,"GenericZeroHomomorphism"],[3,"HomPullback"],[3,"QuotientHomomorphism"],[3,"QuotientHomomorphismSource"],[3,"TruncatedHomomorphism"],[3,"TruncatedHomomorphismSource"],[3,"FDModule"],[4,"FiniteModule"],[3,"FPModule"],[3,"FreeModule"],[3,"FreeModuleTableEntry"],[3,"OperationGeneratorPair"],[3,"HomModule"],[3,"QuotientModule"],[3,"RealProjectiveSpace"],[3,"SumModule"],[3,"TensorModule"],[3,"TruncatedModule"],[8,"ZeroModule"],[8,"BoundedModule"],[8,"Module"],[3,"ModuleFailedRelationError"],[3,"FiniteAugmentedChainComplex"],[3,"FiniteChainComplex"],[3,"TensorChainComplex"],[3,"ChainMap"],[4,"ChainComplexGrading"],[3,"HomChainComplex"],[3,"HomChainMap"],[3,"TensorChainMap"],[8,"FreeChainComplex"],[8,"ChainComplex"],[8,"CochainComplex"],[8,"AugmentedChainComplex"],[8,"BoundedChainComplex"],[8,"UnitChainComplex"],[3,"ResolutionInner"],[3,"Cocycle"],[3,"SelfMap"],[3,"Resolution"],[3,"ResolutionHomomorphism"],[3,"Config"],[3,"AlgebraicObjectsBundle"],[3,"ModuleFileNotFoundError"],[3,"DegreeError"],[6,"CCC"]]};
searchIndex["fp"] = {"doc":"","i":[[0,"prime","fp","",null,null],[3,"ValidPrime","fp::prime","",null,null],[12,"p","","",0,null],[5,"is_valid_prime","","",null,[[["u32"]],["bool"]]],[5,"inverse","","",null,[[["validprime"],["u32"]],["u32"]]],[5,"minus_one_to_the_n","","",null,[[["u32"],["i32"]],["u32"]]],[5,"direct_binomial","","This uses a lookup table for n choose k when n and k are…",null,[[["validprime"],["u32"]],["u32"]]],[5,"integer_power","","Computes b^e.",null,[[["u32"]],["u32"]]],[5,"power_mod","","Compute b^e mod p.",null,[[["u32"]],["u32"]]],[5,"logp","","",null,[[["u32"]],["u32"]]],[5,"multinomial2","","",null,[[],["u32"]]],[5,"binomial2","","",null,[[["i32"]],["u32"]]],[5,"multinomial_odd","","",null,[[["validprime"]],["u32"]]],[5,"binomial_odd","","",null,[[["validprime"],["i32"]],["u32"]]],[5,"multinomial","","This computes the multinomial coefficient $\\binom{n}{l_1…",null,[[["validprime"]],["u32"]]],[5,"binomial","","",null,[[["validprime"],["i32"]],["u32"]]],[7,"INVERSE_TABLE","","",null,null],[7,"BINOMIAL_TABLE","","",null,null],[17,"NUM_PRIMES","","",null,null],[17,"MAX_PRIME","","",null,null],[17,"NOT_A_PRIME","","",null,null],[17,"MAX_MULTINOMIAL_LEN","","",null,null],[17,"PRIME_TO_INDEX_MAP","","",null,null],[11,"new","","",0,[[["u32"]],["self"]]],[11,"try_new","","",0,[[["u32"]],["option"]]],[0,"vector","fp","An `FpVector` is a vector with entries in Fp. We use this…",null,null],[3,"LimbBitIndexPair","fp::vector","",null,null],[12,"limb","","",1,null],[12,"bit_index","","",1,null],[3,"VectorContainer","","",null,null],[12,"dimension","","",2,null],[12,"slice_start","","",2,null],[12,"slice_end","","",2,null],[12,"limbs","","",2,null],[3,"FpVector2","","",null,null],[12,"vector_container","","",3,null],[3,"FpVector3","","",null,null],[12,"vector_container","","",4,null],[3,"FpVector5","","",null,null],[12,"vector_container","","",5,null],[3,"FpVectorGeneric","","",null,null],[12,"p","","",6,null],[12,"vector_container","","",6,null],[3,"FpVectorIterator","","",null,null],[12,"limbs","","",7,null],[12,"bit_length","","",7,null],[12,"bit_mask","","",7,null],[12,"entries_per_64_bits_m_1","","",7,null],[12,"limb_index","","",7,null],[12,"entries_left","","",7,null],[12,"cur_limb","","",7,null],[12,"counter","","",7,null],[3,"FpVectorSlice","","",null,null],[12,"old_slice","","",8,null],[12,"inner","","",8,null],[3,"FpVectorMask","","An FpVectorMask encodes a subset of the basis elements of…",null,null],[12,"p","","",9,null],[12,"dimension","","",9,null],[12,"masks","","",9,null],[4,"FpVector","","",null,null],[13,"FpVector2","","",10,null],[13,"FpVector3","","",10,null],[13,"FpVector5","","",10,null],[13,"FpVectorGeneric","","",10,null],[5,"bit_length","","",null,[[["validprime"]],["usize"]]],[5,"bitmask","","",null,[[["validprime"]],["u64"]]],[5,"entries_per_64_bits","","",null,[[["validprime"]],["usize"]]],[5,"initialize_limb_bit_index_table","","",null,[[["validprime"]]]],[5,"limb_bit_index_pair","","",null,[[["validprime"],["usize"]],["limbbitindexpair"]]],[7,"BIT_LENGHTS","","",null,null],[7,"BITMASKS","","",null,null],[7,"ENTRIES_PER_64_BITS","","",null,null],[7,"LIMB_BIT_INDEX_TABLE","","This table tells us which limb and which bitfield of that…",null,null],[7,"LIMB_BIT_INDEX_ONCE_TABLE","","",null,null],[17,"MAX_DIMENSION","","",null,null],[8,"FpVectorT","","",null,null],[10,"reduce_limbs","","",11,[[["self"],["usize"]]]],[10,"vector_container","","",11,[[["self"]],["vectorcontainer"]]],[10,"vector_container_mut","","",11,[[["self"]],["vectorcontainer"]]],[10,"prime","","",11,[[["self"]],["validprime"]]],[11,"dimension","","",11,[[["self"]],["usize"]]],[11,"offset","","",11,[[["self"]],["usize"]]],[11,"min_index","","",11,[[["self"]],["usize"]]],[11,"slice","","",11,[[["self"]]]],[11,"set_slice","","",11,[[["self"],["usize"]]]],[11,"restore_slice","","",11,[[["self"]]]],[11,"clear_slice","","",11,[[["self"]]]],[11,"into_slice","","Drops every element in the fp_vector that is not in the…",11,[[["self"]]]],[11,"min_limb","","",11,[[["self"]],["usize"]]],[11,"max_limb","","",11,[[["self"]],["usize"]]],[11,"limbs","","",11,[[["self"]],["vec"]]],[11,"limbs_mut","","",11,[[["self"]],["vec"]]],[11,"limb_mask","","",11,[[["self"],["usize"]],["u64"]]],[11,"set_to_zero_pure","","",11,[[["self"]]]],[11,"set_to_zero","","",11,[[["self"]]]],[11,"shift_assign","","",11,[[["self"],["fpvector"]]]],[11,"assign","","",11,[[["self"],["fpvector"]]]],[11,"is_zero_pure","","",11,[[["self"]],["bool"]]],[11,"is_zero","","",11,[[["self"]],["bool"]]],[11,"entry","","",11,[[["self"],["usize"]],["u32"]]],[11,"set_entry","","",11,[[["self"],["usize"],["u32"]]]],[11,"add_basis_element","","",11,[[["self"],["usize"],["u32"]]]],[11,"unpack","","Unpacks an FpVector onto an array slice. note that the…",11,[[["self"]]]],[11,"to_vector","","",11,[[["self"]],[["u32"],["vec",["u32"]]]]],[11,"pack","","",11,[[["self"]]]],[11,"add_tensor","","`coeff` need not be reduced mod p. Adds v otimes w to self.",11,[[["u32"],["usize"],["self"],["fpvector"]]]],[11,"add","","Adds `c` * `other` to `self`. `other` must have the same…",11,[[["self"],["fpvector"],["u32"]]]],[11,"shift_add","","",11,[[["self"],["fpvector"],["u32"]]]],[11,"shift_right_add","","",11,[[["self"],["fpvector"],["u32"]]]],[11,"shift_left_add","","",11,[[["self"],["fpvector"],["u32"]]]],[11,"scale","","",11,[[["self"],["u32"]]]],[11,"new","","",10,[[["validprime"],["usize"]],["fpvector"]]],[11,"extend_dimension","","This function ensures the length of the vector is at least…",10,[[["self"],["usize"]]]],[11,"from_vec","","",10,[[["validprime"]],["fpvector"]]],[11,"add_limb","","",10,[[["validprime"],["u32"],["u64"]],["u64"]]],[11,"number_of_limbs","","",10,[[["validprime"],["usize"]],["usize"]]],[11,"padded_dimension","","",10,[[["validprime"],["usize"]],["usize"]]],[11,"set_scratch_vector_size","","",10,[[["self"],["usize"]]]],[11,"iter","","",10,[[["self"]],["fpvectoriterator"]]],[11,"pack_limb","","",10,[[["validprime"],["usize"],["vec"]],["usize"]]],[11,"unpack_limb","","",10,[[["validprime"],["usize"]],["usize"]]],[11,"borrow_slice","","",10,[[["self"],["usize"]],["fpvectorslice"]]],[11,"new","","",7,[[["fpvector"]],["fpvectoriterator"]]],[11,"skip_n","","",7,[[["self"],["usize"]]]],[11,"new","","",9,[[["validprime"],["usize"]],["self"]]],[11,"set_zero","","",9,[[["self"]]]],[11,"set_mask","","If `on` is true, we add the `i`th basis element to the…",9,[[["self"],["usize"],["bool"]]]],[11,"apply","","This projects `target` onto the subspace spanned by the…",9,[[["fpvector"],["self"]]]],[0,"matrix","fp","",null,null],[3,"Matrix","fp::matrix","A matrix! In particular, a matrix with values in F_p. The…",null,null],[12,"p","","",12,null],[12,"rows","","",12,null],[12,"columns","","",12,null],[12,"slice_row_start","","",12,null],[12,"slice_row_end","","",12,null],[12,"slice_col_start","","",12,null],[12,"slice_col_end","","",12,null],[12,"vectors","","",12,null],[3,"Subspace","","A subspace of a vector space. # Fields * `matrix` - A…",null,null],[12,"matrix","","",13,null],[12,"column_to_pivot_row","","",13,null],[3,"QuasiInverse","","Given a matrix M, a quasi-inverse Q is a map from the…",null,null],[12,"image","","",14,null],[12,"preimage","","",14,null],[3,"AugmentedMatrix3","","This models an augmented matrix.",null,null],[12,"end","","",15,null],[12,"start","","",15,null],[12,"inner","","",15,null],[3,"AugmentedMatrix2","","This models an augmented matrix.",null,null],[12,"end","","",16,null],[12,"start","","",16,null],[12,"inner","","",16,null],[3,"MatrixSlice","","",null,null],[12,"0","","",17,null],[11,"new","","Produces a new matrix over F_p with the specified number…",12,[[["validprime"],["usize"]],["matrix"]]],[11,"from_rows","","Produces a matrix from a list of rows. If `vectors.len()…",12,[[["validprime"],["fpvector"],["usize"],["vec",["fpvector"]]],["self"]]],[11,"from_vec","","Produces a Matrix from an `&[Vec<u32>]` object. If the…",12,[[["validprime"]],["matrix"]]],[11,"to_vec","","",12,[[["self"]],[["vec",["vec"]],["vec",["u32"]]]]],[11,"augmented_from_vec","","Produces a padded augmented matrix from an `&[Vec<u32>]`…",12,[[["validprime"]]]],[11,"set_identity","","",12,[[["self"],["usize"]]]],[11,"prime","","",12,[[["self"]],["validprime"]]],[11,"rows","","Gets the number of rows in the matrix.",12,[[["self"]],["usize"]]],[11,"columns","","Gets the number of columns in the matrix.",12,[[["self"]],["usize"]]],[11,"set_slice","","Sets the slice on the matrix. Restricts to the submatrix…",12,[[["self"],["usize"]]]],[11,"clear_slice","","Un-slice the matrix.",12,[[["self"]]]],[11,"set_row_slice","","",12,[[["self"],["usize"]]]],[11,"clear_row_slice","","",12,[[["self"]]]],[11,"into_slice","","",12,[[],["self"]]],[11,"into_vec","","",12,[[],[["vec",["fpvector"]],["fpvector"]]]],[11,"iter","","",12,[[["self"]],[["fpvector"],["iter",["fpvector"]]]]],[11,"iter_mut","","",12,[[["self"]],[["fpvector"],["itermut",["fpvector"]]]]],[11,"swap_rows","","",12,[[["self"],["usize"]]]],[11,"row_op","","",12,[[["self"],["usize"],["u32"]]]],[11,"row_reduce","","Perform row reduction to reduce it to reduced row echelon…",12,[[["self"],["vec"]]]],[11,"row_reduce_offset","","",12,[[["self"],["vec"],["usize"]]]],[11,"find_pivots_permutation","","This is very similar to row_reduce, except we only need to…",12,[[["self"],["iterator"]],[["usize"],["vec",["usize"]]]]],[11,"row_reduce_permutation","","",12,[[["self"],["vec"],["t"]]]],[11,"new","","",13,[[["validprime"],["usize"]],["self"]]],[11,"subquotient","","Given a chain of subspaces `subspace` < `space` <…",13,[[["option",["subspace"]],["usize"],["subspace"]],[["usize"],["vec",["usize"]]]]],[11,"entire_space","","",13,[[["validprime"],["usize"]],["self"]]],[11,"add_vector","","This adds a vector to the subspace. This function assumes…",13,[[["self"],["fpvector"]]]],[11,"add_vectors","","",13,[[["self"]]]],[11,"add_basis_elements","","",13,[[["self"]]]],[11,"reduce","","Projects a vector to a complement of the subspace. The…",13,[[["fpvector"],["self"]]]],[11,"shift_reduce","","A version of `reduce` that doesn't require the vectors to…",13,[[["fpvector"],["self"]]]],[11,"row_reduce","","",13,[[["self"]]]],[11,"contains","","",13,[[["self"],["fpvector"]],["bool"]]],[11,"dimension","","",13,[[["self"]],["usize"]]],[11,"basis","","Returns a basis of the subspace.",13,[[["self"]]]],[11,"set_to_zero","","Sets the subspace to be the zero subspace.",13,[[["self"]]]],[11,"set_to_entire","","Sets the subspace to be the entire subspace.",13,[[["self"]]]],[11,"prime","","",14,[[["self"]],["validprime"]]],[11,"apply","","Apply the quasi-inverse to an input vector and add a…",14,[[["fpvector"],["u32"],["self"],["fpvector"]]]],[11,"set_to_zero","","",12,[[["self"]]]],[11,"find_first_row_in_block","","",12,[[["usize"],["self"]],["usize"]]],[11,"compute_kernel","","Computes the kernel from an augmented matrix in rref. To…",12,[[["self"],["usize"]],["subspace"]]],[11,"compute_quasi_inverse","","Computes the quasi-inverse of a matrix given a rref of…",12,[[["usize"],["self"]],["quasiinverse"]]],[11,"compute_quasi_inverses","","This function computes quasi-inverses for matrices A, B…",12,[[["usize"],["self"]]]],[11,"get_image","","",12,[[["self"],["usize"]],["subspace"]]],[11,"extend_to_surjection","","Given a matrix M in rref, add rows to make the matrix…",12,[[["self"],["usize"]],[["usize"],["vec",["usize"]]]]],[11,"extend_image_to_desired_image","","Given a matrix in rref, say [A|B|C], where B lies between…",12,[[["usize"],["self"],["subspace"]],[["usize"],["vec",["usize"]]]]],[11,"extend_image","","Extends the image of a matrix to either the whole…",12,[[["option"],["usize"],["self"]],[["usize"],["vec",["usize"]]]]],[11,"apply","","Applies a matrix to a vector.",12,[[["fpvector"],["u32"],["self"],["fpvector"]]]],[11,"new","","",15,[[["validprime"],["usize"]],["self"]]],[11,"segment","","",15,[[["self"],["usize"]],["matrixslice"]]],[11,"row_segment","","",15,[[["self"],["usize"]],["fpvectorslice"]]],[11,"into_matrix","","",15,[[],["matrix"]]],[11,"new","","",16,[[["validprime"],["usize"]],["self"]]],[11,"segment","","",16,[[["self"],["usize"]],["matrixslice"]]],[11,"row_segment","","",16,[[["self"],["usize"]],["fpvectorslice"]]],[11,"into_matrix","","",16,[[],["matrix"]]],[11,"compute_quasi_inverse","","",16,[[["self"]],["quasiinverse"]]],[11,"compute_kernel","","",16,[[["self"]],["subspace"]]],[11,"compute_quasi_inverses","","",15,[[["self"]]]],[11,"from","fp::prime","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","fp::vector","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","fp::matrix","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"reduce_limbs","fp::vector","",10,[[["self"],["usize"]]]],[11,"vector_container","","",10,[[["self"]],["vectorcontainer"]]],[11,"vector_container_mut","","",10,[[["self"]],["vectorcontainer"]]],[11,"prime","","",10,[[["self"]],["validprime"]]],[11,"dimension","","",10,[[["self"]],["usize"]]],[11,"offset","","",10,[[["self"]],["usize"]]],[11,"min_index","","",10,[[["self"]],["usize"]]],[11,"slice","","",10,[[["self"]]]],[11,"set_slice","","",10,[[["self"],["usize"]]]],[11,"restore_slice","","",10,[[["self"]]]],[11,"clear_slice","","",10,[[["self"]]]],[11,"into_slice","","",10,[[["self"]]]],[11,"min_limb","","",10,[[["self"]],["usize"]]],[11,"max_limb","","",10,[[["self"]],["usize"]]],[11,"limbs","","",10,[[["self"]],["vec"]]],[11,"limbs_mut","","",10,[[["self"]],["vec"]]],[11,"limb_mask","","",10,[[["self"],["usize"]],["u64"]]],[11,"set_to_zero_pure","","",10,[[["self"]]]],[11,"set_to_zero","","",10,[[["self"]]]],[11,"shift_assign","","",10,[[["self"],["fpvector"]]]],[11,"assign","","",10,[[["self"],["fpvector"]]]],[11,"is_zero_pure","","",10,[[["self"]],["bool"]]],[11,"is_zero","","",10,[[["self"]],["bool"]]],[11,"entry","","",10,[[["self"],["usize"]],["u32"]]],[11,"set_entry","","",10,[[["self"],["usize"],["u32"]]]],[11,"add_basis_element","","",10,[[["self"],["usize"],["u32"]]]],[11,"unpack","","",10,[[["self"]]]],[11,"to_vector","","",10,[[["self"]],[["u32"],["vec",["u32"]]]]],[11,"pack","","",10,[[["self"]]]],[11,"add_tensor","","",10,[[["u32"],["usize"],["self"],["fpvector"]]]],[11,"add","","",10,[[["self"],["fpvector"],["u32"]]]],[11,"shift_add","","",10,[[["self"],["fpvector"],["u32"]]]],[11,"shift_right_add","","",10,[[["self"],["fpvector"],["u32"]]]],[11,"shift_left_add","","",10,[[["self"],["fpvector"],["u32"]]]],[11,"scale","","",10,[[["self"],["u32"]]]],[11,"reduce_limbs","","",3,[[["self"],["usize"]]]],[11,"prime","","",3,[[["self"]],["validprime"]]],[11,"vector_container","","",3,[[["self"]],["vectorcontainer"]]],[11,"vector_container_mut","","",3,[[["self"]],["vectorcontainer"]]],[11,"add_basis_element","","",3,[[["self"],["usize"],["u32"]]]],[11,"reduce_limbs","","",4,[[["self"],["usize"]]]],[11,"prime","","",4,[[["self"]],["validprime"]]],[11,"vector_container","","",4,[[["self"]],["vectorcontainer"]]],[11,"vector_container_mut","","",4,[[["self"]],["vectorcontainer"]]],[11,"reduce_limbs","","",5,[[["self"],["usize"]]]],[11,"prime","","",5,[[["self"]],["validprime"]]],[11,"vector_container","","",5,[[["self"]],["vectorcontainer"]]],[11,"vector_container_mut","","",5,[[["self"]],["vectorcontainer"]]],[11,"reduce_limbs","","",6,[[["self"],["usize"]]]],[11,"prime","","",6,[[["self"]],["validprime"]]],[11,"vector_container","","",6,[[["self"]],["vectorcontainer"]]],[11,"vector_container_mut","","",6,[[["self"]],["vectorcontainer"]]],[11,"drop","","",8,[[["self"]]]],[11,"drop","fp::matrix","",17,[[["self"]]]],[11,"from","fp::vector","",10,[[["fpvector2"]],["fpvector"]]],[11,"from","","",10,[[["fpvector3"]],["fpvector"]]],[11,"from","","",10,[[["fpvector5"]],["fpvector"]]],[11,"from","","",10,[[["fpvectorgeneric"]],["fpvector"]]],[11,"next","","",7,[[["self"]],["option"]]],[11,"clone","fp::prime","",0,[[["self"]],["validprime"]]],[11,"clone","fp::vector","",1,[[["self"]],["limbbitindexpair"]]],[11,"clone","","",10,[[["self"]],["fpvector"]]],[11,"clone","","",2,[[["self"]],["vectorcontainer"]]],[11,"clone","","",3,[[["self"]],["fpvector2"]]],[11,"clone","","",4,[[["self"]],["fpvector3"]]],[11,"clone","","",5,[[["self"]],["fpvector5"]]],[11,"clone","","",6,[[["self"]],["fpvectorgeneric"]]],[11,"clone","fp::matrix","",12,[[["self"]],["matrix"]]],[11,"clone","","",13,[[["self"]],["subspace"]]],[11,"clone","","",14,[[["self"]],["quasiinverse"]]],[11,"eq","fp::prime","",0,[[["self"],["validprime"]],["bool"]]],[11,"ne","","",0,[[["self"],["validprime"]],["bool"]]],[11,"eq","fp::vector","",10,[[["self"]],["bool"]]],[11,"eq","fp::matrix","",12,[[["self"],["matrix"]],["bool"]]],[11,"ne","","",12,[[["self"],["matrix"]],["bool"]]],[11,"deref","fp::prime","",0,[[["self"]]]],[11,"deref","fp::vector","",8,[[["self"]],["fpvector"]]],[11,"deref","fp::matrix","",12,[[["self"]]]],[11,"deref","","",15,[[["self"]],["matrix"]]],[11,"deref","","",16,[[["self"]],["matrix"]]],[11,"deref","","",17,[[["self"]],["matrix"]]],[11,"deref_mut","fp::vector","",8,[[["self"]],["fpvector"]]],[11,"deref_mut","fp::matrix","",12,[[["self"]]]],[11,"deref_mut","","",15,[[["self"]],["matrix"]]],[11,"deref_mut","","",16,[[["self"]],["matrix"]]],[11,"deref_mut","","",17,[[["self"]],["matrix"]]],[11,"fmt","fp::prime","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","fp::vector","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","fp::matrix","",12,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","fp::prime","",0,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","fp::vector","",10,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","fp::matrix","",12,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"add_assign","fp::vector","",10,[[["self"],["fpvector"]]]],[11,"index","fp::matrix","",12,[[["self"],["usize"]]]],[11,"index_mut","","",12,[[["self"],["usize"]]]],[11,"try_into","fp::vector","",10,[[],[["result",["fpvector2"]],["fpvector2"]]]],[11,"try_into","","",10,[[],[["result",["fpvector3"]],["fpvector3"]]]],[11,"try_into","","",10,[[],[["result",["fpvector5"]],["fpvector5"]]]],[11,"try_into","","",10,[[],[["result",["fpvectorgeneric"]],["fpvectorgeneric"]]]],[11,"save","","",10,[[["self"]],["result"]]],[11,"save","fp::matrix","",12,[[["self"]],["result"]]],[11,"save","","",13,[[["self"]],["result"]]],[11,"load","fp::vector","",10,[[["validprime"]],["result"]]],[11,"load","fp::matrix","",12,[[["validprime"]],["result"]]],[11,"load","","",13,[[["validprime"]],["result"]]]],"p":[[3,"ValidPrime"],[3,"LimbBitIndexPair"],[3,"VectorContainer"],[3,"FpVector2"],[3,"FpVector3"],[3,"FpVector5"],[3,"FpVectorGeneric"],[3,"FpVectorIterator"],[3,"FpVectorSlice"],[3,"FpVectorMask"],[4,"FpVector"],[8,"FpVectorT"],[3,"Matrix"],[3,"Subspace"],[3,"QuasiInverse"],[3,"AugmentedMatrix3"],[3,"AugmentedMatrix2"],[3,"MatrixSlice"]]};
searchIndex["once"] = {"doc":"","i":[[3,"OnceVec","once","",null,null],[12,"data","","",0,null],[3,"OnceBiVec","","",null,null],[12,"data","","",1,null],[12,"min_degree","","",1,null],[17,"USIZE_LEN","","",null,null],[11,"into_vec","","",0,[[],["vec"]]],[11,"from_vec","","",0,[[["vec"]],["self"]]],[11,"new","","",0,[[],["self"]]],[11,"with_capacity","","",0,[[["usize"]],["self"]]],[11,"len","","",0,[[["self"]],["usize"]]],[11,"is_empty","","",0,[[["self"]],["bool"]]],[11,"get","","",0,[[["self"],["usize"]],[["t"],["option"]]]],[11,"last","","",0,[[["self"]],[["t"],["option"]]]],[11,"reserve","","",0,[[["self"],["usize"]]]],[11,"reserve_exact","","",0,[[["self"],["usize"]]]],[11,"push","","",0,[[["self"],["t"]]]],[11,"iter","","",0,[[["self"]]]],[11,"new","","",1,[[["i32"]],["self"]]],[11,"from_vec","","",1,[[["vec"],["i32"]],["self"]]],[11,"from_bivec","","",1,[[["bivec"]],["self"]]],[11,"with_capacity","","",1,[[["i32"]],["self"]]],[11,"min_degree","","",1,[[["self"]],["i32"]]],[11,"max_degree","","This returns the largest degree in the bivector. This is…",1,[[["self"]],["i32"]]],[11,"len","","This returns the \"length\" of the bivector, defined to be…",1,[[["self"]],["i32"]]],[11,"is_empty","","",1,[[["self"]],["bool"]]],[11,"push","","",1,[[["self"],["t"]]]],[11,"get","","",1,[[["self"],["i32"]],[["t"],["option"]]]],[11,"last","","",1,[[["self"]],[["t"],["option"]]]],[11,"iter","","",1,[[["self"]]]],[11,"iter_enum","","",1,[[["self"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"into_iter","","",0,[[]]],[11,"clone","","",0,[[["self"]],["self"]]],[11,"clone","","",1,[[["self"]],["oncebivec"]]],[11,"default","","",0,[[],["self"]]],[11,"eq","","",0,[[["oncevec"],["self"]],["bool"]]],[11,"eq","","",1,[[["oncebivec"],["self"]],["bool"]]],[11,"ne","","",1,[[["oncebivec"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"index","","",0,[[["self"],["usize"]],["t"]]],[11,"index","","",0,[[["u32"],["self"]],["t"]]],[11,"index","","",1,[[["self"],["i32"]],["t"]]],[11,"index_mut","","",0,[[["self"],["usize"]],["t"]]],[11,"index_mut","","",0,[[["self"],["u32"]],["t"]]],[11,"index_mut","","",1,[[["self"],["i32"]],["t"]]],[11,"save","","",0,[[["self"]],["result"]]],[11,"save","","",1,[[["self"]],["result"]]],[11,"load","","",0,[[],["result"]]],[11,"load","","",1,[[],["result"]]]],"p":[[3,"OnceVec"],[3,"OnceBiVec"]]};
searchIndex["query"] = {"doc":"","i":[[5,"query","query","",null,[[["str"],["f"]],["display"]]],[5,"query_with_default","","",null,[[["str"],["display"],["f"]],["display"]]],[5,"query_with_default_no_default_indicated","","",null,[[["str"],["display"],["f"]],["display"]]],[5,"query_yes_no","","",null,[[["str"]],["bool"]]]],"p":[]};
searchIndex["saveload"] = {"doc":"This crate provides a simple interface for saving and…","i":[[0,"default_impl","saveload","",null,null],[8,"Save","","",null,null],[10,"save","","Example ``` # use saveload::{Save, Load}; # use…",0,[[["self"]],["result"]]],[8,"Load","","",null,null],[16,"AuxData","","The type of the auxiliary data needed for loading.",1,null],[10,"load","","The auxiliary data is a borrow. This is useful for…",1,[[],["result"]]]],"p":[[8,"Save"],[8,"Load"]]};
searchIndex["thread_token"] = {"doc":"","i":[[3,"TokenBucket","thread_token","A `TokenBucket` is a bucket containing a fixed number of…",null,null],[12,"max_threads","","",0,null],[12,"running_threads","","",0,null],[12,"condvar","","",0,null],[3,"Token","","A `Token` is what `TokenBucket::take_token` returns. The…",null,null],[12,"bucket","","",1,null],[11,"new","","Constructs a new `TokenBucket` with a fixed number of…",0,[[["usize"]],["self"]]],[11,"take_token","","Attempts to take a token from the bucket. This will block…",0,[[["self"]],["token"]]],[11,"recv_or_release","","This function attempts to read a message from `receiver`…",0,[[["option"],["self"],["token"]],["token"]]],[11,"recv2_or_release","","This function attempts to read a message from `receiver`…",0,[[["token"],["option"],["self"]],["token"]]],[11,"release_token","","",0,[[["self"]]]],[11,"release","","This function does not do anything. It simply takes…",1,[[]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"drop","","",1,[[["self"]]]]],"p":[[3,"TokenBucket"],[3,"Token"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);